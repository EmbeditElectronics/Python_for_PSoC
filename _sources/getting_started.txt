.. _getting-started-label:

Getting Started
===============
Here is everything you should need to get yourself moving with development on the PiSoC through the Raspberry Pi! 

.. _getting-started-pisoc:

Using the PiSoC
++++++++++++++++
If you're new to the PiSoC, it would greatly benefit you to read through `its documentation <https://github.com/EmbeditElectronics/PiSoC_Bootloader/blob/master/PiSoC_RevC_User_Guide.pdf>`_ before going any further.

:Note:

	Pay special attention to the sections discussing how to download a program to the board using the Bootloader Host Tool. However, if you do not intend to make modifications to the API, you do not need to reprogram the device. 


Program your PiSoC
+++++++++++++++++++
Once you know how to program the PiSoC, if you need to redownload the API, or if you intend to make firmware changes
Just `download the PSoC Creator project from git <https://github.com/EmbeditElectronics/psoc_2_pi/tree/master/PSoC%20Creator>`_, make your changes if desired, and download it to the PiSoC using the Bootloader host tool.

.. _getting-started-rpi:

Using the PiSoC with the Raspberry Pi
++++++++++++++++++++++++++++++++++++++
The following is necessary set up the PiSoC in the Raspberry Pi environment. First, it is suggested that you update and upgrade your package repository/installed packages, especially if you are starting from a freshly downloaded image::

	sudo apt-get update
	sudo apt-get upgrade

.. _getting-started-source:

Download the Python source
--------------------------
This can be achieved using the source hosted on our github, or by using the simplified pip process. Note that you should download the github content anyway if you intend to try the example projects

Installation using pip
**********************
Installing packages using pip is a convenient way to manage package updates, so this is the suggested method. But, you should still download the github content without installing it if you intend to make use of the examples. 
First, make sure that pip is installed. From the terminal window::

	sudo apt-get install python-setuptools
	sudo easy_install pip

Then, simply install the pisoc source using pip::

	sudo pip install pisoc
	
Installation using Git
**********************
First, be sure that you have git installed on your Raspberry Pi. From the Terminal window::

	sudo apt-get install git-core
	
Then clone our git repo to the directory of your choice::

	git clone git://github.com/EmbeditElectronics/psoc_2_pi.git

Navigate to the Python folder and install the source::
	
	cd API_Python
	sudo python setup.py install

.. _getting-started-uart:

Configure UART
--------------
UART is the easiest protocol to get started with because all necessary packages should already be preinstalled. Unfortunately, the Raspberry Pi 3 made some changes to the UART which is mapped to the GPIO pins when Bluetooth was introduced, and so using it on the Pi3 reliably would require disabling bluetooth and adding some device tree overlays, which is no fun. So for the Pi3, the suggestion is to skip to :ref:`getting-started-i2c` instead.

But for the Pi 1/2 users, all that must be done is enable serial through raspi-config::

	sudo raspi-config

Advanced Options>Serial>No

Exit, and reboot. Done!

.. _getting-started-i2c:

Configure I2C and download smbus
--------------------------------
I2C can be used to communicate between the RPi and the PiSoC on any version of the Raspberry Pi (including Pi3).

To use it though, you will need to configure your i2c bus. This can easily be done through raspi-config::

	sudo raspi-config

Advanced Options>I2C>Yes>Yes

Exit, reboot.

Now, you simply need to install the necessary i2c packages::

	sudo apt-get install i2c-tools
	sudo apt-get install python-smbus

Test that I2C is working with::

	i2cdetect -y 1

You should see that the address 0x07 appears, which is the PiSoC.

.. _getting-started-computer:

Using the PiSoC with your computer!
++++++++++++++++++++++++++++++++++++
Everything you should need to know is covered `within our home page <http://www.embeditelectronics.com/blog/project/pisoc-installation/>`_.


	
	
		