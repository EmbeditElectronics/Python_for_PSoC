ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"mem1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	buffer,50,4
  19              		.global	waveType
  20              		.data
  21              		.align	2
  22              		.type	waveType, %object
  23              		.size	waveType, 4
  24              	waveType:
  25 0000 FFFFFFFF 		.word	-1
  26              		.comm	cursor_x,2,2
  27              		.comm	cursor_y,2,2
  28              		.comm	textcolor,2,2
  29              		.comm	textbgcolor,2,2
  30              		.comm	textsize,1,1
  31              		.comm	rotation,1,1
  32              		.comm	wrap,1,1
  33              		.comm	_width,4,4
  34              		.comm	_height,4,4
  35              		.section	.text.readData,"ax",%progbits
  36              		.align	2
  37              		.global	readData
  38              		.thumb
  39              		.thumb_func
  40              		.type	readData, %function
  41              	readData:
  42              	.LFB56:
  43              		.file 1 ".\\mem1.c"
   1:.\mem1.c      **** /* ========================================
   2:.\mem1.c      ****  *
   3:.\mem1.c      ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\mem1.c      ****  * All Rights Reserved
   5:.\mem1.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\mem1.c      ****  *
   7:.\mem1.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\mem1.c      ****  * WHICH IS THE PROPERTY OF your company.
   9:.\mem1.c      ****  *
  10:.\mem1.c      ****  * ========================================
  11:.\mem1.c      **** */
  12:.\mem1.c      **** 
  13:.\mem1.c      **** //#include <stdio.h>
  14:.\mem1.c      **** //#include <stdint.h>
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 2


  15:.\mem1.c      **** //#include <mem1.h>
  16:.\mem1.c      **** 
  17:.\mem1.c      **** //#include <project.h>
  18:.\mem1.c      **** //#include <device.h>
  19:.\mem1.c      **** //#include <stdio.h>
  20:.\mem1.c      **** 
  21:.\mem1.c      **** char buffer[50];
  22:.\mem1.c      **** int waveType = -1;
  23:.\mem1.c      **** /*typedef uint32_t uint32;
  24:.\mem1.c      **** typedef uint16_t uint16;
  25:.\mem1.c      **** typedef uint8_t uint8;*/
  26:.\mem1.c      **** 
  27:.\mem1.c      **** #ifndef MEM1_H
  28:.\mem1.c      ****     #include "mem1.h"
  29:.\mem1.c      **** #endif
  30:.\mem1.c      **** 
  31:.\mem1.c      **** #include <project.h>
  32:.\mem1.c      **** 
  33:.\mem1.c      **** void readData(uint8 addr, uint8 cmd, uint16 dat)
  34:.\mem1.c      **** {
  44              		.loc 1 34 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 8
  47              		@ frame_needed = 1, uses_anonymous_args = 0
  48 0000 80B5     		push	{r7, lr}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 7, -8
  52              		.cfi_offset 14, -4
  53 0002 82B0     		sub	sp, sp, #8
  54              	.LCFI1:
  55              		.cfi_def_cfa_offset 16
  56 0004 00AF     		add	r7, sp, #0
  57              	.LCFI2:
  58              		.cfi_def_cfa_register 7
  59 0006 1346     		mov	r3, r2
  60 0008 0246     		mov	r2, r0
  61 000a FA71     		strb	r2, [r7, #7]
  62 000c 0A46     		mov	r2, r1
  63 000e BA71     		strb	r2, [r7, #6]
  64 0010 BB80     		strh	r3, [r7, #4]	@ movhi
  35:.\mem1.c      ****     //data contains command and value
  36:.\mem1.c      ****     //cmd: msb 0-3, value: 4-32
  37:.\mem1.c      ****     
  38:.\mem1.c      ****     switch(addr)
  65              		.loc 1 38 0
  66 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  67 0014 082B     		cmp	r3, #8
  68 0016 06D1     		bne	.L1
  69              	.L3:
  39:.\mem1.c      ****     {
  40:.\mem1.c      ****         //delsig_adc
  41:.\mem1.c      ****         #ifdef CY_ADC_DELSIG_ADC_DelSig_1_H
  42:.\mem1.c      ****             case DELSIG_ADC_CONTROL: DELSIG_ADC_Control(cmd,dat); break;
  43:.\mem1.c      ****         #endif
  44:.\mem1.c      ****         
  45:.\mem1.c      ****         //sar adc 1
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 3


  46:.\mem1.c      ****         #ifdef CY_ADC_SAR_ADC_SAR_1_H 
  47:.\mem1.c      ****             case SAR_ADC0_CONTROL: SAR0_ADC_Control(cmd, dat); break;
  48:.\mem1.c      ****         #endif
  49:.\mem1.c      ****         
  50:.\mem1.c      ****         //sar adc 2
  51:.\mem1.c      ****         #ifdef CY_ADC_SAR_ADC_SAR_2_H 
  52:.\mem1.c      ****             case SAR_ADC1_CONTROL: SAR1_ADC_Control(cmd, dat); break;
  53:.\mem1.c      ****         #endif
  54:.\mem1.c      ****         
  55:.\mem1.c      ****         //VDAC1
  56:.\mem1.c      ****         #ifdef CY_VDAC8_VDAC8_1_H
  57:.\mem1.c      ****             case VDAC0_CONTROL: VDAC0_Control(cmd, dat); break;        
  58:.\mem1.c      ****         #endif
  59:.\mem1.c      ****         
  60:.\mem1.c      ****         //VDAC2
  61:.\mem1.c      ****         #ifdef CY_VDAC8_VDAC8_2_H
  62:.\mem1.c      ****             case VDAC1_CONTROL: VDAC1_Control(cmd, dat); break;
  63:.\mem1.c      ****         #endif
  64:.\mem1.c      ****         
  65:.\mem1.c      ****         //IDAC1
  66:.\mem1.c      ****         #ifdef CY_IDAC8_IDAC8_1_H
  67:.\mem1.c      ****             case IDAC0_CONTROL: IDAC0_Control(cmd,dat); break;     
  68:.\mem1.c      ****         #endif
  69:.\mem1.c      ****         
  70:.\mem1.c      ****         //IDAC2
  71:.\mem1.c      ****         #ifdef CY_IDAC8_IDAC8_2_H
  72:.\mem1.c      ****             case IDAC1_CONTROL: IDAC1_Control(cmd, dat); break;     
  73:.\mem1.c      ****         #endif
  74:.\mem1.c      ****         //Wave DAC
  75:.\mem1.c      ****         #ifdef CY_WaveDAC8_WaveDAC8_1_H
  76:.\mem1.c      ****             case WAVEDAC_CONTROL: WAVEDAC_Control(cmd,dat); break;      
  70              		.loc 1 76 0
  71 0018 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
  72 001a BB88     		ldrh	r3, [r7, #4]
  73 001c 1046     		mov	r0, r2
  74 001e 1946     		mov	r1, r3
  75 0020 FFF7FEFF 		bl	WAVEDAC_Control
  76 0024 00BF     		nop
  77              	.L1:
  77:.\mem1.c      ****         #endif
  78:.\mem1.c      ****         
  79:.\mem1.c      ****         #ifdef CY_PWM_PWM_1_H
  80:.\mem1.c      ****             case PWM_REGISTER0: PWM_Control_0(cmd, dat); break;
  81:.\mem1.c      ****         #endif
  82:.\mem1.c      ****         
  83:.\mem1.c      ****         #ifdef CY_PWM_PWM_2_H
  84:.\mem1.c      ****             case PWM_REGISTER1: PWM_Control_1(cmd, dat); break;
  85:.\mem1.c      ****         #endif
  86:.\mem1.c      ****         
  87:.\mem1.c      ****         #ifdef CY_PWM_PWM_3_H
  88:.\mem1.c      ****             case PWM_REGISTER2: PWM_Control_2(cmd, dat); break;
  89:.\mem1.c      ****         #endif
  90:.\mem1.c      ****             
  91:.\mem1.c      ****         #ifdef CY_PWM_PWM_4_H
  92:.\mem1.c      ****             case PWM_REGISTER3: PWM_Control_3(cmd, dat); break;  
  93:.\mem1.c      ****         #endif
  94:.\mem1.c      ****             
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 4


  95:.\mem1.c      ****         #ifdef CY_PWM_PWM_5_H
  96:.\mem1.c      ****             case PWM_REGISTER4: PWM_Control_4(cmd, dat); break;
  97:.\mem1.c      ****         #endif
  98:.\mem1.c      ****         
  99:.\mem1.c      ****         #ifdef CY_PWM_PWM_6_H
 100:.\mem1.c      ****             case PWM_REGISTER5: PWM_Control_5(cmd, dat); break;  
 101:.\mem1.c      ****         #endif
 102:.\mem1.c      ****             
 103:.\mem1.c      ****         #ifdef CY_PWM_PWM_7_H
 104:.\mem1.c      ****             case PWM_REGISTER6: PWM_Control_6(cmd, dat); break;
 105:.\mem1.c      ****         #endif
 106:.\mem1.c      ****         
 107:.\mem1.c      ****         #ifdef CY_PWM_PWM_8_H
 108:.\mem1.c      ****             case PWM_REGISTER7: PWM_Control_7(cmd, dat); break;
 109:.\mem1.c      ****         #endif
 110:.\mem1.c      ****         
 111:.\mem1.c      ****         #ifdef CY_STATUS_REG_Status_Reg_1_H 
 112:.\mem1.c      ****             #if !defined(Status_Reg_1_sts_sts_reg__REMOVED)
 113:.\mem1.c      ****                 case DIGITAL_INPUT_REGISTER0: Input_Control0(cmd, dat); break; 
 114:.\mem1.c      ****             #endif
 115:.\mem1.c      ****         #endif
 116:.\mem1.c      ****         
 117:.\mem1.c      ****         #ifdef CY_CONTROL_REG_Control_Reg_1_H 
 118:.\mem1.c      ****             #if !defined(Control_Reg_1_Sync_ctrl_reg__REMOVED)
 119:.\mem1.c      ****                 case DIGITAL_OUTPUT_REGISTER0: Output_Control0(cmd, dat); break;   
 120:.\mem1.c      ****             #endif
 121:.\mem1.c      ****         #endif
 122:.\mem1.c      ****         
 123:.\mem1.c      ****         #ifdef CY_STATUS_REG_Status_Reg_2_H
 124:.\mem1.c      ****             #if !defined(Status_Reg_1_sts_sts_reg__REMOVED)
 125:.\mem1.c      ****                 case DIGITAL_INPUT_REGISTER1: Input_Control1(cmd, dat); break; 
 126:.\mem1.c      ****             #endif
 127:.\mem1.c      ****         #endif
 128:.\mem1.c      ****         
 129:.\mem1.c      ****         #ifdef CY_CONTROL_REG_Control_Reg_2_H 
 130:.\mem1.c      ****             #if !defined(Control_Reg_2_Sync_ctrl_reg__REMOVED)
 131:.\mem1.c      ****                 case DIGITAL_OUTPUT_REGISTER1: Output_Control1 (cmd, dat); break;   
 132:.\mem1.c      ****             #endif
 133:.\mem1.c      ****         #endif
 134:.\mem1.c      ****         
 135:.\mem1.c      ****     }    
 136:.\mem1.c      ****     //sprintf(buffer,"leaving mem1: %i\n",output);
 137:.\mem1.c      ****     //TFTSHIELD_1_PrintString(buffer);  
 138:.\mem1.c      **** }
  78              		.loc 1 138 0
  79 0026 07F10807 		add	r7, r7, #8
  80 002a BD46     		mov	sp, r7
  81 002c 80BD     		pop	{r7, pc}
  82              		.cfi_endproc
  83              	.LFE56:
  84              		.size	readData, .-readData
  85 002e 00BF     		.section	.rodata
  86              		.align	2
  87              	.LC4:
  88 0000 53746172 		.ascii	"Starting wavedac../n\000"
  88      74696E67 
  88      20776176 
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 5


  88      65646163 
  88      2E2E2F6E 
  89 0015 000000   		.align	2
  90              	.LC5:
  91 0018 53746F70 		.ascii	"Stopping WaveDac.../n\000"
  91      70696E67 
  91      20576176 
  91      65446163 
  91      2E2E2E2F 
  92 002e 0000     		.align	2
  93              	.LC6:
  94 0030 47656E65 		.ascii	"Generated Wave../n\000"
  94      72617465 
  94      64205761 
  94      76652E2E 
  94      2F6E00
  95 0043 00       		.align	2
  96              	.LC7:
  97 0044 53657474 		.ascii	"Setting speed.../n\000"
  97      696E6720 
  97      73706565 
  97      642E2E2E 
  97      2F6E00
  98 0057 00       		.align	2
  99              	.LC8:
 100 0058 53657474 		.ascii	"Settng value.../n\000"
 100      6E672076 
 100      616C7565 
 100      2E2E2E2F 
 100      6E00
 101 006a 0000     		.align	2
 102              	.LC9:
 103 006c 536C6565 		.ascii	"Sleeping.../n\000"
 103      70696E67 
 103      2E2E2E2F 
 103      6E00
 104 007a 0000     		.align	2
 105              	.LC10:
 106 007c 57616B69 		.ascii	"Waking up.../n\000"
 106      6E672075 
 106      702E2E2E 
 106      2F6E00
 107 008b 00       		.align	2
 108              	.LC11:
 109 008c 73657474 		.ascii	"setting clock/n\000"
 109      696E6720 
 109      636C6F63 
 109      6B2F6E00 
 110              		.section	.text.WAVEDAC_Control,"ax",%progbits
 111              		.align	2
 112              		.global	WAVEDAC_Control
 113              		.thumb
 114              		.thumb_func
 115              		.type	WAVEDAC_Control, %function
 116              	WAVEDAC_Control:
 117              	.LFB57:
 139:.\mem1.c      ****     #ifdef CY_ADC_DELSIG_ADC_DelSig_1_H
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 6


 140:.\mem1.c      ****         void DELSIG_ADC_Control(uint8 cmd, uint16 val)
 141:.\mem1.c      ****         {
 142:.\mem1.c      ****             uint32 result = MAX_32;
 143:.\mem1.c      ****             bool return_flag = 0;
 144:.\mem1.c      ****            
 145:.\mem1.c      ****             switch(cmd)
 146:.\mem1.c      ****             {
 147:.\mem1.c      ****                 //start_adc
 148:.\mem1.c      ****                 case 0x00: ADC_DelSig_1_Start();break;
 149:.\mem1.c      ****                 case 0x01: ADC_DelSig_1_Stop(); break;
 150:.\mem1.c      ****                 case 0x02: 
 151:.\mem1.c      ****                         if (val == 1 ){ADC_DelSig_1_SetBufferGain(ADC_DelSig_1_BUF_GAIN_1X); break;
 152:.\mem1.c      ****                         else if (val == 2){ADC_DelSig_1_SetBufferGain(ADC_DelSig_1_BUF_GAIN_2X); br
 153:.\mem1.c      ****                         else if (val == 4){ADC_DelSig_1_SetBufferGain(ADC_DelSig_1_BUF_GAIN_4X); br
 154:.\mem1.c      ****                         else if (val == 8){ADC_DelSig_1_SetBufferGain(ADC_DelSig_1_BUF_GAIN_8X); br
 155:.\mem1.c      ****                 case 0x07: result = ADC_DelSig_1_IsEndConversion(ADC_DelSig_1_WAIT_FOR_RESULT); ret
 156:.\mem1.c      ****                 case 0x0D: result = ADC_DelSig_1_Read32(); return_flag = 1; break;
 157:.\mem1.c      ****                 case 0x0E: ADC_DelSig_1_SetOffset(val); break;
 158:.\mem1.c      ****                 case 0x0F: ADC_DelSig_1_SetGain(val); break;
 159:.\mem1.c      ****                 case 0x11: result = ADC_DelSig_1_CountsTo_mVolts(val); return_flag = 1; break;
 160:.\mem1.c      ****                 case 0x14: ADC_DelSig_1_Sleep(); break;
 161:.\mem1.c      ****                 case 0x15: ADC_DelSig_1_Wakeup(); break;
 162:.\mem1.c      ****                     
 163:.\mem1.c      ****                         
 164:.\mem1.c      ****             }
 165:.\mem1.c      ****             
 166:.\mem1.c      ****             if (return_flag)
 167:.\mem1.c      ****             {
 168:.\mem1.c      ****                 WriteTo_Pi(result);
 169:.\mem1.c      ****             }
 170:.\mem1.c      ****         }
 171:.\mem1.c      ****     #endif
 172:.\mem1.c      ****     #ifdef CY_ADC_SAR_ADC_SAR_1_H
 173:.\mem1.c      ****         void SAR0_ADC_Control(uint8 cmd, uint16 val)
 174:.\mem1.c      ****         {
 175:.\mem1.c      ****             uint32 result = MAX_32;
 176:.\mem1.c      ****             bool return_flag = 0;
 177:.\mem1.c      ****             switch(cmd)
 178:.\mem1.c      ****             {
 179:.\mem1.c      ****                 //start_adc
 180:.\mem1.c      ****                 case 0x00: ADC_SAR_1_Start(); break;
 181:.\mem1.c      ****                 case 0x01: ADC_SAR_1_Stop(); break;
 182:.\mem1.c      ****                 case 0x04: ADC_SAR_1_StartConvert(); break;
 183:.\mem1.c      ****                 case 0x05: ADC_SAR_1_StopConvert(); break;
 184:.\mem1.c      ****                 case 0x08: result = ADC_SAR_1_IsEndConversion(ADC_SAR_1_RETURN_STATUS); return_flag
 185:.\mem1.c      ****                 case 0x0A: result = ADC_SAR_1_GetResult16(); return_flag = 1; break;
 186:.\mem1.c      ****                 case 0x0B: ADC_SAR_1_SetOffset(val); break;
 187:.\mem1.c      ****                 case 0x0C: ADC_SAR_1_SetGain(val); break;
 188:.\mem1.c      ****                 case 0x0E: result = ADC_SAR_1_CountsTo_mVolts(val); return_flag = 1; break;//Change
 189:.\mem1.c      ****                 case 0x10: ADC_SAR_1_Sleep(); break;
 190:.\mem1.c      ****                 case 0x11: ADC_SAR_1_Wakeup(); break;       
 191:.\mem1.c      ****             }
 192:.\mem1.c      ****             
 193:.\mem1.c      ****             if (return_flag)
 194:.\mem1.c      ****             {
 195:.\mem1.c      ****                 WriteTo_Pi(result);   
 196:.\mem1.c      ****             }
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 7


 197:.\mem1.c      ****         }
 198:.\mem1.c      ****      #endif
 199:.\mem1.c      ****     
 200:.\mem1.c      ****     #ifdef CY_ADC_SAR_ADC_SAR_2_H
 201:.\mem1.c      ****          void SAR1_ADC_Control(uint8 cmd, uint16 val)
 202:.\mem1.c      ****         {
 203:.\mem1.c      ****             uint32 result = MAX_32;
 204:.\mem1.c      ****             bool return_flag = 0;
 205:.\mem1.c      ****             switch(cmd)
 206:.\mem1.c      ****             {
 207:.\mem1.c      ****                 case 0x00: ADC_SAR_2_Start(); break;
 208:.\mem1.c      ****                 case 0x01: ADC_SAR_2_Stop(); break;
 209:.\mem1.c      ****                 case 0x04: ADC_SAR_2_StartConvert(); break;
 210:.\mem1.c      ****                 case 0x05: ADC_SAR_2_StopConvert(); break;
 211:.\mem1.c      ****                 case 0x08: result = ADC_SAR_2_IsEndConversion(ADC_SAR_1_RETURN_STATUS); return_flag
 212:.\mem1.c      ****                 case 0x0A: result = ADC_SAR_2_GetResult16(); return_flag = 1; break;
 213:.\mem1.c      ****                 case 0x0B: ADC_SAR_2_SetOffset(val); break;
 214:.\mem1.c      ****                 case 0x0C: ADC_SAR_2_SetGain(val); break;
 215:.\mem1.c      ****                 case 0x0E: result = ADC_SAR_2_CountsTo_mVolts(val); return_flag = 1; break;//Change
 216:.\mem1.c      ****                 case 0x10: ADC_SAR_2_Sleep(); break;
 217:.\mem1.c      ****                 case 0x11: ADC_SAR_2_Wakeup(); break;     
 218:.\mem1.c      ****                 
 219:.\mem1.c      ****             }
 220:.\mem1.c      ****             if (return_flag)
 221:.\mem1.c      ****             {
 222:.\mem1.c      ****                 WriteTo_Pi(result);
 223:.\mem1.c      ****             }
 224:.\mem1.c      ****         }
 225:.\mem1.c      ****     #endif
 226:.\mem1.c      ****     
 227:.\mem1.c      ****     #ifdef CY_VDAC8_VDAC8_1_H
 228:.\mem1.c      ****         void VDAC0_Control(uint8 cmd, uint16 val)
 229:.\mem1.c      ****         {
 230:.\mem1.c      ****             uint32 result = MAX_32;
 231:.\mem1.c      ****             bool return_flag = 0;
 232:.\mem1.c      ****                 switch(cmd)
 233:.\mem1.c      ****                 {
 234:.\mem1.c      ****                     case 0x00: VDAC8_1_Start(); break;
 235:.\mem1.c      ****                     case 0x01: VDAC8_1_Stop(); break;
 236:.\mem1.c      ****                     case 0x02: 
 237:.\mem1.c      ****                         if (val == 0){VDAC8_1_SetSpeed(VDAC8_1_LOWSPEED); break;}
 238:.\mem1.c      ****                         else if (val == 1){VDAC8_1_SetSpeed(VDAC8_1_HIGHSPEED); break;}
 239:.\mem1.c      ****                     case 0x03:
 240:.\mem1.c      ****                         if (val == 0){VDAC8_1_SetRange(VDAC8_1_RANGE_1V); break;}
 241:.\mem1.c      ****                         else if (val == 1){VDAC8_1_SetRange(VDAC8_1_RANGE_4V); break;}
 242:.\mem1.c      ****                     case 0x04: VDAC8_1_SetValue(val); break; 
 243:.\mem1.c      ****                     case 0x05: VDAC8_1_Sleep(); break;
 244:.\mem1.c      ****                     case 0x06: VDAC8_1_Wakeup(); break;     
 245:.\mem1.c      ****                     
 246:.\mem1.c      ****                 }
 247:.\mem1.c      ****                 if (return_flag)
 248:.\mem1.c      ****             {
 249:.\mem1.c      ****                 WriteTo_Pi(result);
 250:.\mem1.c      ****             }
 251:.\mem1.c      ****         }
 252:.\mem1.c      ****     #endif
 253:.\mem1.c      ****     
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 8


 254:.\mem1.c      ****     #ifdef CY_VDAC8_VDAC8_2_H
 255:.\mem1.c      ****         void VDAC1_Control(uint8 cmd, uint16 val)
 256:.\mem1.c      ****         {
 257:.\mem1.c      ****             uint32 result = MAX_32;
 258:.\mem1.c      ****             bool return_flag = 0;
 259:.\mem1.c      ****                 switch(cmd)
 260:.\mem1.c      ****                 {
 261:.\mem1.c      ****                     case 0x00: VDAC8_2_Start(); break;
 262:.\mem1.c      ****                     case 0x01: VDAC8_2_Stop(); break;
 263:.\mem1.c      ****                     case 0x02: 
 264:.\mem1.c      ****                         if (val == 0){VDAC8_2_SetSpeed(VDAC8_2_LOWSPEED); break;}
 265:.\mem1.c      ****                         else if (val == 1){VDAC8_2_SetSpeed(VDAC8_2_HIGHSPEED); break;}
 266:.\mem1.c      ****                     case 0x03:
 267:.\mem1.c      ****                         if (val == 0){VDAC8_2_SetRange(VDAC8_2_RANGE_1V); break;}
 268:.\mem1.c      ****                         else if (val == 1){VDAC8_2_SetRange(VDAC8_2_RANGE_4V); break;}
 269:.\mem1.c      ****                     case 0x04: VDAC8_2_SetValue(val); break; 
 270:.\mem1.c      ****                     case 0x05: VDAC8_2_Sleep(); break;
 271:.\mem1.c      ****                     case 0x06: VDAC8_2_Wakeup(); break;     
 272:.\mem1.c      ****                     
 273:.\mem1.c      ****                 }
 274:.\mem1.c      ****             if (return_flag)
 275:.\mem1.c      ****             {
 276:.\mem1.c      ****                 WriteTo_Pi(result);
 277:.\mem1.c      ****             }
 278:.\mem1.c      ****         }
 279:.\mem1.c      ****     #endif
 280:.\mem1.c      ****     
 281:.\mem1.c      ****     #ifdef CY_IDAC8_IDAC8_1_H
 282:.\mem1.c      ****         void IDAC0_Control(uint8 cmd, uint16 val)
 283:.\mem1.c      ****             {
 284:.\mem1.c      ****                 uint32 result = MAX_32;
 285:.\mem1.c      ****                 bool return_flag = 0;
 286:.\mem1.c      ****                     switch(cmd)
 287:.\mem1.c      ****                     {
 288:.\mem1.c      ****                         case 0x00: IDAC8_1_Start(); break;
 289:.\mem1.c      ****                         case 0x01: IDAC8_1_Stop(); break;
 290:.\mem1.c      ****                         case 0x02: 
 291:.\mem1.c      ****                             if (val == 0){IDAC8_1_SetSpeed(IDAC8_1_LOWSPEED); break;}
 292:.\mem1.c      ****                             else if (val == 1){IDAC8_1_SetSpeed(IDAC8_1_HIGHSPEED); break;}
 293:.\mem1.c      ****                         case 0x03:
 294:.\mem1.c      ****                             if (val == 0){IDAC8_1_SetPolarity(IDAC8_1_SOURCE); break;}
 295:.\mem1.c      ****                             else if (val == 1){IDAC8_1_SetPolarity(IDAC8_1_SINK); break;}
 296:.\mem1.c      ****                         case 0x04:
 297:.\mem1.c      ****                             if (val == 0){IDAC8_1_SetRange(IDAC8_1_RANGE_32uA); break;}
 298:.\mem1.c      ****                             else if (val == 1){IDAC8_1_SetRange(IDAC8_1_RANGE_255uA); break;}
 299:.\mem1.c      ****                             else if (val == 2){IDAC8_1_SetRange(IDAC8_1_RANGE_2mA); break;}
 300:.\mem1.c      ****                         case 0x05: IDAC8_1_SetValue(val); break;
 301:.\mem1.c      ****                         case 0x06: IDAC8_1_Sleep(); break;
 302:.\mem1.c      ****                         case 0x07: IDAC8_1_Wakeup(); break;     
 303:.\mem1.c      ****                         
 304:.\mem1.c      ****                     }
 305:.\mem1.c      ****                 if (return_flag)
 306:.\mem1.c      ****                 {
 307:.\mem1.c      ****                     WriteTo_Pi(result);
 308:.\mem1.c      ****                 }
 309:.\mem1.c      ****             }
 310:.\mem1.c      ****     #endif
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 9


 311:.\mem1.c      ****     
 312:.\mem1.c      ****     #ifdef CY_IDAC8_IDAC8_2_H
 313:.\mem1.c      ****         void IDAC1_Control(uint8 cmd, uint16 val)
 314:.\mem1.c      ****         {
 315:.\mem1.c      ****             uint32 result = MAX_32;
 316:.\mem1.c      ****             bool return_flag = 0;
 317:.\mem1.c      ****                 switch(cmd)
 318:.\mem1.c      ****                 {
 319:.\mem1.c      ****                     case 0x00: IDAC8_2_Start(); break;
 320:.\mem1.c      ****                     case 0x01: IDAC8_2_Stop(); break;
 321:.\mem1.c      ****                     case 0x02: 
 322:.\mem1.c      ****                         if (val == 0){IDAC8_2_SetSpeed(IDAC8_2_LOWSPEED); break;}
 323:.\mem1.c      ****                         else if (val == 1){IDAC8_2_SetSpeed(IDAC8_2_HIGHSPEED); break;}
 324:.\mem1.c      ****                     case 0x03:
 325:.\mem1.c      ****                         if (val == 0){IDAC8_2_SetPolarity(IDAC8_2_SOURCE); break;}
 326:.\mem1.c      ****                         else if (val == 1){IDAC8_2_SetPolarity(IDAC8_2_SINK); break;}
 327:.\mem1.c      ****                     case 0x04:
 328:.\mem1.c      ****                         if (val == 0){IDAC8_2_SetRange(IDAC8_2_RANGE_32uA); break;}
 329:.\mem1.c      ****                         else if (val == 1){IDAC8_2_SetRange(IDAC8_2_RANGE_255uA); break;}
 330:.\mem1.c      ****                         else if (val == 2){IDAC8_2_SetRange(IDAC8_2_RANGE_2mA); break;}
 331:.\mem1.c      ****                     case 0x05: IDAC8_2_SetValue(val); break;
 332:.\mem1.c      ****                     case 0x06: IDAC8_2_Sleep(); break;
 333:.\mem1.c      ****                     case 0x07: IDAC8_2_Wakeup(); break;     
 334:.\mem1.c      ****                     
 335:.\mem1.c      ****                 }
 336:.\mem1.c      ****                 if (return_flag)
 337:.\mem1.c      ****                 {
 338:.\mem1.c      ****                     WriteTo_Pi(result);
 339:.\mem1.c      ****                 }
 340:.\mem1.c      ****         }
 341:.\mem1.c      ****     #endif
 342:.\mem1.c      ****     
 343:.\mem1.c      ****     #ifdef CY_WaveDAC8_WaveDAC8_1_H
 344:.\mem1.c      ****         void WAVEDAC_Control(uint8 cmd, uint16 val)
 345:.\mem1.c      ****         {
 118              		.loc 1 345 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 16
 121              		@ frame_needed = 1, uses_anonymous_args = 0
 122 0000 80B5     		push	{r7, lr}
 123              	.LCFI3:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 7, -8
 126              		.cfi_offset 14, -4
 127 0002 84B0     		sub	sp, sp, #16
 128              	.LCFI4:
 129              		.cfi_def_cfa_offset 24
 130 0004 00AF     		add	r7, sp, #0
 131              	.LCFI5:
 132              		.cfi_def_cfa_register 7
 133 0006 0246     		mov	r2, r0
 134 0008 0B46     		mov	r3, r1
 135 000a FA71     		strb	r2, [r7, #7]
 136 000c BB80     		strh	r3, [r7, #4]	@ movhi
 346:.\mem1.c      ****             uint32 result = MAX_32;
 137              		.loc 1 346 0
 138 000e 4FF0FF33 		mov	r3, #-1
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 10


 139 0012 FB60     		str	r3, [r7, #12]
 347:.\mem1.c      ****             uint8 clk_prev;
 348:.\mem1.c      ****             uint8 clk_new;
 349:.\mem1.c      ****             bool return_flag = 0;
 140              		.loc 1 349 0
 141 0014 4FF00003 		mov	r3, #0
 142 0018 FB72     		strb	r3, [r7, #11]
 350:.\mem1.c      ****             
 351:.\mem1.c      ****             switch(cmd)
 143              		.loc 1 351 0
 144 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 145 001c 072B     		cmp	r3, #7
 146 001e 2FD0     		beq	.L9
 147 0020 072B     		cmp	r3, #7
 148 0022 06DC     		bgt	.L14
 149 0024 012B     		cmp	r3, #1
 150 0026 19D0     		beq	.L7
 151 0028 042B     		cmp	r3, #4
 152 002a 20D0     		beq	.L8
 153 002c 002B     		cmp	r3, #0
 154 002e 0CD0     		beq	.L6
 155 0030 6EE0     		b	.L5
 156              	.L14:
 157 0032 0B2B     		cmp	r3, #11
 158 0034 46D0     		beq	.L11
 159 0036 0B2B     		cmp	r3, #11
 160 0038 02DC     		bgt	.L15
 161 003a 092B     		cmp	r3, #9
 162 003c 36D0     		beq	.L10
 163 003e 67E0     		b	.L5
 164              	.L15:
 165 0040 0C2B     		cmp	r3, #12
 166 0042 48D0     		beq	.L12
 167 0044 FF2B     		cmp	r3, #255
 168 0046 4FD0     		beq	.L13
 169 0048 62E0     		b	.L5
 170              	.L6:
 352:.\mem1.c      ****                 {   
 353:.\mem1.c      ****                     case 0x00: WaveDAC8_1_Start(); TFTSHIELD_1_PrintString("Starting wavedac../n");
 171              		.loc 1 353 0
 172 004a FFF7FEFF 		bl	WaveDAC8_1_Start
 173 004e 40F20000 		movw	r0, #:lower16:.LC4
 174 0052 C0F20000 		movt	r0, #:upper16:.LC4
 175 0056 FFF7FEFF 		bl	TFTSHIELD_1_PrintString
 176 005a 59E0     		b	.L5
 177              	.L7:
 354:.\mem1.c      ****                     case 0x01: WaveDAC8_1_Stop(); TFTSHIELD_1_PrintString("Stopping WaveDac.../n");
 178              		.loc 1 354 0
 179 005c FFF7FEFF 		bl	WaveDAC8_1_Stop
 180 0060 40F20000 		movw	r0, #:lower16:.LC5
 181 0064 C0F20000 		movt	r0, #:upper16:.LC5
 182 0068 FFF7FEFF 		bl	TFTSHIELD_1_PrintString
 183 006c 50E0     		b	.L5
 184              	.L8:
 355:.\mem1.c      ****                     case 0x04: Generate_Wave(); TFTSHIELD_1_PrintString("Generated Wave../n"); brea
 185              		.loc 1 355 0
 186 006e FFF7FEFF 		bl	Generate_Wave
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 11


 187 0072 40F20000 		movw	r0, #:lower16:.LC6
 188 0076 C0F20000 		movt	r0, #:upper16:.LC6
 189 007a FFF7FEFF 		bl	TFTSHIELD_1_PrintString
 190 007e 47E0     		b	.L5
 191              	.L9:
 356:.\mem1.c      ****                     case 0x07: 
 357:.\mem1.c      ****                         TFTSHIELD_1_PrintString("Setting speed.../n");
 192              		.loc 1 357 0
 193 0080 40F20000 		movw	r0, #:lower16:.LC7
 194 0084 C0F20000 		movt	r0, #:upper16:.LC7
 195 0088 FFF7FEFF 		bl	TFTSHIELD_1_PrintString
 358:.\mem1.c      ****                         if (val == 0){WaveDAC8_1_SetSpeed(WaveDAC8_1_LOWSPEED); break;}
 196              		.loc 1 358 0
 197 008c BB88     		ldrh	r3, [r7, #4]
 198 008e 002B     		cmp	r3, #0
 199 0090 04D1     		bne	.L16
 200              		.loc 1 358 0 is_stmt 0 discriminator 1
 201 0092 4FF00000 		mov	r0, #0
 202 0096 FFF7FEFF 		bl	WaveDAC8_1_VDAC8_SetSpeed
 203 009a 39E0     		b	.L5
 204              	.L16:
 359:.\mem1.c      ****                         else if (val == 1){WaveDAC8_1_SetSpeed(WaveDAC8_1_HIGHSPEED); break;}
 205              		.loc 1 359 0 is_stmt 1
 206 009c BB88     		ldrh	r3, [r7, #4]
 207 009e 012B     		cmp	r3, #1
 208 00a0 04D1     		bne	.L10
 209              		.loc 1 359 0 is_stmt 0 discriminator 1
 210 00a2 4FF00200 		mov	r0, #2
 211 00a6 FFF7FEFF 		bl	WaveDAC8_1_VDAC8_SetSpeed
 212 00aa 31E0     		b	.L5
 213              	.L10:
 360:.\mem1.c      ****                     case 0x09: WaveDAC8_1_SetValue(val); TFTSHIELD_1_PrintString("Settng value.../n
 214              		.loc 1 360 0 is_stmt 1
 215 00ac BB88     		ldrh	r3, [r7, #4]	@ movhi
 216 00ae DBB2     		uxtb	r3, r3
 217 00b0 1846     		mov	r0, r3
 218 00b2 FFF7FEFF 		bl	WaveDAC8_1_VDAC8_SetValue
 219 00b6 40F20000 		movw	r0, #:lower16:.LC8
 220 00ba C0F20000 		movt	r0, #:upper16:.LC8
 221 00be FFF7FEFF 		bl	TFTSHIELD_1_PrintString
 222 00c2 25E0     		b	.L5
 223              	.L11:
 361:.\mem1.c      ****                     case 0x0B: WaveDAC8_1_Sleep(); TFTSHIELD_1_PrintString("Sleeping.../n");  break
 224              		.loc 1 361 0
 225 00c4 FFF7FEFF 		bl	WaveDAC8_1_Sleep
 226 00c8 40F20000 		movw	r0, #:lower16:.LC9
 227 00cc C0F20000 		movt	r0, #:upper16:.LC9
 228 00d0 FFF7FEFF 		bl	TFTSHIELD_1_PrintString
 229 00d4 1CE0     		b	.L5
 230              	.L12:
 362:.\mem1.c      ****                     case 0x0C: WaveDAC8_1_Wakeup(); TFTSHIELD_1_PrintString("Waking up.../n"); brea
 231              		.loc 1 362 0
 232 00d6 FFF7FEFF 		bl	WaveDAC8_1_Wakeup
 233 00da 40F20000 		movw	r0, #:lower16:.LC10
 234 00de C0F20000 		movt	r0, #:upper16:.LC10
 235 00e2 FFF7FEFF 		bl	TFTSHIELD_1_PrintString
 236 00e6 13E0     		b	.L5
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 12


 237              	.L13:
 363:.\mem1.c      ****                     //case 0xFD: Wave_Buffer_Start(); TFTSHIELD_1_PrintString("Starting Buffer.../n
 364:.\mem1.c      ****                     //case 0xFE: Wave_Buffer_Stop(); TFTSHIELD_1_PrintString("Stopping buffer/n"); 
 365:.\mem1.c      ****                     case 0xFF: WaveDAC_clk_StopBlock(); WaveDAC_clk_SetDividerValue(val); WaveDAC_c
 238              		.loc 1 365 0
 239 00e8 FFF7FEFF 		bl	WaveDAC_clk_StopBlock
 240 00ec BB88     		ldrh	r3, [r7, #4]	@ movhi
 241 00ee 03F1FF33 		add	r3, r3, #-1
 242 00f2 9BB2     		uxth	r3, r3
 243 00f4 1846     		mov	r0, r3
 244 00f6 4FF00101 		mov	r1, #1
 245 00fa FFF7FEFF 		bl	WaveDAC_clk_SetDividerRegister
 246 00fe FFF7FEFF 		bl	WaveDAC_clk_Start
 247 0102 40F20000 		movw	r0, #:lower16:.LC11
 248 0106 C0F20000 		movt	r0, #:upper16:.LC11
 249 010a FFF7FEFF 		bl	TFTSHIELD_1_PrintString
 250 010e 00BF     		nop
 251              	.L5:
 366:.\mem1.c      ****                     
 367:.\mem1.c      ****                     
 368:.\mem1.c      ****                 }   
 369:.\mem1.c      ****                 
 370:.\mem1.c      ****              if (return_flag)
 252              		.loc 1 370 0
 253 0110 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 254 0112 002B     		cmp	r3, #0
 255 0114 02D0     		beq	.L4
 371:.\mem1.c      ****                 {
 372:.\mem1.c      ****                     WriteTo_Pi(result);
 256              		.loc 1 372 0
 257 0116 F868     		ldr	r0, [r7, #12]
 258 0118 FFF7FEFF 		bl	WriteTo_Pi
 259              	.L4:
 373:.\mem1.c      ****                 }
 374:.\mem1.c      ****             
 375:.\mem1.c      ****         }
 260              		.loc 1 375 0
 261 011c 07F11007 		add	r7, r7, #16
 262 0120 BD46     		mov	sp, r7
 263 0122 80BD     		pop	{r7, pc}
 264              		.cfi_endproc
 265              	.LFE57:
 266              		.size	WAVEDAC_Control, .-WAVEDAC_Control
 267              		.section	.rodata
 268              		.align	2
 269              	.LC12:
 270 009c 573A2025 		.ascii	"W: %i A: %i DC: %i\000"
 270      6920413A 
 270      20256920 
 270      44433A20 
 270      256900
 271              		.global	__aeabi_ui2d
 272              		.global	__aeabi_ddiv
 273              		.global	__aeabi_dmul
 274              		.global	__aeabi_dadd
 275              		.global	__aeabi_dcmpgt
 276              		.global	__aeabi_d2uiz
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 13


 277 00af 00       		.align	2
 278              	.LC13:
 279 00b0 44726177 		.ascii	"Drawing Sine../n\000"
 279      696E6720 
 279      53696E65 
 279      2E2E2F6E 
 279      00
 280 00c1 000000   		.align	2
 281              	.LC14:
 282 00c4 44726177 		.ascii	"Drawing Square../n\000"
 282      696E6720 
 282      53717561 
 282      72652E2E 
 282      2F6E00
 283 00d7 00       		.align	2
 284              	.LC15:
 285 00d8 44726177 		.ascii	"Drawing Triangle../n\000"
 285      696E6720 
 285      54726961 
 285      6E676C65 
 285      2E2E2F6E 
 286 00ed 000000   		.align	2
 287              	.LC16:
 288 00f0 44726177 		.ascii	"Drawing Sawtooth../n\000"
 288      696E6720 
 288      53617774 
 288      6F6F7468 
 288      2E2E2F6E 
 289 0105 000000   		.align	2
 290              	.LC0:
 291 0108 80       		.byte	-128
 292 0109 83       		.byte	-125
 293 010a 86       		.byte	-122
 294 010b 89       		.byte	-119
 295 010c 8C       		.byte	-116
 296 010d 8F       		.byte	-113
 297 010e 92       		.byte	-110
 298 010f 95       		.byte	-107
 299 0110 98       		.byte	-104
 300 0111 9C       		.byte	-100
 301 0112 9F       		.byte	-97
 302 0113 A2       		.byte	-94
 303 0114 A5       		.byte	-91
 304 0115 A8       		.byte	-88
 305 0116 AB       		.byte	-85
 306 0117 AE       		.byte	-82
 307 0118 B0       		.byte	-80
 308 0119 B3       		.byte	-77
 309 011a B6       		.byte	-74
 310 011b B9       		.byte	-71
 311 011c BC       		.byte	-68
 312 011d BF       		.byte	-65
 313 011e C1       		.byte	-63
 314 011f C4       		.byte	-60
 315 0120 C7       		.byte	-57
 316 0121 C9       		.byte	-55
 317 0122 CC       		.byte	-52
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 14


 318 0123 CE       		.byte	-50
 319 0124 D1       		.byte	-47
 320 0125 D3       		.byte	-45
 321 0126 D5       		.byte	-43
 322 0127 D8       		.byte	-40
 323 0128 DA       		.byte	-38
 324 0129 DC       		.byte	-36
 325 012a DE       		.byte	-34
 326 012b E0       		.byte	-32
 327 012c E2       		.byte	-30
 328 012d E4       		.byte	-28
 329 012e E6       		.byte	-26
 330 012f E8       		.byte	-24
 331 0130 EA       		.byte	-22
 332 0131 EC       		.byte	-20
 333 0132 ED       		.byte	-19
 334 0133 EF       		.byte	-17
 335 0134 F0       		.byte	-16
 336 0135 F2       		.byte	-14
 337 0136 F3       		.byte	-13
 338 0137 F5       		.byte	-11
 339 0138 F6       		.byte	-10
 340 0139 F7       		.byte	-9
 341 013a F8       		.byte	-8
 342 013b F9       		.byte	-7
 343 013c FA       		.byte	-6
 344 013d FB       		.byte	-5
 345 013e FC       		.byte	-4
 346 013f FC       		.byte	-4
 347 0140 FD       		.byte	-3
 348 0141 FE       		.byte	-2
 349 0142 FE       		.byte	-2
 350 0143 FF       		.byte	-1
 351 0144 FF       		.byte	-1
 352 0145 FF       		.byte	-1
 353 0146 FF       		.byte	-1
 354 0147 FF       		.byte	-1
 355 0148 FF       		.byte	-1
 356 0149 FF       		.byte	-1
 357 014a FF       		.byte	-1
 358 014b FF       		.byte	-1
 359 014c FF       		.byte	-1
 360 014d FF       		.byte	-1
 361 014e FE       		.byte	-2
 362 014f FE       		.byte	-2
 363 0150 FD       		.byte	-3
 364 0151 FC       		.byte	-4
 365 0152 FC       		.byte	-4
 366 0153 FB       		.byte	-5
 367 0154 FA       		.byte	-6
 368 0155 F9       		.byte	-7
 369 0156 F8       		.byte	-8
 370 0157 F7       		.byte	-9
 371 0158 F6       		.byte	-10
 372 0159 F5       		.byte	-11
 373 015a F3       		.byte	-13
 374 015b F2       		.byte	-14
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 15


 375 015c F0       		.byte	-16
 376 015d EF       		.byte	-17
 377 015e ED       		.byte	-19
 378 015f EC       		.byte	-20
 379 0160 EA       		.byte	-22
 380 0161 E8       		.byte	-24
 381 0162 E6       		.byte	-26
 382 0163 E4       		.byte	-28
 383 0164 E2       		.byte	-30
 384 0165 E0       		.byte	-32
 385 0166 DE       		.byte	-34
 386 0167 DC       		.byte	-36
 387 0168 DA       		.byte	-38
 388 0169 D8       		.byte	-40
 389 016a D5       		.byte	-43
 390 016b D3       		.byte	-45
 391 016c D1       		.byte	-47
 392 016d CE       		.byte	-50
 393 016e CC       		.byte	-52
 394 016f C9       		.byte	-55
 395 0170 C7       		.byte	-57
 396 0171 C4       		.byte	-60
 397 0172 C1       		.byte	-63
 398 0173 BF       		.byte	-65
 399 0174 BC       		.byte	-68
 400 0175 B9       		.byte	-71
 401 0176 B6       		.byte	-74
 402 0177 B3       		.byte	-77
 403 0178 B0       		.byte	-80
 404 0179 AE       		.byte	-82
 405 017a AB       		.byte	-85
 406 017b A8       		.byte	-88
 407 017c A5       		.byte	-91
 408 017d A2       		.byte	-94
 409 017e 9F       		.byte	-97
 410 017f 9C       		.byte	-100
 411 0180 98       		.byte	-104
 412 0181 95       		.byte	-107
 413 0182 92       		.byte	-110
 414 0183 8F       		.byte	-113
 415 0184 8C       		.byte	-116
 416 0185 89       		.byte	-119
 417 0186 86       		.byte	-122
 418 0187 83       		.byte	-125
 419 0188 80       		.byte	-128
 420 0189 7C       		.byte	124
 421 018a 79       		.byte	121
 422 018b 76       		.byte	118
 423 018c 73       		.byte	115
 424 018d 70       		.byte	112
 425 018e 6D       		.byte	109
 426 018f 6A       		.byte	106
 427 0190 67       		.byte	103
 428 0191 63       		.byte	99
 429 0192 60       		.byte	96
 430 0193 5D       		.byte	93
 431 0194 5A       		.byte	90
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 16


 432 0195 57       		.byte	87
 433 0196 54       		.byte	84
 434 0197 51       		.byte	81
 435 0198 4F       		.byte	79
 436 0199 4C       		.byte	76
 437 019a 49       		.byte	73
 438 019b 46       		.byte	70
 439 019c 43       		.byte	67
 440 019d 40       		.byte	64
 441 019e 3E       		.byte	62
 442 019f 3B       		.byte	59
 443 01a0 38       		.byte	56
 444 01a1 36       		.byte	54
 445 01a2 33       		.byte	51
 446 01a3 31       		.byte	49
 447 01a4 2E       		.byte	46
 448 01a5 2C       		.byte	44
 449 01a6 2A       		.byte	42
 450 01a7 27       		.byte	39
 451 01a8 25       		.byte	37
 452 01a9 23       		.byte	35
 453 01aa 21       		.byte	33
 454 01ab 1F       		.byte	31
 455 01ac 1D       		.byte	29
 456 01ad 1B       		.byte	27
 457 01ae 19       		.byte	25
 458 01af 17       		.byte	23
 459 01b0 15       		.byte	21
 460 01b1 13       		.byte	19
 461 01b2 12       		.byte	18
 462 01b3 10       		.byte	16
 463 01b4 0F       		.byte	15
 464 01b5 0D       		.byte	13
 465 01b6 0C       		.byte	12
 466 01b7 0A       		.byte	10
 467 01b8 09       		.byte	9
 468 01b9 08       		.byte	8
 469 01ba 07       		.byte	7
 470 01bb 06       		.byte	6
 471 01bc 05       		.byte	5
 472 01bd 04       		.byte	4
 473 01be 03       		.byte	3
 474 01bf 03       		.byte	3
 475 01c0 02       		.byte	2
 476 01c1 01       		.byte	1
 477 01c2 01       		.byte	1
 478 01c3 00       		.byte	0
 479 01c4 00       		.byte	0
 480 01c5 00       		.byte	0
 481 01c6 00       		.byte	0
 482 01c7 00       		.byte	0
 483 01c8 00       		.byte	0
 484 01c9 00       		.byte	0
 485 01ca 00       		.byte	0
 486 01cb 00       		.byte	0
 487 01cc 00       		.byte	0
 488 01cd 00       		.byte	0
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 17


 489 01ce 01       		.byte	1
 490 01cf 01       		.byte	1
 491 01d0 02       		.byte	2
 492 01d1 03       		.byte	3
 493 01d2 03       		.byte	3
 494 01d3 04       		.byte	4
 495 01d4 05       		.byte	5
 496 01d5 06       		.byte	6
 497 01d6 07       		.byte	7
 498 01d7 08       		.byte	8
 499 01d8 09       		.byte	9
 500 01d9 0A       		.byte	10
 501 01da 0C       		.byte	12
 502 01db 0D       		.byte	13
 503 01dc 0F       		.byte	15
 504 01dd 10       		.byte	16
 505 01de 12       		.byte	18
 506 01df 13       		.byte	19
 507 01e0 15       		.byte	21
 508 01e1 17       		.byte	23
 509 01e2 19       		.byte	25
 510 01e3 1B       		.byte	27
 511 01e4 1D       		.byte	29
 512 01e5 1F       		.byte	31
 513 01e6 21       		.byte	33
 514 01e7 23       		.byte	35
 515 01e8 25       		.byte	37
 516 01e9 27       		.byte	39
 517 01ea 2A       		.byte	42
 518 01eb 2C       		.byte	44
 519 01ec 2E       		.byte	46
 520 01ed 31       		.byte	49
 521 01ee 33       		.byte	51
 522 01ef 36       		.byte	54
 523 01f0 38       		.byte	56
 524 01f1 3B       		.byte	59
 525 01f2 3E       		.byte	62
 526 01f3 40       		.byte	64
 527 01f4 43       		.byte	67
 528 01f5 46       		.byte	70
 529 01f6 49       		.byte	73
 530 01f7 4C       		.byte	76
 531 01f8 4F       		.byte	79
 532 01f9 51       		.byte	81
 533 01fa 54       		.byte	84
 534 01fb 57       		.byte	87
 535 01fc 5A       		.byte	90
 536 01fd 5D       		.byte	93
 537 01fe 60       		.byte	96
 538 01ff 63       		.byte	99
 539 0200 67       		.byte	103
 540 0201 6A       		.byte	106
 541 0202 6D       		.byte	109
 542 0203 70       		.byte	112
 543 0204 73       		.byte	115
 544 0205 76       		.byte	118
 545 0206 79       		.byte	121
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 18


 546 0207 00       		.align	2
 547              	.LC1:
 548 0208 01       		.byte	1
 549 0209 01       		.byte	1
 550 020a 01       		.byte	1
 551 020b 01       		.byte	1
 552 020c 01       		.byte	1
 553 020d 01       		.byte	1
 554 020e 01       		.byte	1
 555 020f 01       		.byte	1
 556 0210 01       		.byte	1
 557 0211 01       		.byte	1
 558 0212 01       		.byte	1
 559 0213 01       		.byte	1
 560 0214 01       		.byte	1
 561 0215 01       		.byte	1
 562 0216 01       		.byte	1
 563 0217 01       		.byte	1
 564 0218 01       		.byte	1
 565 0219 01       		.byte	1
 566 021a 01       		.byte	1
 567 021b 01       		.byte	1
 568 021c 01       		.byte	1
 569 021d 01       		.byte	1
 570 021e 01       		.byte	1
 571 021f 01       		.byte	1
 572 0220 01       		.byte	1
 573 0221 01       		.byte	1
 574 0222 01       		.byte	1
 575 0223 01       		.byte	1
 576 0224 01       		.byte	1
 577 0225 01       		.byte	1
 578 0226 01       		.byte	1
 579 0227 01       		.byte	1
 580 0228 01       		.byte	1
 581 0229 01       		.byte	1
 582 022a 01       		.byte	1
 583 022b 01       		.byte	1
 584 022c 01       		.byte	1
 585 022d 01       		.byte	1
 586 022e 01       		.byte	1
 587 022f 01       		.byte	1
 588 0230 01       		.byte	1
 589 0231 01       		.byte	1
 590 0232 01       		.byte	1
 591 0233 01       		.byte	1
 592 0234 01       		.byte	1
 593 0235 01       		.byte	1
 594 0236 01       		.byte	1
 595 0237 01       		.byte	1
 596 0238 01       		.byte	1
 597 0239 01       		.byte	1
 598 023a 01       		.byte	1
 599 023b 01       		.byte	1
 600 023c 01       		.byte	1
 601 023d 01       		.byte	1
 602 023e 01       		.byte	1
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 19


 603 023f 01       		.byte	1
 604 0240 01       		.byte	1
 605 0241 01       		.byte	1
 606 0242 01       		.byte	1
 607 0243 01       		.byte	1
 608 0244 01       		.byte	1
 609 0245 01       		.byte	1
 610 0246 01       		.byte	1
 611 0247 01       		.byte	1
 612 0248 01       		.byte	1
 613 0249 01       		.byte	1
 614 024a 01       		.byte	1
 615 024b 01       		.byte	1
 616 024c 01       		.byte	1
 617 024d 01       		.byte	1
 618 024e 01       		.byte	1
 619 024f 01       		.byte	1
 620 0250 01       		.byte	1
 621 0251 01       		.byte	1
 622 0252 01       		.byte	1
 623 0253 01       		.byte	1
 624 0254 01       		.byte	1
 625 0255 01       		.byte	1
 626 0256 01       		.byte	1
 627 0257 01       		.byte	1
 628 0258 01       		.byte	1
 629 0259 01       		.byte	1
 630 025a 01       		.byte	1
 631 025b 01       		.byte	1
 632 025c 01       		.byte	1
 633 025d 01       		.byte	1
 634 025e 01       		.byte	1
 635 025f 01       		.byte	1
 636 0260 01       		.byte	1
 637 0261 01       		.byte	1
 638 0262 01       		.byte	1
 639 0263 01       		.byte	1
 640 0264 01       		.byte	1
 641 0265 01       		.byte	1
 642 0266 01       		.byte	1
 643 0267 01       		.byte	1
 644 0268 01       		.byte	1
 645 0269 01       		.byte	1
 646 026a 01       		.byte	1
 647 026b 01       		.byte	1
 648 026c 01       		.byte	1
 649 026d 01       		.byte	1
 650 026e 01       		.byte	1
 651 026f 01       		.byte	1
 652 0270 01       		.byte	1
 653 0271 01       		.byte	1
 654 0272 01       		.byte	1
 655 0273 01       		.byte	1
 656 0274 01       		.byte	1
 657 0275 01       		.byte	1
 658 0276 01       		.byte	1
 659 0277 01       		.byte	1
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 20


 660 0278 01       		.byte	1
 661 0279 01       		.byte	1
 662 027a 01       		.byte	1
 663 027b 01       		.byte	1
 664 027c 01       		.byte	1
 665 027d 01       		.byte	1
 666 027e 01       		.byte	1
 667 027f 01       		.byte	1
 668 0280 01       		.byte	1
 669 0281 01       		.byte	1
 670 0282 01       		.byte	1
 671 0283 01       		.byte	1
 672 0284 01       		.byte	1
 673 0285 01       		.byte	1
 674 0286 01       		.byte	1
 675 0287 01       		.byte	1
 676 0288 FF       		.byte	-1
 677 0289 FF       		.byte	-1
 678 028a FF       		.byte	-1
 679 028b FF       		.byte	-1
 680 028c FF       		.byte	-1
 681 028d FF       		.byte	-1
 682 028e FF       		.byte	-1
 683 028f FF       		.byte	-1
 684 0290 FF       		.byte	-1
 685 0291 FF       		.byte	-1
 686 0292 FF       		.byte	-1
 687 0293 FF       		.byte	-1
 688 0294 FF       		.byte	-1
 689 0295 FF       		.byte	-1
 690 0296 FF       		.byte	-1
 691 0297 FF       		.byte	-1
 692 0298 FF       		.byte	-1
 693 0299 FF       		.byte	-1
 694 029a FF       		.byte	-1
 695 029b FF       		.byte	-1
 696 029c FF       		.byte	-1
 697 029d FF       		.byte	-1
 698 029e FF       		.byte	-1
 699 029f FF       		.byte	-1
 700 02a0 FF       		.byte	-1
 701 02a1 FF       		.byte	-1
 702 02a2 FF       		.byte	-1
 703 02a3 FF       		.byte	-1
 704 02a4 FF       		.byte	-1
 705 02a5 FF       		.byte	-1
 706 02a6 FF       		.byte	-1
 707 02a7 FF       		.byte	-1
 708 02a8 FF       		.byte	-1
 709 02a9 FF       		.byte	-1
 710 02aa FF       		.byte	-1
 711 02ab FF       		.byte	-1
 712 02ac FF       		.byte	-1
 713 02ad FF       		.byte	-1
 714 02ae FF       		.byte	-1
 715 02af FF       		.byte	-1
 716 02b0 FF       		.byte	-1
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 21


 717 02b1 FF       		.byte	-1
 718 02b2 FF       		.byte	-1
 719 02b3 FF       		.byte	-1
 720 02b4 FF       		.byte	-1
 721 02b5 FF       		.byte	-1
 722 02b6 FF       		.byte	-1
 723 02b7 FF       		.byte	-1
 724 02b8 FF       		.byte	-1
 725 02b9 FF       		.byte	-1
 726 02ba FF       		.byte	-1
 727 02bb FF       		.byte	-1
 728 02bc FF       		.byte	-1
 729 02bd FF       		.byte	-1
 730 02be FF       		.byte	-1
 731 02bf FF       		.byte	-1
 732 02c0 FF       		.byte	-1
 733 02c1 FF       		.byte	-1
 734 02c2 FF       		.byte	-1
 735 02c3 FF       		.byte	-1
 736 02c4 FF       		.byte	-1
 737 02c5 FF       		.byte	-1
 738 02c6 FF       		.byte	-1
 739 02c7 FF       		.byte	-1
 740 02c8 FF       		.byte	-1
 741 02c9 FF       		.byte	-1
 742 02ca FF       		.byte	-1
 743 02cb FF       		.byte	-1
 744 02cc FF       		.byte	-1
 745 02cd FF       		.byte	-1
 746 02ce FF       		.byte	-1
 747 02cf FF       		.byte	-1
 748 02d0 FF       		.byte	-1
 749 02d1 FF       		.byte	-1
 750 02d2 FF       		.byte	-1
 751 02d3 FF       		.byte	-1
 752 02d4 FF       		.byte	-1
 753 02d5 FF       		.byte	-1
 754 02d6 FF       		.byte	-1
 755 02d7 FF       		.byte	-1
 756 02d8 FF       		.byte	-1
 757 02d9 FF       		.byte	-1
 758 02da FF       		.byte	-1
 759 02db FF       		.byte	-1
 760 02dc FF       		.byte	-1
 761 02dd FF       		.byte	-1
 762 02de FF       		.byte	-1
 763 02df FF       		.byte	-1
 764 02e0 FF       		.byte	-1
 765 02e1 FF       		.byte	-1
 766 02e2 FF       		.byte	-1
 767 02e3 FF       		.byte	-1
 768 02e4 FF       		.byte	-1
 769 02e5 FF       		.byte	-1
 770 02e6 FF       		.byte	-1
 771 02e7 FF       		.byte	-1
 772 02e8 FF       		.byte	-1
 773 02e9 FF       		.byte	-1
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 22


 774 02ea FF       		.byte	-1
 775 02eb FF       		.byte	-1
 776 02ec FF       		.byte	-1
 777 02ed FF       		.byte	-1
 778 02ee FF       		.byte	-1
 779 02ef FF       		.byte	-1
 780 02f0 FF       		.byte	-1
 781 02f1 FF       		.byte	-1
 782 02f2 FF       		.byte	-1
 783 02f3 FF       		.byte	-1
 784 02f4 FF       		.byte	-1
 785 02f5 FF       		.byte	-1
 786 02f6 FF       		.byte	-1
 787 02f7 FF       		.byte	-1
 788 02f8 FF       		.byte	-1
 789 02f9 FF       		.byte	-1
 790 02fa FF       		.byte	-1
 791 02fb FF       		.byte	-1
 792 02fc FF       		.byte	-1
 793 02fd FF       		.byte	-1
 794 02fe FF       		.byte	-1
 795 02ff FF       		.byte	-1
 796 0300 FF       		.byte	-1
 797 0301 FF       		.byte	-1
 798 0302 FF       		.byte	-1
 799 0303 FF       		.byte	-1
 800 0304 FF       		.byte	-1
 801 0305 FF       		.byte	-1
 802 0306 FF       		.byte	-1
 803 0307 00       		.align	2
 804              	.LC2:
 805 0308 00       		.byte	0
 806 0309 02       		.byte	2
 807 030a 04       		.byte	4
 808 030b 06       		.byte	6
 809 030c 08       		.byte	8
 810 030d 0A       		.byte	10
 811 030e 0C       		.byte	12
 812 030f 0E       		.byte	14
 813 0310 10       		.byte	16
 814 0311 12       		.byte	18
 815 0312 14       		.byte	20
 816 0313 16       		.byte	22
 817 0314 18       		.byte	24
 818 0315 1A       		.byte	26
 819 0316 1C       		.byte	28
 820 0317 1E       		.byte	30
 821 0318 20       		.byte	32
 822 0319 22       		.byte	34
 823 031a 24       		.byte	36
 824 031b 26       		.byte	38
 825 031c 28       		.byte	40
 826 031d 2A       		.byte	42
 827 031e 2C       		.byte	44
 828 031f 2E       		.byte	46
 829 0320 30       		.byte	48
 830 0321 32       		.byte	50
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 23


 831 0322 34       		.byte	52
 832 0323 36       		.byte	54
 833 0324 38       		.byte	56
 834 0325 3A       		.byte	58
 835 0326 3C       		.byte	60
 836 0327 3E       		.byte	62
 837 0328 40       		.byte	64
 838 0329 42       		.byte	66
 839 032a 44       		.byte	68
 840 032b 46       		.byte	70
 841 032c 48       		.byte	72
 842 032d 4A       		.byte	74
 843 032e 4C       		.byte	76
 844 032f 4E       		.byte	78
 845 0330 50       		.byte	80
 846 0331 52       		.byte	82
 847 0332 54       		.byte	84
 848 0333 56       		.byte	86
 849 0334 58       		.byte	88
 850 0335 5A       		.byte	90
 851 0336 5C       		.byte	92
 852 0337 5E       		.byte	94
 853 0338 60       		.byte	96
 854 0339 62       		.byte	98
 855 033a 64       		.byte	100
 856 033b 66       		.byte	102
 857 033c 68       		.byte	104
 858 033d 6A       		.byte	106
 859 033e 6C       		.byte	108
 860 033f 6E       		.byte	110
 861 0340 70       		.byte	112
 862 0341 72       		.byte	114
 863 0342 74       		.byte	116
 864 0343 76       		.byte	118
 865 0344 78       		.byte	120
 866 0345 7A       		.byte	122
 867 0346 7C       		.byte	124
 868 0347 7E       		.byte	126
 869 0348 80       		.byte	-128
 870 0349 82       		.byte	-126
 871 034a 84       		.byte	-124
 872 034b 86       		.byte	-122
 873 034c 88       		.byte	-120
 874 034d 8A       		.byte	-118
 875 034e 8C       		.byte	-116
 876 034f 8E       		.byte	-114
 877 0350 90       		.byte	-112
 878 0351 92       		.byte	-110
 879 0352 94       		.byte	-108
 880 0353 96       		.byte	-106
 881 0354 98       		.byte	-104
 882 0355 9A       		.byte	-102
 883 0356 9C       		.byte	-100
 884 0357 9E       		.byte	-98
 885 0358 A0       		.byte	-96
 886 0359 A2       		.byte	-94
 887 035a A4       		.byte	-92
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 24


 888 035b A6       		.byte	-90
 889 035c A8       		.byte	-88
 890 035d AA       		.byte	-86
 891 035e AC       		.byte	-84
 892 035f AE       		.byte	-82
 893 0360 B0       		.byte	-80
 894 0361 B2       		.byte	-78
 895 0362 B4       		.byte	-76
 896 0363 B6       		.byte	-74
 897 0364 B8       		.byte	-72
 898 0365 BA       		.byte	-70
 899 0366 BC       		.byte	-68
 900 0367 BE       		.byte	-66
 901 0368 C0       		.byte	-64
 902 0369 C2       		.byte	-62
 903 036a C4       		.byte	-60
 904 036b C6       		.byte	-58
 905 036c C8       		.byte	-56
 906 036d CA       		.byte	-54
 907 036e CC       		.byte	-52
 908 036f CE       		.byte	-50
 909 0370 D0       		.byte	-48
 910 0371 D2       		.byte	-46
 911 0372 D4       		.byte	-44
 912 0373 D6       		.byte	-42
 913 0374 D8       		.byte	-40
 914 0375 DA       		.byte	-38
 915 0376 DC       		.byte	-36
 916 0377 DE       		.byte	-34
 917 0378 E0       		.byte	-32
 918 0379 E2       		.byte	-30
 919 037a E4       		.byte	-28
 920 037b E6       		.byte	-26
 921 037c E8       		.byte	-24
 922 037d EA       		.byte	-22
 923 037e EC       		.byte	-20
 924 037f EE       		.byte	-18
 925 0380 F0       		.byte	-16
 926 0381 F2       		.byte	-14
 927 0382 F4       		.byte	-12
 928 0383 F6       		.byte	-10
 929 0384 F8       		.byte	-8
 930 0385 FA       		.byte	-6
 931 0386 FC       		.byte	-4
 932 0387 FE       		.byte	-2
 933 0388 FF       		.byte	-1
 934 0389 FE       		.byte	-2
 935 038a FC       		.byte	-4
 936 038b FA       		.byte	-6
 937 038c F8       		.byte	-8
 938 038d F6       		.byte	-10
 939 038e F4       		.byte	-12
 940 038f F2       		.byte	-14
 941 0390 F0       		.byte	-16
 942 0391 EE       		.byte	-18
 943 0392 EC       		.byte	-20
 944 0393 EA       		.byte	-22
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 25


 945 0394 E8       		.byte	-24
 946 0395 E6       		.byte	-26
 947 0396 E4       		.byte	-28
 948 0397 E2       		.byte	-30
 949 0398 E0       		.byte	-32
 950 0399 DE       		.byte	-34
 951 039a DC       		.byte	-36
 952 039b DA       		.byte	-38
 953 039c D8       		.byte	-40
 954 039d D6       		.byte	-42
 955 039e D4       		.byte	-44
 956 039f D2       		.byte	-46
 957 03a0 D0       		.byte	-48
 958 03a1 CE       		.byte	-50
 959 03a2 CC       		.byte	-52
 960 03a3 CA       		.byte	-54
 961 03a4 C8       		.byte	-56
 962 03a5 C6       		.byte	-58
 963 03a6 C4       		.byte	-60
 964 03a7 C2       		.byte	-62
 965 03a8 C0       		.byte	-64
 966 03a9 BE       		.byte	-66
 967 03aa BC       		.byte	-68
 968 03ab BA       		.byte	-70
 969 03ac B8       		.byte	-72
 970 03ad B6       		.byte	-74
 971 03ae B4       		.byte	-76
 972 03af B2       		.byte	-78
 973 03b0 B0       		.byte	-80
 974 03b1 AE       		.byte	-82
 975 03b2 AC       		.byte	-84
 976 03b3 AA       		.byte	-86
 977 03b4 A8       		.byte	-88
 978 03b5 A6       		.byte	-90
 979 03b6 A4       		.byte	-92
 980 03b7 A2       		.byte	-94
 981 03b8 A0       		.byte	-96
 982 03b9 9E       		.byte	-98
 983 03ba 9C       		.byte	-100
 984 03bb 9A       		.byte	-102
 985 03bc 98       		.byte	-104
 986 03bd 96       		.byte	-106
 987 03be 94       		.byte	-108
 988 03bf 92       		.byte	-110
 989 03c0 90       		.byte	-112
 990 03c1 8E       		.byte	-114
 991 03c2 8C       		.byte	-116
 992 03c3 8A       		.byte	-118
 993 03c4 88       		.byte	-120
 994 03c5 86       		.byte	-122
 995 03c6 84       		.byte	-124
 996 03c7 82       		.byte	-126
 997 03c8 80       		.byte	-128
 998 03c9 7E       		.byte	126
 999 03ca 7C       		.byte	124
 1000 03cb 7A       		.byte	122
 1001 03cc 78       		.byte	120
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 26


 1002 03cd 76       		.byte	118
 1003 03ce 74       		.byte	116
 1004 03cf 72       		.byte	114
 1005 03d0 70       		.byte	112
 1006 03d1 6E       		.byte	110
 1007 03d2 6C       		.byte	108
 1008 03d3 6A       		.byte	106
 1009 03d4 68       		.byte	104
 1010 03d5 66       		.byte	102
 1011 03d6 64       		.byte	100
 1012 03d7 62       		.byte	98
 1013 03d8 60       		.byte	96
 1014 03d9 5E       		.byte	94
 1015 03da 5C       		.byte	92
 1016 03db 5A       		.byte	90
 1017 03dc 58       		.byte	88
 1018 03dd 56       		.byte	86
 1019 03de 54       		.byte	84
 1020 03df 52       		.byte	82
 1021 03e0 50       		.byte	80
 1022 03e1 4E       		.byte	78
 1023 03e2 4C       		.byte	76
 1024 03e3 4A       		.byte	74
 1025 03e4 48       		.byte	72
 1026 03e5 46       		.byte	70
 1027 03e6 44       		.byte	68
 1028 03e7 42       		.byte	66
 1029 03e8 40       		.byte	64
 1030 03e9 3E       		.byte	62
 1031 03ea 3C       		.byte	60
 1032 03eb 3A       		.byte	58
 1033 03ec 38       		.byte	56
 1034 03ed 36       		.byte	54
 1035 03ee 34       		.byte	52
 1036 03ef 32       		.byte	50
 1037 03f0 30       		.byte	48
 1038 03f1 2E       		.byte	46
 1039 03f2 2C       		.byte	44
 1040 03f3 2A       		.byte	42
 1041 03f4 28       		.byte	40
 1042 03f5 26       		.byte	38
 1043 03f6 24       		.byte	36
 1044 03f7 22       		.byte	34
 1045 03f8 20       		.byte	32
 1046 03f9 1E       		.byte	30
 1047 03fa 1C       		.byte	28
 1048 03fb 1A       		.byte	26
 1049 03fc 18       		.byte	24
 1050 03fd 16       		.byte	22
 1051 03fe 14       		.byte	20
 1052 03ff 12       		.byte	18
 1053 0400 10       		.byte	16
 1054 0401 0E       		.byte	14
 1055 0402 0C       		.byte	12
 1056 0403 0A       		.byte	10
 1057 0404 08       		.byte	8
 1058 0405 06       		.byte	6
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 27


 1059 0406 04       		.byte	4
 1060 0407 00       		.align	2
 1061              	.LC3:
 1062 0408 01       		.byte	1
 1063 0409 02       		.byte	2
 1064 040a 03       		.byte	3
 1065 040b 04       		.byte	4
 1066 040c 05       		.byte	5
 1067 040d 06       		.byte	6
 1068 040e 07       		.byte	7
 1069 040f 08       		.byte	8
 1070 0410 09       		.byte	9
 1071 0411 0A       		.byte	10
 1072 0412 0B       		.byte	11
 1073 0413 0C       		.byte	12
 1074 0414 0D       		.byte	13
 1075 0415 0E       		.byte	14
 1076 0416 0F       		.byte	15
 1077 0417 10       		.byte	16
 1078 0418 11       		.byte	17
 1079 0419 12       		.byte	18
 1080 041a 13       		.byte	19
 1081 041b 14       		.byte	20
 1082 041c 15       		.byte	21
 1083 041d 16       		.byte	22
 1084 041e 17       		.byte	23
 1085 041f 18       		.byte	24
 1086 0420 19       		.byte	25
 1087 0421 1A       		.byte	26
 1088 0422 1B       		.byte	27
 1089 0423 1C       		.byte	28
 1090 0424 1D       		.byte	29
 1091 0425 1E       		.byte	30
 1092 0426 1F       		.byte	31
 1093 0427 20       		.byte	32
 1094 0428 21       		.byte	33
 1095 0429 22       		.byte	34
 1096 042a 23       		.byte	35
 1097 042b 24       		.byte	36
 1098 042c 25       		.byte	37
 1099 042d 26       		.byte	38
 1100 042e 27       		.byte	39
 1101 042f 28       		.byte	40
 1102 0430 29       		.byte	41
 1103 0431 2A       		.byte	42
 1104 0432 2B       		.byte	43
 1105 0433 2C       		.byte	44
 1106 0434 2D       		.byte	45
 1107 0435 2E       		.byte	46
 1108 0436 2F       		.byte	47
 1109 0437 30       		.byte	48
 1110 0438 31       		.byte	49
 1111 0439 32       		.byte	50
 1112 043a 33       		.byte	51
 1113 043b 34       		.byte	52
 1114 043c 35       		.byte	53
 1115 043d 36       		.byte	54
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 28


 1116 043e 37       		.byte	55
 1117 043f 38       		.byte	56
 1118 0440 39       		.byte	57
 1119 0441 3A       		.byte	58
 1120 0442 3B       		.byte	59
 1121 0443 3C       		.byte	60
 1122 0444 3D       		.byte	61
 1123 0445 3E       		.byte	62
 1124 0446 3F       		.byte	63
 1125 0447 40       		.byte	64
 1126 0448 41       		.byte	65
 1127 0449 42       		.byte	66
 1128 044a 43       		.byte	67
 1129 044b 44       		.byte	68
 1130 044c 45       		.byte	69
 1131 044d 46       		.byte	70
 1132 044e 47       		.byte	71
 1133 044f 48       		.byte	72
 1134 0450 49       		.byte	73
 1135 0451 4A       		.byte	74
 1136 0452 4B       		.byte	75
 1137 0453 4C       		.byte	76
 1138 0454 4D       		.byte	77
 1139 0455 4E       		.byte	78
 1140 0456 4F       		.byte	79
 1141 0457 50       		.byte	80
 1142 0458 51       		.byte	81
 1143 0459 52       		.byte	82
 1144 045a 53       		.byte	83
 1145 045b 54       		.byte	84
 1146 045c 55       		.byte	85
 1147 045d 56       		.byte	86
 1148 045e 57       		.byte	87
 1149 045f 58       		.byte	88
 1150 0460 59       		.byte	89
 1151 0461 5A       		.byte	90
 1152 0462 5B       		.byte	91
 1153 0463 5C       		.byte	92
 1154 0464 5D       		.byte	93
 1155 0465 5E       		.byte	94
 1156 0466 5F       		.byte	95
 1157 0467 60       		.byte	96
 1158 0468 61       		.byte	97
 1159 0469 62       		.byte	98
 1160 046a 63       		.byte	99
 1161 046b 64       		.byte	100
 1162 046c 65       		.byte	101
 1163 046d 66       		.byte	102
 1164 046e 67       		.byte	103
 1165 046f 68       		.byte	104
 1166 0470 69       		.byte	105
 1167 0471 6A       		.byte	106
 1168 0472 6B       		.byte	107
 1169 0473 6C       		.byte	108
 1170 0474 6D       		.byte	109
 1171 0475 6E       		.byte	110
 1172 0476 6F       		.byte	111
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 29


 1173 0477 70       		.byte	112
 1174 0478 71       		.byte	113
 1175 0479 72       		.byte	114
 1176 047a 73       		.byte	115
 1177 047b 74       		.byte	116
 1178 047c 75       		.byte	117
 1179 047d 76       		.byte	118
 1180 047e 77       		.byte	119
 1181 047f 78       		.byte	120
 1182 0480 79       		.byte	121
 1183 0481 7A       		.byte	122
 1184 0482 7B       		.byte	123
 1185 0483 7C       		.byte	124
 1186 0484 7D       		.byte	125
 1187 0485 7E       		.byte	126
 1188 0486 7F       		.byte	127
 1189 0487 80       		.byte	-128
 1190 0488 81       		.byte	-127
 1191 0489 82       		.byte	-126
 1192 048a 83       		.byte	-125
 1193 048b 84       		.byte	-124
 1194 048c 85       		.byte	-123
 1195 048d 86       		.byte	-122
 1196 048e 87       		.byte	-121
 1197 048f 88       		.byte	-120
 1198 0490 89       		.byte	-119
 1199 0491 8A       		.byte	-118
 1200 0492 8B       		.byte	-117
 1201 0493 8C       		.byte	-116
 1202 0494 8D       		.byte	-115
 1203 0495 8E       		.byte	-114
 1204 0496 8F       		.byte	-113
 1205 0497 90       		.byte	-112
 1206 0498 91       		.byte	-111
 1207 0499 92       		.byte	-110
 1208 049a 93       		.byte	-109
 1209 049b 94       		.byte	-108
 1210 049c 95       		.byte	-107
 1211 049d 96       		.byte	-106
 1212 049e 97       		.byte	-105
 1213 049f 98       		.byte	-104
 1214 04a0 99       		.byte	-103
 1215 04a1 9A       		.byte	-102
 1216 04a2 9B       		.byte	-101
 1217 04a3 9C       		.byte	-100
 1218 04a4 9D       		.byte	-99
 1219 04a5 9E       		.byte	-98
 1220 04a6 9F       		.byte	-97
 1221 04a7 A0       		.byte	-96
 1222 04a8 A1       		.byte	-95
 1223 04a9 A2       		.byte	-94
 1224 04aa A3       		.byte	-93
 1225 04ab A4       		.byte	-92
 1226 04ac A5       		.byte	-91
 1227 04ad A6       		.byte	-90
 1228 04ae A7       		.byte	-89
 1229 04af A8       		.byte	-88
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 30


 1230 04b0 A9       		.byte	-87
 1231 04b1 AA       		.byte	-86
 1232 04b2 AB       		.byte	-85
 1233 04b3 AC       		.byte	-84
 1234 04b4 AD       		.byte	-83
 1235 04b5 AE       		.byte	-82
 1236 04b6 AF       		.byte	-81
 1237 04b7 B0       		.byte	-80
 1238 04b8 B1       		.byte	-79
 1239 04b9 B2       		.byte	-78
 1240 04ba B3       		.byte	-77
 1241 04bb B4       		.byte	-76
 1242 04bc B5       		.byte	-75
 1243 04bd B6       		.byte	-74
 1244 04be B7       		.byte	-73
 1245 04bf B8       		.byte	-72
 1246 04c0 B9       		.byte	-71
 1247 04c1 BA       		.byte	-70
 1248 04c2 BB       		.byte	-69
 1249 04c3 BC       		.byte	-68
 1250 04c4 BD       		.byte	-67
 1251 04c5 BE       		.byte	-66
 1252 04c6 BF       		.byte	-65
 1253 04c7 C0       		.byte	-64
 1254 04c8 C1       		.byte	-63
 1255 04c9 C2       		.byte	-62
 1256 04ca C3       		.byte	-61
 1257 04cb C4       		.byte	-60
 1258 04cc C5       		.byte	-59
 1259 04cd C6       		.byte	-58
 1260 04ce C7       		.byte	-57
 1261 04cf C8       		.byte	-56
 1262 04d0 C9       		.byte	-55
 1263 04d1 CA       		.byte	-54
 1264 04d2 CB       		.byte	-53
 1265 04d3 CC       		.byte	-52
 1266 04d4 CD       		.byte	-51
 1267 04d5 CE       		.byte	-50
 1268 04d6 CF       		.byte	-49
 1269 04d7 D0       		.byte	-48
 1270 04d8 D1       		.byte	-47
 1271 04d9 D2       		.byte	-46
 1272 04da D3       		.byte	-45
 1273 04db D4       		.byte	-44
 1274 04dc D5       		.byte	-43
 1275 04dd D6       		.byte	-42
 1276 04de D7       		.byte	-41
 1277 04df D8       		.byte	-40
 1278 04e0 D9       		.byte	-39
 1279 04e1 DA       		.byte	-38
 1280 04e2 DB       		.byte	-37
 1281 04e3 DC       		.byte	-36
 1282 04e4 DD       		.byte	-35
 1283 04e5 DE       		.byte	-34
 1284 04e6 DF       		.byte	-33
 1285 04e7 E0       		.byte	-32
 1286 04e8 E1       		.byte	-31
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 31


 1287 04e9 E2       		.byte	-30
 1288 04ea E3       		.byte	-29
 1289 04eb E4       		.byte	-28
 1290 04ec E5       		.byte	-27
 1291 04ed E6       		.byte	-26
 1292 04ee E7       		.byte	-25
 1293 04ef E8       		.byte	-24
 1294 04f0 E9       		.byte	-23
 1295 04f1 EA       		.byte	-22
 1296 04f2 EB       		.byte	-21
 1297 04f3 EC       		.byte	-20
 1298 04f4 ED       		.byte	-19
 1299 04f5 EE       		.byte	-18
 1300 04f6 EF       		.byte	-17
 1301 04f7 F0       		.byte	-16
 1302 04f8 F1       		.byte	-15
 1303 04f9 F2       		.byte	-14
 1304 04fa F3       		.byte	-13
 1305 04fb F4       		.byte	-12
 1306 04fc F5       		.byte	-11
 1307 04fd F6       		.byte	-10
 1308 04fe F7       		.byte	-9
 1309 04ff F8       		.byte	-8
 1310 0500 F9       		.byte	-7
 1311 0501 FA       		.byte	-6
 1312 0502 FB       		.byte	-5
 1313 0503 FC       		.byte	-4
 1314 0504 FD       		.byte	-3
 1315 0505 FE       		.byte	-2
 1316 0506 FF       		.byte	-1
 1317              		.section	.text.Generate_Wave,"ax",%progbits
 1318              		.align	2
 1319              		.global	Generate_Wave
 1320              		.thumb
 1321              		.thumb_func
 1322              		.type	Generate_Wave, %function
 1323              	Generate_Wave:
 1324              	.LFB58:
 376:.\mem1.c      **** 
 377:.\mem1.c      ****         void Generate_Wave(void)
 378:.\mem1.c      ****         {
 1325              		.loc 1 378 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 1608
 1328              		@ frame_needed = 1, uses_anonymous_args = 0
 1329 0000 B0B5     		push	{r4, r5, r7, lr}
 1330              	.LCFI6:
 1331              		.cfi_def_cfa_offset 16
 1332              		.cfi_offset 4, -16
 1333              		.cfi_offset 5, -12
 1334              		.cfi_offset 7, -8
 1335              		.cfi_offset 14, -4
 1336 0002 ADF5CA6D 		sub	sp, sp, #1616
 1337              	.LCFI7:
 1338              		.cfi_def_cfa_offset 1632
 1339 0006 02AF     		add	r7, sp, #8
 1340              	.LCFI8:
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 32


 1341              		.cfi_def_cfa 7, 1624
 379:.\mem1.c      ****             /*
 380:.\mem1.c      ****             uint32 input = ReadFrom_Pi();
 381:.\mem1.c      ****                         
 382:.\mem1.c      ****             uint8 waveType = (input & 0xFF000000)>>24;
 383:.\mem1.c      ****             uint8 amp = (input & 0x00FF0000)>>16;
 384:.\mem1.c      ****             uint8 dcB_l = (input & 0x0000FF00)>>8;
 385:.\mem1.c      ****             uint8 dcB_h = input & 0x000000FF;
 386:.\mem1.c      ****             
 387:.\mem1.c      ****             uint8 dcB = ( dcB_h << 8 ) | dcB_l;
 388:.\mem1.c      ****             
 389:.\mem1.c      ****             */
 390:.\mem1.c      ****             
 391:.\mem1.c      ****             waveType++;
 1342              		.loc 1 391 0
 1343 0008 40F20003 		movw	r3, #:lower16:waveType
 1344 000c C0F20003 		movt	r3, #:upper16:waveType
 1345 0010 1B68     		ldr	r3, [r3, #0]
 1346 0012 03F10102 		add	r2, r3, #1
 1347 0016 40F20003 		movw	r3, #:lower16:waveType
 1348 001a C0F20003 		movt	r3, #:upper16:waveType
 1349 001e 1A60     		str	r2, [r3, #0]
 392:.\mem1.c      ****             waveType++;
 1350              		.loc 1 392 0
 1351 0020 40F20003 		movw	r3, #:lower16:waveType
 1352 0024 C0F20003 		movt	r3, #:upper16:waveType
 1353 0028 1B68     		ldr	r3, [r3, #0]
 1354 002a 03F10102 		add	r2, r3, #1
 1355 002e 40F20003 		movw	r3, #:lower16:waveType
 1356 0032 C0F20003 		movt	r3, #:upper16:waveType
 1357 0036 1A60     		str	r2, [r3, #0]
 393:.\mem1.c      ****             uint8 amp = 127;
 1358              		.loc 1 393 0
 1359 0038 4FF07F03 		mov	r3, #127
 1360 003c 87F80736 		strb	r3, [r7, #1543]
 394:.\mem1.c      ****             uint8 dcB = 127;
 1361              		.loc 1 394 0
 1362 0040 4FF07F03 		mov	r3, #127
 1363 0044 87F80636 		strb	r3, [r7, #1542]
 395:.\mem1.c      ****             
 396:.\mem1.c      ****             sprintf(buffer, "W: %i A: %i DC: %i", waveType, amp, dcB);
 1364              		.loc 1 396 0
 1365 0048 40F20003 		movw	r3, #:lower16:waveType
 1366 004c C0F20003 		movt	r3, #:upper16:waveType
 1367 0050 1A68     		ldr	r2, [r3, #0]
 1368 0052 97F80736 		ldrb	r3, [r7, #1543]	@ zero_extendqisi2
 1369 0056 97F80616 		ldrb	r1, [r7, #1542]	@ zero_extendqisi2
 1370 005a 0091     		str	r1, [sp, #0]
 1371 005c 40F20000 		movw	r0, #:lower16:buffer
 1372 0060 C0F20000 		movt	r0, #:upper16:buffer
 1373 0064 40F20001 		movw	r1, #:lower16:.LC12
 1374 0068 C0F20001 		movt	r1, #:upper16:.LC12
 1375 006c FFF7FEFF 		bl	sprintf
 397:.\mem1.c      ****             TFTSHIELD_1_PrintString(buffer);
 1376              		.loc 1 397 0
 1377 0070 40F20000 		movw	r0, #:lower16:buffer
 1378 0074 C0F20000 		movt	r0, #:upper16:buffer
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 33


 1379 0078 FFF7FEFF 		bl	TFTSHIELD_1_PrintString
 398:.\mem1.c      ****                         
 399:.\mem1.c      ****             #define WAVE_SIZE 255
 400:.\mem1.c      ****             #define DC_BIAS_INCREMENT 0.0156862 // Max DC Bias / 255
 401:.\mem1.c      ****             #define AMPLITUDE_ADJUSTMENT 0.00392156 // == 1/25
 402:.\mem1.c      ****             #define VOLT_VALUE 63.75 // = 1 Volt
 403:.\mem1.c      ****             #define SINE 0x01
 404:.\mem1.c      ****             #define SQUARE 0x03
 405:.\mem1.c      ****             #define TRIANGLE 0x05
 406:.\mem1.c      ****             #define SAWTOOTH 0x07
 407:.\mem1.c      ****             
 408:.\mem1.c      ****             //uint8 Wave[WAVE_SIZE];
 409:.\mem1.c      ****             
 410:.\mem1.c      ****             uint8 SINEWave[WAVE_SIZE] = {
 1380              		.loc 1 410 0
 1381 007c 07F5A062 		add	r2, r7, #1280
 1382 0080 40F20003 		movw	r3, #:lower16:.LC0
 1383 0084 C0F20003 		movt	r3, #:upper16:.LC0
 1384 0088 1146     		mov	r1, r2
 1385 008a 1A46     		mov	r2, r3
 1386 008c 4FF0FF03 		mov	r3, #255
 1387 0090 0846     		mov	r0, r1
 1388 0092 1146     		mov	r1, r2
 1389 0094 1A46     		mov	r2, r3
 1390 0096 FFF7FEFF 		bl	memcpy
 411:.\mem1.c      ****                         128,131,134,137,140,143,146,149,152,156,159,162,165,168,171,174,
 412:.\mem1.c      ****                         176,179,182,185,188,191,193,196,199,201,204,206,209,211,213,216,
 413:.\mem1.c      ****                         218,220,222,224,226,228,230,232,234,236,237,239,240,242,243,245,
 414:.\mem1.c      ****                         246,247,248,249,250,251,252,252,253,254,254,255,255,255,255,255,
 415:.\mem1.c      ****                         255,255,255,255,255,255,254,254,253,252,252,251,250,249,248,247,
 416:.\mem1.c      ****                         246,245,243,242,240,239,237,236,234,232,230,228,226,224,222,220,
 417:.\mem1.c      ****                         218,216,213,211,209,206,204,201,199,196,193,191,188,185,182,179,
 418:.\mem1.c      ****                         176,174,171,168,165,162,159,156,152,149,146,143,140,137,134,131,
 419:.\mem1.c      ****                         128,124,121,118,115,112,109,106,103,99, 96, 93, 90, 87, 84, 81, 
 420:.\mem1.c      ****                         79, 76, 73, 70, 67, 64, 62, 59, 56, 54, 51, 49, 46, 44, 42, 39, 
 421:.\mem1.c      ****                         37, 35, 33, 31, 29, 27, 25, 23, 21, 19, 18, 16, 15, 13, 12, 10, 
 422:.\mem1.c      ****                         9,  8,  7,  6,  5,  4,  3,  3,  2,  1,  1,  0,  0,  0,  0,  0,  
 423:.\mem1.c      ****                         0,  0,  0,  0,  0,  0,  1,  1,  2,  3,  3,  4,  5,  6,  7,  8,  
 424:.\mem1.c      ****                         9,  10, 12, 13, 15, 16, 18, 19, 21, 23, 25, 27, 29, 31, 33, 35, 
 425:.\mem1.c      ****                         37, 39, 42, 44, 46, 49, 51, 54, 56, 59, 62, 64, 67, 70, 73, 76, 
 426:.\mem1.c      ****                         79, 81, 84, 87, 90, 93, 96, 99, 103,106,109,112,115,118,121
 427:.\mem1.c      ****                         };
 428:.\mem1.c      ****             uint8 SQUAREWave[WAVE_SIZE] = {
 1391              		.loc 1 428 0
 1392 009a 07F58062 		add	r2, r7, #1024
 1393 009e 40F20003 		movw	r3, #:lower16:.LC1
 1394 00a2 C0F20003 		movt	r3, #:upper16:.LC1
 1395 00a6 1146     		mov	r1, r2
 1396 00a8 1A46     		mov	r2, r3
 1397 00aa 4FF0FF03 		mov	r3, #255
 1398 00ae 0846     		mov	r0, r1
 1399 00b0 1146     		mov	r1, r2
 1400 00b2 1A46     		mov	r2, r3
 1401 00b4 FFF7FEFF 		bl	memcpy
 429:.\mem1.c      ****                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
 430:.\mem1.c      ****                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
 431:.\mem1.c      ****                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 34


 432:.\mem1.c      ****                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
 433:.\mem1.c      ****                         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 255, 255, 25
 434:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
 435:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
 436:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
 437:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
 438:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
 439:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
 440:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 
 441:.\mem1.c      ****                         255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255};
 442:.\mem1.c      ****                         
 443:.\mem1.c      ****             uint8 TRIANGLEWave[WAVE_SIZE] = {
 1402              		.loc 1 443 0
 1403 00b8 07F54072 		add	r2, r7, #768
 1404 00bc 40F20003 		movw	r3, #:lower16:.LC2
 1405 00c0 C0F20003 		movt	r3, #:upper16:.LC2
 1406 00c4 1146     		mov	r1, r2
 1407 00c6 1A46     		mov	r2, r3
 1408 00c8 4FF0FF03 		mov	r3, #255
 1409 00cc 0846     		mov	r0, r1
 1410 00ce 1146     		mov	r1, r2
 1411 00d0 1A46     		mov	r2, r3
 1412 00d2 FFF7FEFF 		bl	memcpy
 444:.\mem1.c      ****                         0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 
 445:.\mem1.c      ****                         44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80,
 446:.\mem1.c      ****                         86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 11
 447:.\mem1.c      ****                         122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 
 448:.\mem1.c      ****                         156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 
 449:.\mem1.c      ****                         190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 
 450:.\mem1.c      ****                         224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 
 451:.\mem1.c      ****                         254, 252, 250, 248, 246, 244, 242, 240, 238, 236, 234, 232, 230, 228, 226, 
 452:.\mem1.c      ****                         220, 218, 216, 214, 212, 210, 208, 206, 204, 202, 200, 198, 196, 194, 192, 
 453:.\mem1.c      ****                         186, 184, 182, 180, 178, 176, 174, 172, 170, 168, 166, 164, 162, 160, 158, 
 454:.\mem1.c      ****                         152, 150, 148, 146, 144, 142, 140, 138, 136, 134, 132, 130, 128, 126, 124, 
 455:.\mem1.c      ****                         118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 8
 456:.\mem1.c      ****                         80, 78, 76, 74, 72, 70, 68, 66, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44,
 457:.\mem1.c      ****                         38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4
 458:.\mem1.c      ****                         };
 459:.\mem1.c      ****             uint8 SAWTOOTHWave[WAVE_SIZE] = {
 1413              		.loc 1 459 0
 1414 00d6 07F50072 		add	r2, r7, #512
 1415 00da 40F20003 		movw	r3, #:lower16:.LC3
 1416 00de C0F20003 		movt	r3, #:upper16:.LC3
 1417 00e2 1146     		mov	r1, r2
 1418 00e4 1A46     		mov	r2, r3
 1419 00e6 4FF0FF03 		mov	r3, #255
 1420 00ea 0846     		mov	r0, r1
 1421 00ec 1146     		mov	r1, r2
 1422 00ee 1A46     		mov	r2, r3
 1423 00f0 FFF7FEFF 		bl	memcpy
 460:.\mem1.c      ****                             1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 
 461:.\mem1.c      ****                             23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
 462:.\mem1.c      ****                             43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
 463:.\mem1.c      ****                             63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
 464:.\mem1.c      ****                             83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100
 465:.\mem1.c      ****                             103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 1
 466:.\mem1.c      ****                             119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 35


 467:.\mem1.c      ****                             135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 1
 468:.\mem1.c      ****                             151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 1
 469:.\mem1.c      ****                             167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 1
 470:.\mem1.c      ****                             183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 1
 471:.\mem1.c      ****                             199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 2
 472:.\mem1.c      ****                             215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 2
 473:.\mem1.c      ****                             231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 2
 474:.\mem1.c      ****                             247, 248, 249, 250, 251, 252, 253, 254,255
 475:.\mem1.c      ****                     	};
 476:.\mem1.c      ****             
 477:.\mem1.c      ****             if (waveType == SINE)
 1424              		.loc 1 477 0
 1425 00f4 40F20003 		movw	r3, #:lower16:waveType
 1426 00f8 C0F20003 		movt	r3, #:upper16:waveType
 1427 00fc 1B68     		ldr	r3, [r3, #0]
 1428 00fe 012B     		cmp	r3, #1
 1429 0100 7BD1     		bne	.L19
 1430              	.LBB2:
 478:.\mem1.c      ****             { 
 479:.\mem1.c      ****               
 480:.\mem1.c      ****               int i;
 481:.\mem1.c      ****               uint8 newWave[WAVE_SIZE];
 482:.\mem1.c      ****               //memset(newWave, 0, WAVE_SIZE);
 483:.\mem1.c      ****              /*
 484:.\mem1.c      ****               int k = 0;
 485:.\mem1.c      ****                 //uint8 Zeroes[WAVE_SIZE];
 486:.\mem1.c      ****                 
 487:.\mem1.c      ****                 for (k= 0; k<WAVE_SIZE; k++)
 488:.\mem1.c      ****                 {   
 489:.\mem1.c      ****                     //sprintf(buffer, "%i", newWave[k]);
 490:.\mem1.c      ****                     //TFTSHIELD_1_PrintString(buffer);
 491:.\mem1.c      ****                     newWave[k] = 0;
 492:.\mem1.c      ****                     
 493:.\mem1.c      ****                 }*/
 494:.\mem1.c      ****               
 495:.\mem1.c      ****             
 496:.\mem1.c      ****               for(i = 0; i < WAVE_SIZE; i++)
 1431              		.loc 1 496 0
 1432 0102 4FF00003 		mov	r3, #0
 1433 0106 C7F84436 		str	r3, [r7, #1604]
 1434 010a 5CE0     		b	.L20
 1435              	.L23:
 1436              	.LBB3:
 497:.\mem1.c      ****                 {
 498:.\mem1.c      ****                     double val;
 499:.\mem1.c      ****                     
 500:.\mem1.c      ****                     val = (((double)SINEWave[i]) * (((double)amp)/255.0)) + (double)dcB;
 1437              		.loc 1 500 0
 1438 010c 07F5A062 		add	r2, r7, #1280
 1439 0110 D7F84436 		ldr	r3, [r7, #1604]
 1440 0114 D318     		adds	r3, r2, r3
 1441 0116 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1442 0118 1846     		mov	r0, r3
 1443 011a FFF7FEFF 		bl	__aeabi_ui2d
 1444 011e 0446     		mov	r4, r0
 1445 0120 0D46     		mov	r5, r1
 1446 0122 97F80736 		ldrb	r3, [r7, #1543]	@ zero_extendqisi2
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 36


 1447 0126 1846     		mov	r0, r3
 1448 0128 FFF7FEFF 		bl	__aeabi_ui2d
 1449 012c 0246     		mov	r2, r0
 1450 012e 0B46     		mov	r3, r1
 1451 0130 1046     		mov	r0, r2
 1452 0132 1946     		mov	r1, r3
 1453 0134 BAA3     		adr	r3, .L43
 1454 0136 D3E90023 		ldrd	r2, [r3]
 1455 013a FFF7FEFF 		bl	__aeabi_ddiv
 1456 013e 0246     		mov	r2, r0
 1457 0140 0B46     		mov	r3, r1
 1458 0142 2046     		mov	r0, r4
 1459 0144 2946     		mov	r1, r5
 1460 0146 FFF7FEFF 		bl	__aeabi_dmul
 1461 014a 0246     		mov	r2, r0
 1462 014c 0B46     		mov	r3, r1
 1463 014e 1446     		mov	r4, r2
 1464 0150 1D46     		mov	r5, r3
 1465 0152 97F80636 		ldrb	r3, [r7, #1542]	@ zero_extendqisi2
 1466 0156 1846     		mov	r0, r3
 1467 0158 FFF7FEFF 		bl	__aeabi_ui2d
 1468 015c 0246     		mov	r2, r0
 1469 015e 0B46     		mov	r3, r1
 1470 0160 2046     		mov	r0, r4
 1471 0162 2946     		mov	r1, r5
 1472 0164 FFF7FEFF 		bl	__aeabi_dadd
 1473 0168 0246     		mov	r2, r0
 1474 016a 0B46     		mov	r3, r1
 1475 016c 07F5C761 		add	r1, r7, #1592
 1476 0170 C1E90023 		strd	r2, [r1]
 501:.\mem1.c      ****                    
 502:.\mem1.c      ****                     if(val > 255){val = 255;}
 1477              		.loc 1 502 0
 1478 0174 07F5C763 		add	r3, r7, #1592
 1479 0178 D3E90001 		ldrd	r0, [r3]
 1480 017c A8A3     		adr	r3, .L43
 1481 017e D3E90023 		ldrd	r2, [r3]
 1482 0182 FFF7FEFF 		bl	__aeabi_dcmpgt
 1483 0186 0346     		mov	r3, r0
 1484 0188 002B     		cmp	r3, #0
 1485 018a 06D0     		beq	.L21
 1486              	.L39:
 1487              		.loc 1 502 0 is_stmt 0 discriminator 1
 1488 018c A4A3     		adr	r3, .L43
 1489 018e D3E90023 		ldrd	r2, [r3]
 1490 0192 07F5C761 		add	r1, r7, #1592
 1491 0196 C1E90023 		strd	r2, [r1]
 1492              	.L21:
 503:.\mem1.c      ****                     
 504:.\mem1.c      ****                     uint8 newVal = (uint8) val; 
 1493              		.loc 1 504 0 is_stmt 1
 1494 019a 07F5C763 		add	r3, r7, #1592
 1495 019e D3E90001 		ldrd	r0, [r3]
 1496 01a2 FFF7FEFF 		bl	__aeabi_d2uiz
 1497 01a6 0346     		mov	r3, r0
 1498 01a8 87F80536 		strb	r3, [r7, #1541]
 505:.\mem1.c      ****                   
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 37


 506:.\mem1.c      ****                     newWave[i] = newVal;
 1499              		.loc 1 506 0
 1500 01ac 3A46     		mov	r2, r7
 1501 01ae D7F84436 		ldr	r3, [r7, #1604]
 1502 01b2 D318     		adds	r3, r2, r3
 1503 01b4 97F80526 		ldrb	r2, [r7, #1541]
 1504 01b8 1A70     		strb	r2, [r3, #0]
 1505              	.LBE3:
 496:.\mem1.c      ****               for(i = 0; i < WAVE_SIZE; i++)
 1506              		.loc 1 496 0
 1507 01ba D7F84436 		ldr	r3, [r7, #1604]
 1508 01be 03F10103 		add	r3, r3, #1
 1509 01c2 C7F84436 		str	r3, [r7, #1604]
 1510              	.L20:
 496:.\mem1.c      ****               for(i = 0; i < WAVE_SIZE; i++)
 1511              		.loc 1 496 0 is_stmt 0 discriminator 1
 1512 01c6 D7F84436 		ldr	r3, [r7, #1604]
 1513 01ca FE2B     		cmp	r3, #254
 1514 01cc 9EDD     		ble	.L23
 507:.\mem1.c      ****     	        }
 508:.\mem1.c      ****                 
 509:.\mem1.c      ****                 TFTSHIELD_1_PrintString("Drawing Sine../n");
 1515              		.loc 1 509 0 is_stmt 1
 1516 01ce 40F20000 		movw	r0, #:lower16:.LC13
 1517 01d2 C0F20000 		movt	r0, #:upper16:.LC13
 1518 01d6 FFF7FEFF 		bl	TFTSHIELD_1_PrintString
 510:.\mem1.c      ****                 
 511:.\mem1.c      ****                 uint8 Zeroes[WAVE_SIZE];
 512:.\mem1.c      ****                 memset(Zeroes, 0, WAVE_SIZE);
 1519              		.loc 1 512 0
 1520 01da 07F58073 		add	r3, r7, #256
 1521 01de 1846     		mov	r0, r3
 1522 01e0 4FF00001 		mov	r1, #0
 1523 01e4 4FF0FF02 		mov	r2, #255
 1524 01e8 FFF7FEFF 		bl	memset
 513:.\mem1.c      ****                 
 514:.\mem1.c      ****                 WaveDAC8_1_Wave2Setup(newWave, WAVE_SIZE);
 1525              		.loc 1 514 0
 1526 01ec 3B46     		mov	r3, r7
 1527 01ee 1846     		mov	r0, r3
 1528 01f0 4FF0FF01 		mov	r1, #255
 1529 01f4 FFF7FEFF 		bl	WaveDAC8_1_Wave2Setup
 1530 01f8 8CE1     		b	.L18
 1531              	.L19:
 1532              	.LBE2:
 515:.\mem1.c      ****               
 516:.\mem1.c      ****             }
 517:.\mem1.c      ****             
 518:.\mem1.c      ****             else if (waveType == SQUARE)
 1533              		.loc 1 518 0
 1534 01fa 40F20003 		movw	r3, #:lower16:waveType
 1535 01fe C0F20003 		movt	r3, #:upper16:waveType
 1536 0202 1B68     		ldr	r3, [r3, #0]
 1537 0204 032B     		cmp	r3, #3
 1538 0206 7BD1     		bne	.L25
 1539              	.LBB4:
 519:.\mem1.c      ****             {
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 38


 520:.\mem1.c      ****               int i;
 521:.\mem1.c      ****               uint8 newWave[WAVE_SIZE];
 522:.\mem1.c      ****               for(i = 0; i < WAVE_SIZE; i++)
 1540              		.loc 1 522 0
 1541 0208 4FF00003 		mov	r3, #0
 1542 020c C7F83436 		str	r3, [r7, #1588]
 1543 0210 5CE0     		b	.L26
 1544              	.L29:
 1545              	.LBB5:
 523:.\mem1.c      ****                 {
 524:.\mem1.c      ****                     double val;
 525:.\mem1.c      ****                 
 526:.\mem1.c      ****                     val = (((double)SQUAREWave[i]) * (((double)amp)/255.0)) + (double)dcB;
 1546              		.loc 1 526 0
 1547 0212 07F58062 		add	r2, r7, #1024
 1548 0216 D7F83436 		ldr	r3, [r7, #1588]
 1549 021a D318     		adds	r3, r2, r3
 1550 021c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1551 021e 1846     		mov	r0, r3
 1552 0220 FFF7FEFF 		bl	__aeabi_ui2d
 1553 0224 0446     		mov	r4, r0
 1554 0226 0D46     		mov	r5, r1
 1555 0228 97F80736 		ldrb	r3, [r7, #1543]	@ zero_extendqisi2
 1556 022c 1846     		mov	r0, r3
 1557 022e FFF7FEFF 		bl	__aeabi_ui2d
 1558 0232 0246     		mov	r2, r0
 1559 0234 0B46     		mov	r3, r1
 1560 0236 1046     		mov	r0, r2
 1561 0238 1946     		mov	r1, r3
 1562 023a 79A3     		adr	r3, .L43
 1563 023c D3E90023 		ldrd	r2, [r3]
 1564 0240 FFF7FEFF 		bl	__aeabi_ddiv
 1565 0244 0246     		mov	r2, r0
 1566 0246 0B46     		mov	r3, r1
 1567 0248 2046     		mov	r0, r4
 1568 024a 2946     		mov	r1, r5
 1569 024c FFF7FEFF 		bl	__aeabi_dmul
 1570 0250 0246     		mov	r2, r0
 1571 0252 0B46     		mov	r3, r1
 1572 0254 1446     		mov	r4, r2
 1573 0256 1D46     		mov	r5, r3
 1574 0258 97F80636 		ldrb	r3, [r7, #1542]	@ zero_extendqisi2
 1575 025c 1846     		mov	r0, r3
 1576 025e FFF7FEFF 		bl	__aeabi_ui2d
 1577 0262 0246     		mov	r2, r0
 1578 0264 0B46     		mov	r3, r1
 1579 0266 2046     		mov	r0, r4
 1580 0268 2946     		mov	r1, r5
 1581 026a FFF7FEFF 		bl	__aeabi_dadd
 1582 026e 0246     		mov	r2, r0
 1583 0270 0B46     		mov	r3, r1
 1584 0272 07F5C561 		add	r1, r7, #1576
 1585 0276 C1E90023 		strd	r2, [r1]
 527:.\mem1.c      ****                     
 528:.\mem1.c      ****                     if(val > 255){val = 255;}
 1586              		.loc 1 528 0
 1587 027a 07F5C563 		add	r3, r7, #1576
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 39


 1588 027e D3E90001 		ldrd	r0, [r3]
 1589 0282 67A3     		adr	r3, .L43
 1590 0284 D3E90023 		ldrd	r2, [r3]
 1591 0288 FFF7FEFF 		bl	__aeabi_dcmpgt
 1592 028c 0346     		mov	r3, r0
 1593 028e 002B     		cmp	r3, #0
 1594 0290 06D0     		beq	.L27
 1595              	.L40:
 1596              		.loc 1 528 0 is_stmt 0 discriminator 1
 1597 0292 63A3     		adr	r3, .L43
 1598 0294 D3E90023 		ldrd	r2, [r3]
 1599 0298 07F5C561 		add	r1, r7, #1576
 1600 029c C1E90023 		strd	r2, [r1]
 1601              	.L27:
 529:.\mem1.c      ****                     
 530:.\mem1.c      ****                     uint8 newVal = (uint8) val; 
 1602              		.loc 1 530 0 is_stmt 1
 1603 02a0 07F5C563 		add	r3, r7, #1576
 1604 02a4 D3E90001 		ldrd	r0, [r3]
 1605 02a8 FFF7FEFF 		bl	__aeabi_d2uiz
 1606 02ac 0346     		mov	r3, r0
 1607 02ae 87F80436 		strb	r3, [r7, #1540]
 531:.\mem1.c      ****                    
 532:.\mem1.c      ****                     newWave[i] = newVal;
 1608              		.loc 1 532 0
 1609 02b2 3A46     		mov	r2, r7
 1610 02b4 D7F83436 		ldr	r3, [r7, #1588]
 1611 02b8 D318     		adds	r3, r2, r3
 1612 02ba 97F80426 		ldrb	r2, [r7, #1540]
 1613 02be 1A70     		strb	r2, [r3, #0]
 1614              	.LBE5:
 522:.\mem1.c      ****               for(i = 0; i < WAVE_SIZE; i++)
 1615              		.loc 1 522 0
 1616 02c0 D7F83436 		ldr	r3, [r7, #1588]
 1617 02c4 03F10103 		add	r3, r3, #1
 1618 02c8 C7F83436 		str	r3, [r7, #1588]
 1619              	.L26:
 522:.\mem1.c      ****               for(i = 0; i < WAVE_SIZE; i++)
 1620              		.loc 1 522 0 is_stmt 0 discriminator 1
 1621 02cc D7F83436 		ldr	r3, [r7, #1588]
 1622 02d0 FE2B     		cmp	r3, #254
 1623 02d2 9EDD     		ble	.L29
 533:.\mem1.c      ****     	        }
 534:.\mem1.c      ****                 TFTSHIELD_1_PrintString("Drawing Square../n");
 1624              		.loc 1 534 0 is_stmt 1
 1625 02d4 40F20000 		movw	r0, #:lower16:.LC14
 1626 02d8 C0F20000 		movt	r0, #:upper16:.LC14
 1627 02dc FFF7FEFF 		bl	TFTSHIELD_1_PrintString
 535:.\mem1.c      ****                 
 536:.\mem1.c      ****                 uint8 Zeroes[WAVE_SIZE];
 537:.\mem1.c      ****                 memset(Zeroes, 0, WAVE_SIZE);
 1628              		.loc 1 537 0
 1629 02e0 07F58073 		add	r3, r7, #256
 1630 02e4 1846     		mov	r0, r3
 1631 02e6 4FF00001 		mov	r1, #0
 1632 02ea 4FF0FF02 		mov	r2, #255
 1633 02ee FFF7FEFF 		bl	memset
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 40


 538:.\mem1.c      ****            
 539:.\mem1.c      ****                 WaveDAC8_1_Wave2Setup(newWave, WAVE_SIZE);
 1634              		.loc 1 539 0
 1635 02f2 3B46     		mov	r3, r7
 1636 02f4 1846     		mov	r0, r3
 1637 02f6 4FF0FF01 		mov	r1, #255
 1638 02fa FFF7FEFF 		bl	WaveDAC8_1_Wave2Setup
 1639 02fe 09E1     		b	.L18
 1640              	.L25:
 1641              	.LBE4:
 540:.\mem1.c      ****              
 541:.\mem1.c      ****             }
 542:.\mem1.c      ****             
 543:.\mem1.c      ****             else if (waveType == TRIANGLE)
 1642              		.loc 1 543 0
 1643 0300 40F20003 		movw	r3, #:lower16:waveType
 1644 0304 C0F20003 		movt	r3, #:upper16:waveType
 1645 0308 1B68     		ldr	r3, [r3, #0]
 1646 030a 052B     		cmp	r3, #5
 1647 030c 7BD1     		bne	.L30
 1648              	.LBB6:
 544:.\mem1.c      ****             {
 545:.\mem1.c      ****               int i;
 546:.\mem1.c      ****               uint8 newWave[WAVE_SIZE];
 547:.\mem1.c      ****               for(i = 0; i < WAVE_SIZE; i++)
 1649              		.loc 1 547 0
 1650 030e 4FF00003 		mov	r3, #0
 1651 0312 C7F82436 		str	r3, [r7, #1572]
 1652 0316 5CE0     		b	.L31
 1653              	.L34:
 1654              	.LBB7:
 548:.\mem1.c      ****                 {
 549:.\mem1.c      ****                     double val;
 550:.\mem1.c      ****                 
 551:.\mem1.c      ****                     val = (((double)TRIANGLEWave[i]) * (((double)amp)/255.0)) + (double)dcB;
 1655              		.loc 1 551 0
 1656 0318 07F54072 		add	r2, r7, #768
 1657 031c D7F82436 		ldr	r3, [r7, #1572]
 1658 0320 D318     		adds	r3, r2, r3
 1659 0322 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1660 0324 1846     		mov	r0, r3
 1661 0326 FFF7FEFF 		bl	__aeabi_ui2d
 1662 032a 0446     		mov	r4, r0
 1663 032c 0D46     		mov	r5, r1
 1664 032e 97F80736 		ldrb	r3, [r7, #1543]	@ zero_extendqisi2
 1665 0332 1846     		mov	r0, r3
 1666 0334 FFF7FEFF 		bl	__aeabi_ui2d
 1667 0338 0246     		mov	r2, r0
 1668 033a 0B46     		mov	r3, r1
 1669 033c 1046     		mov	r0, r2
 1670 033e 1946     		mov	r1, r3
 1671 0340 37A3     		adr	r3, .L43
 1672 0342 D3E90023 		ldrd	r2, [r3]
 1673 0346 FFF7FEFF 		bl	__aeabi_ddiv
 1674 034a 0246     		mov	r2, r0
 1675 034c 0B46     		mov	r3, r1
 1676 034e 2046     		mov	r0, r4
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 41


 1677 0350 2946     		mov	r1, r5
 1678 0352 FFF7FEFF 		bl	__aeabi_dmul
 1679 0356 0246     		mov	r2, r0
 1680 0358 0B46     		mov	r3, r1
 1681 035a 1446     		mov	r4, r2
 1682 035c 1D46     		mov	r5, r3
 1683 035e 97F80636 		ldrb	r3, [r7, #1542]	@ zero_extendqisi2
 1684 0362 1846     		mov	r0, r3
 1685 0364 FFF7FEFF 		bl	__aeabi_ui2d
 1686 0368 0246     		mov	r2, r0
 1687 036a 0B46     		mov	r3, r1
 1688 036c 2046     		mov	r0, r4
 1689 036e 2946     		mov	r1, r5
 1690 0370 FFF7FEFF 		bl	__aeabi_dadd
 1691 0374 0246     		mov	r2, r0
 1692 0376 0B46     		mov	r3, r1
 1693 0378 07F5C361 		add	r1, r7, #1560
 1694 037c C1E90023 		strd	r2, [r1]
 552:.\mem1.c      ****       
 553:.\mem1.c      ****                     if(val > 255){val = 255;}
 1695              		.loc 1 553 0
 1696 0380 07F5C363 		add	r3, r7, #1560
 1697 0384 D3E90001 		ldrd	r0, [r3]
 1698 0388 25A3     		adr	r3, .L43
 1699 038a D3E90023 		ldrd	r2, [r3]
 1700 038e FFF7FEFF 		bl	__aeabi_dcmpgt
 1701 0392 0346     		mov	r3, r0
 1702 0394 002B     		cmp	r3, #0
 1703 0396 06D0     		beq	.L32
 1704              	.L41:
 1705              		.loc 1 553 0 is_stmt 0 discriminator 1
 1706 0398 21A3     		adr	r3, .L43
 1707 039a D3E90023 		ldrd	r2, [r3]
 1708 039e 07F5C361 		add	r1, r7, #1560
 1709 03a2 C1E90023 		strd	r2, [r1]
 1710              	.L32:
 554:.\mem1.c      ****                     
 555:.\mem1.c      ****                     uint8 newVal = (uint8) val; 
 1711              		.loc 1 555 0 is_stmt 1
 1712 03a6 07F5C363 		add	r3, r7, #1560
 1713 03aa D3E90001 		ldrd	r0, [r3]
 1714 03ae FFF7FEFF 		bl	__aeabi_d2uiz
 1715 03b2 0346     		mov	r3, r0
 1716 03b4 87F80336 		strb	r3, [r7, #1539]
 556:.\mem1.c      ****    
 557:.\mem1.c      ****                     newWave[i] = newVal;
 1717              		.loc 1 557 0
 1718 03b8 3A46     		mov	r2, r7
 1719 03ba D7F82436 		ldr	r3, [r7, #1572]
 1720 03be D318     		adds	r3, r2, r3
 1721 03c0 97F80326 		ldrb	r2, [r7, #1539]
 1722 03c4 1A70     		strb	r2, [r3, #0]
 1723              	.LBE7:
 547:.\mem1.c      ****               for(i = 0; i < WAVE_SIZE; i++)
 1724              		.loc 1 547 0
 1725 03c6 D7F82436 		ldr	r3, [r7, #1572]
 1726 03ca 03F10103 		add	r3, r3, #1
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 42


 1727 03ce C7F82436 		str	r3, [r7, #1572]
 1728              	.L31:
 547:.\mem1.c      ****               for(i = 0; i < WAVE_SIZE; i++)
 1729              		.loc 1 547 0 is_stmt 0 discriminator 1
 1730 03d2 D7F82436 		ldr	r3, [r7, #1572]
 1731 03d6 FE2B     		cmp	r3, #254
 1732 03d8 9EDD     		ble	.L34
 558:.\mem1.c      ****     	        }
 559:.\mem1.c      ****                 TFTSHIELD_1_PrintString("Drawing Triangle../n");
 1733              		.loc 1 559 0 is_stmt 1
 1734 03da 40F20000 		movw	r0, #:lower16:.LC15
 1735 03de C0F20000 		movt	r0, #:upper16:.LC15
 1736 03e2 FFF7FEFF 		bl	TFTSHIELD_1_PrintString
 560:.\mem1.c      ****                 
 561:.\mem1.c      ****                 uint8 Zeroes[WAVE_SIZE];
 562:.\mem1.c      ****                 memset(Zeroes, 0, WAVE_SIZE);
 1737              		.loc 1 562 0
 1738 03e6 07F58073 		add	r3, r7, #256
 1739 03ea 1846     		mov	r0, r3
 1740 03ec 4FF00001 		mov	r1, #0
 1741 03f0 4FF0FF02 		mov	r2, #255
 1742 03f4 FFF7FEFF 		bl	memset
 563:.\mem1.c      ****                 
 564:.\mem1.c      ****                 WaveDAC8_1_Wave2Setup(newWave, WAVE_SIZE);
 1743              		.loc 1 564 0
 1744 03f8 3B46     		mov	r3, r7
 1745 03fa 1846     		mov	r0, r3
 1746 03fc 4FF0FF01 		mov	r1, #255
 1747 0400 FFF7FEFF 		bl	WaveDAC8_1_Wave2Setup
 1748 0404 86E0     		b	.L18
 1749              	.L30:
 1750              	.LBE6:
 565:.\mem1.c      ****             }
 566:.\mem1.c      ****             
 567:.\mem1.c      ****             else if (waveType == SAWTOOTH)
 1751              		.loc 1 567 0
 1752 0406 40F20003 		movw	r3, #:lower16:waveType
 1753 040a C0F20003 		movt	r3, #:upper16:waveType
 1754 040e 1B68     		ldr	r3, [r3, #0]
 1755 0410 072B     		cmp	r3, #7
 1756 0412 7FD1     		bne	.L18
 1757              	.LBB8:
 568:.\mem1.c      ****             {
 569:.\mem1.c      ****                   int i;
 570:.\mem1.c      ****                   uint8 newWave[WAVE_SIZE];
 571:.\mem1.c      ****                   for(i = 0; i < WAVE_SIZE; i++)
 1758              		.loc 1 571 0
 1759 0414 4FF00003 		mov	r3, #0
 1760 0418 C7F81436 		str	r3, [r7, #1556]
 1761 041c 61E0     		b	.L35
 1762              	.L44:
 1763 041e 00BF     		.align	3
 1764              	.L43:
 1765 0420 00000000 		.word	0
 1766 0424 00E06F40 		.word	1081073664
 1767              	.L38:
 1768              	.LBB9:
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 43


 572:.\mem1.c      ****                     {
 573:.\mem1.c      ****                         double val;
 574:.\mem1.c      ****                      
 575:.\mem1.c      ****                         val = (((double)SAWTOOTHWave[i]) * (((double)amp)/255.0)) + (double)dcB;   
 1769              		.loc 1 575 0
 1770 0428 07F50072 		add	r2, r7, #512
 1771 042c D7F81436 		ldr	r3, [r7, #1556]
 1772 0430 D318     		adds	r3, r2, r3
 1773 0432 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1774 0434 1846     		mov	r0, r3
 1775 0436 FFF7FEFF 		bl	__aeabi_ui2d
 1776 043a 0446     		mov	r4, r0
 1777 043c 0D46     		mov	r5, r1
 1778 043e 97F80736 		ldrb	r3, [r7, #1543]	@ zero_extendqisi2
 1779 0442 1846     		mov	r0, r3
 1780 0444 FFF7FEFF 		bl	__aeabi_ui2d
 1781 0448 0246     		mov	r2, r0
 1782 044a 0B46     		mov	r3, r1
 1783 044c 1046     		mov	r0, r2
 1784 044e 1946     		mov	r1, r3
 1785 0450 33A3     		adr	r3, .L45
 1786 0452 D3E90023 		ldrd	r2, [r3]
 1787 0456 FFF7FEFF 		bl	__aeabi_ddiv
 1788 045a 0246     		mov	r2, r0
 1789 045c 0B46     		mov	r3, r1
 1790 045e 2046     		mov	r0, r4
 1791 0460 2946     		mov	r1, r5
 1792 0462 FFF7FEFF 		bl	__aeabi_dmul
 1793 0466 0246     		mov	r2, r0
 1794 0468 0B46     		mov	r3, r1
 1795 046a 1446     		mov	r4, r2
 1796 046c 1D46     		mov	r5, r3
 1797 046e 97F80636 		ldrb	r3, [r7, #1542]	@ zero_extendqisi2
 1798 0472 1846     		mov	r0, r3
 1799 0474 FFF7FEFF 		bl	__aeabi_ui2d
 1800 0478 0246     		mov	r2, r0
 1801 047a 0B46     		mov	r3, r1
 1802 047c 2046     		mov	r0, r4
 1803 047e 2946     		mov	r1, r5
 1804 0480 FFF7FEFF 		bl	__aeabi_dadd
 1805 0484 0246     		mov	r2, r0
 1806 0486 0B46     		mov	r3, r1
 1807 0488 07F5C161 		add	r1, r7, #1544
 1808 048c C1E90023 		strd	r2, [r1]
 576:.\mem1.c      ****                       
 577:.\mem1.c      ****                         if(val > 255){val = 255;}
 1809              		.loc 1 577 0
 1810 0490 07F5C163 		add	r3, r7, #1544
 1811 0494 D3E90001 		ldrd	r0, [r3]
 1812 0498 21A3     		adr	r3, .L45
 1813 049a D3E90023 		ldrd	r2, [r3]
 1814 049e FFF7FEFF 		bl	__aeabi_dcmpgt
 1815 04a2 0346     		mov	r3, r0
 1816 04a4 002B     		cmp	r3, #0
 1817 04a6 06D0     		beq	.L36
 1818              	.L42:
 1819              		.loc 1 577 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 44


 1820 04a8 1DA3     		adr	r3, .L45
 1821 04aa D3E90023 		ldrd	r2, [r3]
 1822 04ae 07F5C161 		add	r1, r7, #1544
 1823 04b2 C1E90023 		strd	r2, [r1]
 1824              	.L36:
 578:.\mem1.c      ****                         
 579:.\mem1.c      ****                         uint8 newVal = (uint8) val; 
 1825              		.loc 1 579 0 is_stmt 1
 1826 04b6 07F5C163 		add	r3, r7, #1544
 1827 04ba D3E90001 		ldrd	r0, [r3]
 1828 04be FFF7FEFF 		bl	__aeabi_d2uiz
 1829 04c2 0346     		mov	r3, r0
 1830 04c4 87F80236 		strb	r3, [r7, #1538]
 580:.\mem1.c      ****                         
 581:.\mem1.c      ****                         newWave[i] = newVal;
 1831              		.loc 1 581 0
 1832 04c8 3A46     		mov	r2, r7
 1833 04ca D7F81436 		ldr	r3, [r7, #1556]
 1834 04ce D318     		adds	r3, r2, r3
 1835 04d0 97F80226 		ldrb	r2, [r7, #1538]
 1836 04d4 1A70     		strb	r2, [r3, #0]
 1837              	.LBE9:
 571:.\mem1.c      ****                   for(i = 0; i < WAVE_SIZE; i++)
 1838              		.loc 1 571 0
 1839 04d6 D7F81436 		ldr	r3, [r7, #1556]
 1840 04da 03F10103 		add	r3, r3, #1
 1841 04de C7F81436 		str	r3, [r7, #1556]
 1842              	.L35:
 571:.\mem1.c      ****                   for(i = 0; i < WAVE_SIZE; i++)
 1843              		.loc 1 571 0 is_stmt 0 discriminator 1
 1844 04e2 D7F81436 		ldr	r3, [r7, #1556]
 1845 04e6 FE2B     		cmp	r3, #254
 1846 04e8 9EDD     		ble	.L38
 582:.\mem1.c      ****         	        }
 583:.\mem1.c      ****             
 584:.\mem1.c      ****                     TFTSHIELD_1_PrintString("Drawing Sawtooth../n");
 1847              		.loc 1 584 0 is_stmt 1
 1848 04ea 40F20000 		movw	r0, #:lower16:.LC16
 1849 04ee C0F20000 		movt	r0, #:upper16:.LC16
 1850 04f2 FFF7FEFF 		bl	TFTSHIELD_1_PrintString
 585:.\mem1.c      ****                     
 586:.\mem1.c      ****                 uint8 Zeroes[WAVE_SIZE];
 587:.\mem1.c      ****                 memset(Zeroes, 0, WAVE_SIZE);
 1851              		.loc 1 587 0
 1852 04f6 07F58073 		add	r3, r7, #256
 1853 04fa 1846     		mov	r0, r3
 1854 04fc 4FF00001 		mov	r1, #0
 1855 0500 4FF0FF02 		mov	r2, #255
 1856 0504 FFF7FEFF 		bl	memset
 588:.\mem1.c      ****                 
 589:.\mem1.c      ****                     
 590:.\mem1.c      ****                 WaveDAC8_1_Wave2Setup(newWave, WAVE_SIZE);
 1857              		.loc 1 590 0
 1858 0508 3B46     		mov	r3, r7
 1859 050a 1846     		mov	r0, r3
 1860 050c 4FF0FF01 		mov	r1, #255
 1861 0510 FFF7FEFF 		bl	WaveDAC8_1_Wave2Setup
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 45


 1862              	.L18:
 1863              	.LBE8:
 591:.\mem1.c      ****                    
 592:.\mem1.c      ****             }
 593:.\mem1.c      ****             
 594:.\mem1.c      ****             
 595:.\mem1.c      ****             
 596:.\mem1.c      ****         }
 1864              		.loc 1 596 0
 1865 0514 07F51277 		add	r7, r7, #584
 1866 0518 07F58067 		add	r7, r7, #1024
 1867 051c BD46     		mov	sp, r7
 1868 051e B0BD     		pop	{r4, r5, r7, pc}
 1869              	.L46:
 1870              		.align	3
 1871              	.L45:
 1872 0520 00000000 		.word	0
 1873 0524 00E06F40 		.word	1081073664
 1874              		.cfi_endproc
 1875              	.LFE58:
 1876              		.size	Generate_Wave, .-Generate_Wave
 1877              		.section	.text.ReadFrom_Pi,"ax",%progbits
 1878              		.align	2
 1879              		.global	ReadFrom_Pi
 1880              		.thumb
 1881              		.thumb_func
 1882              		.type	ReadFrom_Pi, %function
 1883              	ReadFrom_Pi:
 1884              	.LFB59:
 597:.\mem1.c      ****     #endif    
 598:.\mem1.c      ****     
 599:.\mem1.c      ****     #ifdef CY_PWM_PWM_1_H
 600:.\mem1.c      ****         void PWM_Control_0(uint8 cmd, uint16 val)
 601:.\mem1.c      ****         {
 602:.\mem1.c      ****             uint32 result = MAX_32;
 603:.\mem1.c      ****             bool return_flag = 0;
 604:.\mem1.c      ****             
 605:.\mem1.c      ****             switch(cmd)
 606:.\mem1.c      ****             {
 607:.\mem1.c      ****                 case 0x00: PWM_1_Start(); break;
 608:.\mem1.c      ****                 case 0x01: PWM_1_Stop(); break;
 609:.\mem1.c      ****                 case 0x0C: PWM_1_WritePeriod(val); break;
 610:.\mem1.c      ****                 case 0x0D: result = PWM_1_ReadPeriod(); return_flag = 1; break;
 611:.\mem1.c      ****                 case 0x0E: PWM_1_WriteCompare(val); break;
 612:.\mem1.c      ****                 case 0x0F: result  = PWM_1_ReadCompare(); return_flag = 1; break;
 613:.\mem1.c      ****                 //case 0x14: PWM_1_WriteDeadTime(val); break;
 614:.\mem1.c      ****                 //case 0x15: result = PWM_1_ReadDeadTime(); break; 
 615:.\mem1.c      ****                 // 0x16: PWM_1_WriteKillTime(val); break;
 616:.\mem1.c      ****                 //case 0x17: result = PWM_1_ReadKillTime(); break; 
 617:.\mem1.c      ****                 case 0x18: PWM_1_ClearFIFO(); break; 
 618:.\mem1.c      ****                 case 0x19: PWM_1_Sleep(); break; 
 619:.\mem1.c      ****                 case 0x1A: PWM_1_Wakeup(); break; 
 620:.\mem1.c      ****                 
 621:.\mem1.c      ****             }
 622:.\mem1.c      ****             
 623:.\mem1.c      ****             if (return_flag)
 624:.\mem1.c      ****                 {
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 46


 625:.\mem1.c      ****                     WriteTo_Pi(result);
 626:.\mem1.c      ****                 }
 627:.\mem1.c      ****         }
 628:.\mem1.c      ****     #endif
 629:.\mem1.c      ****     
 630:.\mem1.c      ****      #ifdef CY_PWM_PWM_2_H
 631:.\mem1.c      ****         void PWM_Control_1(uint8 cmd, uint16 val)
 632:.\mem1.c      ****         {
 633:.\mem1.c      ****             uint32 result = MAX_32;
 634:.\mem1.c      ****             bool return_flag = 0;
 635:.\mem1.c      ****             
 636:.\mem1.c      ****             switch(cmd)
 637:.\mem1.c      ****             {
 638:.\mem1.c      ****                 case 0x00: PWM_2_Start(); break;
 639:.\mem1.c      ****                 case 0x01: PWM_2_Stop(); break;
 640:.\mem1.c      ****                 case 0x0C: PWM_2_WritePeriod(val); break;
 641:.\mem1.c      ****                 case 0x0D: result = PWM_2_ReadPeriod(); return_flag = 1; break;
 642:.\mem1.c      ****                 case 0x0E: PWM_2_WriteCompare(val); break;
 643:.\mem1.c      ****                 case 0x0F: result  = PWM_2_ReadCompare(); return_flag = 1; break;
 644:.\mem1.c      ****                 //case 0x14: PWM_2_WriteDeadTime(val); break;
 645:.\mem1.c      ****                 //case 0x15: result = PWM_2_ReadDeadTime(); break; 
 646:.\mem1.c      ****                 // 0x16: PWM_2_WriteKillTime(val); break;
 647:.\mem1.c      ****                 //case 0x17: result = PWM_2_ReadKillTime(); break; 
 648:.\mem1.c      ****                 case 0x18: PWM_2_ClearFIFO(); break; 
 649:.\mem1.c      ****                 case 0x19: PWM_2_Sleep(); break; 
 650:.\mem1.c      ****                 case 0x1A: PWM_2_Wakeup(); break; 
 651:.\mem1.c      ****                 
 652:.\mem1.c      ****             }
 653:.\mem1.c      ****             
 654:.\mem1.c      ****             if (return_flag)
 655:.\mem1.c      ****                 {
 656:.\mem1.c      ****                     WriteTo_Pi(result);
 657:.\mem1.c      ****                 } 
 658:.\mem1.c      ****         }
 659:.\mem1.c      ****     #endif
 660:.\mem1.c      ****     
 661:.\mem1.c      ****      #ifdef CY_PWM_PWM_3_H
 662:.\mem1.c      ****         void PWM_Control_2(uint8 cmd, uint16 val)
 663:.\mem1.c      ****         {
 664:.\mem1.c      ****             uint32 result = MAX_32;
 665:.\mem1.c      ****             bool return_flag = 0;
 666:.\mem1.c      ****             
 667:.\mem1.c      ****             switch(cmd)
 668:.\mem1.c      ****             {
 669:.\mem1.c      ****                 case 0x00: PWM_3_Start(); break;
 670:.\mem1.c      ****                 case 0x01: PWM_3_Stop(); break;
 671:.\mem1.c      ****                 case 0x0C: PWM_3_WritePeriod(val); break;
 672:.\mem1.c      ****                 case 0x0D: result = PWM_3_ReadPeriod(); return_flag = 1; break;
 673:.\mem1.c      ****                 case 0x0E: PWM_3_WriteCompare(val); break;
 674:.\mem1.c      ****                 case 0x0F: result  = PWM_3_ReadCompare(); return_flag = 1; break;
 675:.\mem1.c      ****                 //case 0x14: PWM_3_WriteDeadTime(val); break;
 676:.\mem1.c      ****                 //case 0x15: result = PWM_3_ReadDeadTime(); break; 
 677:.\mem1.c      ****                 // 0x16: PWM_3_WriteKillTime(val); break;
 678:.\mem1.c      ****                 //case 0x17: result = PWM_3_ReadKillTime(); break; 
 679:.\mem1.c      ****                 case 0x18: PWM_3_ClearFIFO(); break; 
 680:.\mem1.c      ****                 case 0x19: PWM_3_Sleep(); break; 
 681:.\mem1.c      ****                 case 0x1A: PWM_3_Wakeup(); break; 
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 47


 682:.\mem1.c      ****                 
 683:.\mem1.c      ****             }
 684:.\mem1.c      ****             
 685:.\mem1.c      ****             if (return_flag)
 686:.\mem1.c      ****                 {
 687:.\mem1.c      ****                     WriteTo_Pi(result);
 688:.\mem1.c      ****                 } 
 689:.\mem1.c      ****         }
 690:.\mem1.c      ****     #endif
 691:.\mem1.c      ****     
 692:.\mem1.c      ****      #ifdef CY_PWM_PWM_4_H
 693:.\mem1.c      ****         void PWM_Control_3(uint8 cmd, uint16 val)
 694:.\mem1.c      ****         {
 695:.\mem1.c      ****             uint32 result = MAX_32;
 696:.\mem1.c      ****             bool return_flag = 0;
 697:.\mem1.c      ****             
 698:.\mem1.c      ****             switch(cmd)
 699:.\mem1.c      ****             {
 700:.\mem1.c      ****                 case 0x00: PWM_4_Start(); break;
 701:.\mem1.c      ****                 case 0x01: PWM_4_Stop(); break;
 702:.\mem1.c      ****                 case 0x0C: PWM_4_WritePeriod(val); break;
 703:.\mem1.c      ****                 case 0x0D: result = PWM_4_ReadPeriod(); return_flag = 1; break;
 704:.\mem1.c      ****                 case 0x0E: PWM_4_WriteCompare(val); break;
 705:.\mem1.c      ****                 case 0x0F: result  = PWM_4_ReadCompare(); return_flag = 1; break;
 706:.\mem1.c      ****                 //case 0x14: PWM_4_WriteDeadTime(val); break;
 707:.\mem1.c      ****                 //case 0x15: result = PWM_4_ReadDeadTime(); break; 
 708:.\mem1.c      ****                 // 0x16: PWM_4_WriteKillTime(val); break;
 709:.\mem1.c      ****                 //case 0x17: result = PWM_4_ReadKillTime(); break; 
 710:.\mem1.c      ****                 case 0x18: PWM_4_ClearFIFO(); break; 
 711:.\mem1.c      ****                 case 0x19: PWM_4_Sleep(); break; 
 712:.\mem1.c      ****                 case 0x1A: PWM_4_Wakeup(); break; 
 713:.\mem1.c      ****                 
 714:.\mem1.c      ****             }
 715:.\mem1.c      ****             
 716:.\mem1.c      ****             if (return_flag)
 717:.\mem1.c      ****                 {
 718:.\mem1.c      ****                     WriteTo_Pi(result);
 719:.\mem1.c      ****                 } 
 720:.\mem1.c      ****         }
 721:.\mem1.c      ****     #endif
 722:.\mem1.c      ****     
 723:.\mem1.c      ****      #ifdef CY_PWM_PWM_5_H
 724:.\mem1.c      ****         void PWM_Control_4(uint8 cmd, uint16 val)
 725:.\mem1.c      ****         {
 726:.\mem1.c      ****             uint32 result = MAX_32;
 727:.\mem1.c      ****             bool return_flag = 0;
 728:.\mem1.c      ****             
 729:.\mem1.c      ****             switch(cmd)
 730:.\mem1.c      ****             {
 731:.\mem1.c      ****                 case 0x00: PWM_5_Start(); break;
 732:.\mem1.c      ****                 case 0x01: PWM_5_Stop(); break;
 733:.\mem1.c      ****                 case 0x0C: PWM_5_WritePeriod(val); break;
 734:.\mem1.c      ****                 case 0x0D: result = PWM_5_ReadPeriod(); return_flag = 1; break;
 735:.\mem1.c      ****                 case 0x0E: PWM_5_WriteCompare(val); break;
 736:.\mem1.c      ****                 case 0x0F: result  = PWM_5_ReadCompare(); return_flag = 1; break;
 737:.\mem1.c      ****                 //case 0x14: PWM_5_WriteDeadTime(val); break;
 738:.\mem1.c      ****                 //case 0x15: result = PWM_5_ReadDeadTime(); break; 
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 48


 739:.\mem1.c      ****                 // 0x16: PWM_5_WriteKillTime(val); break;
 740:.\mem1.c      ****                 //case 0x17: result = PWM_5_ReadKillTime(); break; 
 741:.\mem1.c      ****                 case 0x18: PWM_5_ClearFIFO(); break; 
 742:.\mem1.c      ****                 case 0x19: PWM_5_Sleep(); break; 
 743:.\mem1.c      ****                 case 0x1A: PWM_5_Wakeup(); break; 
 744:.\mem1.c      ****                 
 745:.\mem1.c      ****             }
 746:.\mem1.c      ****             
 747:.\mem1.c      ****             if (return_flag)
 748:.\mem1.c      ****                 {
 749:.\mem1.c      ****                     WriteTo_Pi(result);
 750:.\mem1.c      ****                 } 
 751:.\mem1.c      ****         }
 752:.\mem1.c      ****     #endif
 753:.\mem1.c      ****     
 754:.\mem1.c      ****      #ifdef CY_PWM_PWM_6_H
 755:.\mem1.c      ****         void PWM_Control_5(uint8 cmd, uint16 val)
 756:.\mem1.c      ****         {
 757:.\mem1.c      ****             uint32 result = MAX_32;
 758:.\mem1.c      ****             bool return_flag = 0;
 759:.\mem1.c      ****             
 760:.\mem1.c      ****             switch(cmd)
 761:.\mem1.c      ****             {
 762:.\mem1.c      ****                 case 0x00: PWM_6_Start(); break;
 763:.\mem1.c      ****                 case 0x01: PWM_6_Stop(); break;
 764:.\mem1.c      ****                 case 0x0C: PWM_6_WritePeriod(val); break;
 765:.\mem1.c      ****                 case 0x0D: result = PWM_6_ReadPeriod(); return_flag = 1; break;
 766:.\mem1.c      ****                 case 0x0E: PWM_6_WriteCompare(val); break;
 767:.\mem1.c      ****                 case 0x0F: result  = PWM_6_ReadCompare(); return_flag = 1; break;
 768:.\mem1.c      ****                 //case 0x14: PWM_6_WriteDeadTime(val); break;
 769:.\mem1.c      ****                 //case 0x15: result = PWM_6_ReadDeadTime(); break; 
 770:.\mem1.c      ****                 // 0x16: PWM_6_WriteKillTime(val); break;
 771:.\mem1.c      ****                 //case 0x17: result = PWM_6_ReadKillTime(); break; 
 772:.\mem1.c      ****                 case 0x18: PWM_6_ClearFIFO(); break; 
 773:.\mem1.c      ****                 case 0x19: PWM_6_Sleep(); break; 
 774:.\mem1.c      ****                 case 0x1A: PWM_6_Wakeup(); break; 
 775:.\mem1.c      ****             }
 776:.\mem1.c      ****             
 777:.\mem1.c      ****             if (return_flag)
 778:.\mem1.c      ****                 {
 779:.\mem1.c      ****                     WriteTo_Pi(result);
 780:.\mem1.c      ****                 } 
 781:.\mem1.c      ****         }
 782:.\mem1.c      ****         
 783:.\mem1.c      ****     #endif
 784:.\mem1.c      ****     
 785:.\mem1.c      ****      #ifdef CY_PWM_PWM_7_H
 786:.\mem1.c      ****         void PWM_Control_6(uint8 cmd, uint16 val)
 787:.\mem1.c      ****         {
 788:.\mem1.c      ****             uint32 result = MAX_32;
 789:.\mem1.c      ****             bool return_flag = 0;
 790:.\mem1.c      ****             
 791:.\mem1.c      ****             switch(cmd)
 792:.\mem1.c      ****             {
 793:.\mem1.c      ****                 case 0x00: PWM_7_Start(); break;
 794:.\mem1.c      ****                 case 0x01: PWM_7_Stop(); break;
 795:.\mem1.c      ****                 case 0x0C: PWM_7_WritePeriod(val); break;
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 49


 796:.\mem1.c      ****                 case 0x0D: result = PWM_7_ReadPeriod(); return_flag = 1; break;
 797:.\mem1.c      ****                 case 0x0E: PWM_7_WriteCompare(val); break;
 798:.\mem1.c      ****                 case 0x0F: result  = PWM_7_ReadCompare(); return_flag = 1; break;
 799:.\mem1.c      ****                 //case 0x14: PWM_7_WriteDeadTime(val); break;
 800:.\mem1.c      ****                 //case 0x15: result = PWM_7_ReadDeadTime(); break; 
 801:.\mem1.c      ****                 // 0x16: PWM_7_WriteKillTime(val); break;
 802:.\mem1.c      ****                 //case 0x17: result = PWM_7_ReadKillTime(); break; 
 803:.\mem1.c      ****                 case 0x18: PWM_7_ClearFIFO(); break; 
 804:.\mem1.c      ****                 case 0x19: PWM_7_Sleep(); break; 
 805:.\mem1.c      ****                 case 0x1A: PWM_7_Wakeup(); break; 
 806:.\mem1.c      ****             }
 807:.\mem1.c      ****             
 808:.\mem1.c      ****             if (return_flag)
 809:.\mem1.c      ****                 {
 810:.\mem1.c      ****                     WriteTo_Pi(result);
 811:.\mem1.c      ****                 }
 812:.\mem1.c      ****         }
 813:.\mem1.c      ****     #endif
 814:.\mem1.c      ****     
 815:.\mem1.c      ****      #ifdef CY_PWM_PWM_8_H
 816:.\mem1.c      ****         void PWM_Control_7(uint8 cmd, uint16 val)
 817:.\mem1.c      ****         {
 818:.\mem1.c      ****             uint32 result = MAX_32;
 819:.\mem1.c      ****             bool return_flag = 0;
 820:.\mem1.c      ****             
 821:.\mem1.c      ****             switch(cmd)
 822:.\mem1.c      ****             {
 823:.\mem1.c      ****                 case 0x00: PWM_8_Start(); break;
 824:.\mem1.c      ****                 case 0x01: PWM_8_Stop(); break;
 825:.\mem1.c      ****                 case 0x0C: PWM_8_WritePeriod(val); break;
 826:.\mem1.c      ****                 case 0x0D: result = PWM_8_ReadPeriod(); return_flag = 1; break;
 827:.\mem1.c      ****                 case 0x0E: PWM_8_WriteCompare(val); break;
 828:.\mem1.c      ****                 case 0x0F: result  = PWM_8_ReadCompare(); return_flag = 1; break;
 829:.\mem1.c      ****                 //case 0x14: PWM_8_WriteDeadTime(val); break;
 830:.\mem1.c      ****                 //case 0x15: result = PWM_8_ReadDeadTime(); break; 
 831:.\mem1.c      ****                 // 0x16: PWM_8_WriteKillTime(val); break;
 832:.\mem1.c      ****                 //case 0x17: result = PWM_8_ReadKillTime(); break; 
 833:.\mem1.c      ****                 case 0x18: PWM_8_ClearFIFO(); break; 
 834:.\mem1.c      ****                 case 0x19: PWM_8_Sleep(); break; 
 835:.\mem1.c      ****                 case 0x1A: PWM_8_Wakeup(); break;
 836:.\mem1.c      ****             }
 837:.\mem1.c      ****             
 838:.\mem1.c      ****             if (return_flag)
 839:.\mem1.c      ****                 {
 840:.\mem1.c      ****                     WriteTo_Pi(result);
 841:.\mem1.c      ****                 }
 842:.\mem1.c      ****         }
 843:.\mem1.c      ****     #endif
 844:.\mem1.c      ****     
 845:.\mem1.c      ****     
 846:.\mem1.c      ****     #ifdef CY_STATUS_REG_Status_Reg_1_H 
 847:.\mem1.c      ****         #if !defined(Status_Reg_1_sts_sts_reg__REMOVED)
 848:.\mem1.c      ****             void Input_Control0(uint8 cmd, uint16 val)
 849:.\mem1.c      ****             {
 850:.\mem1.c      ****                 uint32 result = MAX_32; 
 851:.\mem1.c      ****                 bool return_flag = 0;
 852:.\mem1.c      ****                 
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 50


 853:.\mem1.c      ****                 switch(cmd)
 854:.\mem1.c      ****                 {
 855:.\mem1.c      ****                     case 0x00: result = Status_Reg_1_Read(); return_flag = 1; break;
 856:.\mem1.c      ****                 }
 857:.\mem1.c      ****                 
 858:.\mem1.c      ****                 if (return_flag)
 859:.\mem1.c      ****                 {
 860:.\mem1.c      ****                     WriteTo_Pi(result);
 861:.\mem1.c      ****                 }
 862:.\mem1.c      ****             }
 863:.\mem1.c      ****         #endif
 864:.\mem1.c      ****     #endif
 865:.\mem1.c      ****     
 866:.\mem1.c      ****      #ifdef CY_STATUS_REG_Status_Reg_2_H 
 867:.\mem1.c      ****         #if !defined(Status_Reg_1_sts_sts_reg__REMOVED)
 868:.\mem1.c      ****             void Input_Control1(uint8 cmd, uint16 val)
 869:.\mem1.c      ****             {
 870:.\mem1.c      ****                 uint32 result = MAX_32; 
 871:.\mem1.c      ****                 bool return_flag = 0;
 872:.\mem1.c      ****                 
 873:.\mem1.c      ****                 switch(cmd)
 874:.\mem1.c      ****                 {
 875:.\mem1.c      ****                     case 0x00: result = Status_Reg_2_Read(); return_flag = 1; break;
 876:.\mem1.c      ****                 }
 877:.\mem1.c      ****                 
 878:.\mem1.c      ****                 if (return_flag)
 879:.\mem1.c      ****                 {
 880:.\mem1.c      ****                     WriteTo_Pi(result);
 881:.\mem1.c      ****                 } 
 882:.\mem1.c      ****             }
 883:.\mem1.c      ****         #endif
 884:.\mem1.c      ****     #endif
 885:.\mem1.c      ****     
 886:.\mem1.c      ****     
 887:.\mem1.c      ****     #ifdef CY_CONTROL_REG_Control_Reg_1_H
 888:.\mem1.c      ****         #if !defined(Control_Reg_1_Sync_ctrl_reg__REMOVED)
 889:.\mem1.c      ****             void Output_Control0(uint8 cmd, uint16 val)
 890:.\mem1.c      ****             {
 891:.\mem1.c      ****                 uint32 result = MAX_32; 
 892:.\mem1.c      ****                 bool return_flag = 0;
 893:.\mem1.c      ****                 TFTSHIELD_1_PrintString(" IN \n");
 894:.\mem1.c      ****                 
 895:.\mem1.c      ****                 switch(cmd)
 896:.\mem1.c      ****                 {
 897:.\mem1.c      ****                     case 0x00: result = Control_Reg_1_Read(); return_flag = 1; sprintf(buffer, " re
 898:.\mem1.c      ****                     case 0x01: Control_Reg_1_Write(val); break; 
 899:.\mem1.c      ****                 }
 900:.\mem1.c      ****                 
 901:.\mem1.c      ****                 if (return_flag)
 902:.\mem1.c      ****                 {
 903:.\mem1.c      ****                     WriteTo_Pi(result);
 904:.\mem1.c      ****                 } 
 905:.\mem1.c      ****             }
 906:.\mem1.c      ****         #endif
 907:.\mem1.c      ****     #endif
 908:.\mem1.c      ****     
 909:.\mem1.c      ****     #ifdef CY_CONTROL_REG_Control_Reg_2_H
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 51


 910:.\mem1.c      ****         #if !defined(Control_Reg_1_Sync_ctrl_reg__REMOVED)
 911:.\mem1.c      ****             void Output_Control1(uint8 cmd, uint16 val)
 912:.\mem1.c      ****             {
 913:.\mem1.c      ****                 uint32 result = MAX_32; 
 914:.\mem1.c      ****                 bool return_flag = 0;
 915:.\mem1.c      ****                 
 916:.\mem1.c      ****                 switch(cmd)
 917:.\mem1.c      ****                 {
 918:.\mem1.c      ****                     case 0x00: result = Control_Reg_2_Read(); return_flag = 1; break;
 919:.\mem1.c      ****                     case 0x01: Control_Reg_2_Write(val); break; 
 920:.\mem1.c      ****                 }
 921:.\mem1.c      ****                 
 922:.\mem1.c      ****                 if (return_flag)
 923:.\mem1.c      ****                 {
 924:.\mem1.c      ****                     WriteTo_Pi(result);
 925:.\mem1.c      ****                 } 
 926:.\mem1.c      ****             }
 927:.\mem1.c      ****         #endif
 928:.\mem1.c      ****     #endif
 929:.\mem1.c      ****     
 930:.\mem1.c      ****     uint32 ReadFrom_Pi(void)
 931:.\mem1.c      ****     {   
 1885              		.loc 1 931 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 8
 1888              		@ frame_needed = 1, uses_anonymous_args = 0
 1889 0000 80B5     		push	{r7, lr}
 1890              	.LCFI9:
 1891              		.cfi_def_cfa_offset 8
 1892              		.cfi_offset 7, -8
 1893              		.cfi_offset 14, -4
 1894 0002 82B0     		sub	sp, sp, #8
 1895              	.LCFI10:
 1896              		.cfi_def_cfa_offset 16
 1897 0004 00AF     		add	r7, sp, #0
 1898              	.LCFI11:
 1899              		.cfi_def_cfa_register 7
 932:.\mem1.c      ****         uint8 addr = 0;
 1900              		.loc 1 932 0
 1901 0006 4FF00003 		mov	r3, #0
 1902 000a FB71     		strb	r3, [r7, #7]
 933:.\mem1.c      ****         uint8 cmd = 0;
 1903              		.loc 1 933 0
 1904 000c 4FF00003 		mov	r3, #0
 1905 0010 BB71     		strb	r3, [r7, #6]
 934:.\mem1.c      ****         uint8 dat_lo = 0;
 1906              		.loc 1 934 0
 1907 0012 4FF00003 		mov	r3, #0
 1908 0016 7B71     		strb	r3, [r7, #5]
 935:.\mem1.c      ****         uint8 dat_hi = 0;
 1909              		.loc 1 935 0
 1910 0018 4FF00003 		mov	r3, #0
 1911 001c 3B71     		strb	r3, [r7, #4]
 936:.\mem1.c      ****         
 937:.\mem1.c      ****         while(!SPIS_1_GetRxBufferSize()){/* Wait until the Rx buffer isn't empty */}
 1912              		.loc 1 937 0
 1913 001e 00BF     		nop
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 52


 1914              	.L48:
 1915              		.loc 1 937 0 is_stmt 0 discriminator 1
 1916 0020 FFF7FEFF 		bl	SPIS_1_GetRxBufferSize
 1917 0024 0346     		mov	r3, r0
 1918 0026 002B     		cmp	r3, #0
 1919 0028 FAD0     		beq	.L48
 938:.\mem1.c      ****             addr = SPIS_1_ReadRxData();
 1920              		.loc 1 938 0 is_stmt 1
 1921 002a FFF7FEFF 		bl	SPIS_1_ReadRxData
 1922 002e 0346     		mov	r3, r0
 1923 0030 FB71     		strb	r3, [r7, #7]
 939:.\mem1.c      **** 	    while(!SPIS_1_GetRxBufferSize()){/* Wait until the Rx buffer isn't empty */}
 1924              		.loc 1 939 0
 1925 0032 00BF     		nop
 1926              	.L49:
 1927              		.loc 1 939 0 is_stmt 0 discriminator 1
 1928 0034 FFF7FEFF 		bl	SPIS_1_GetRxBufferSize
 1929 0038 0346     		mov	r3, r0
 1930 003a 002B     		cmp	r3, #0
 1931 003c FAD0     		beq	.L49
 940:.\mem1.c      **** 	        cmd = SPIS_1_ReadRxData();
 1932              		.loc 1 940 0 is_stmt 1
 1933 003e FFF7FEFF 		bl	SPIS_1_ReadRxData
 1934 0042 0346     		mov	r3, r0
 1935 0044 BB71     		strb	r3, [r7, #6]
 941:.\mem1.c      **** 	    while(!SPIS_1_GetRxBufferSize()){/* Wait until the Rx buffer isn't empty */}
 1936              		.loc 1 941 0
 1937 0046 00BF     		nop
 1938              	.L50:
 1939              		.loc 1 941 0 is_stmt 0 discriminator 1
 1940 0048 FFF7FEFF 		bl	SPIS_1_GetRxBufferSize
 1941 004c 0346     		mov	r3, r0
 1942 004e 002B     		cmp	r3, #0
 1943 0050 FAD0     		beq	.L50
 942:.\mem1.c      **** 	        dat_lo = SPIS_1_ReadRxData();
 1944              		.loc 1 942 0 is_stmt 1
 1945 0052 FFF7FEFF 		bl	SPIS_1_ReadRxData
 1946 0056 0346     		mov	r3, r0
 1947 0058 7B71     		strb	r3, [r7, #5]
 943:.\mem1.c      ****         while(!SPIS_1_GetRxBufferSize()){/* Wait until the Rx buffer isn't empty */}
 1948              		.loc 1 943 0
 1949 005a 00BF     		nop
 1950              	.L51:
 1951              		.loc 1 943 0 is_stmt 0 discriminator 1
 1952 005c FFF7FEFF 		bl	SPIS_1_GetRxBufferSize
 1953 0060 0346     		mov	r3, r0
 1954 0062 002B     		cmp	r3, #0
 1955 0064 FAD0     		beq	.L51
 944:.\mem1.c      **** 	        dat_hi = SPIS_1_ReadRxData();
 1956              		.loc 1 944 0 is_stmt 1
 1957 0066 FFF7FEFF 		bl	SPIS_1_ReadRxData
 1958 006a 0346     		mov	r3, r0
 1959 006c 3B71     		strb	r3, [r7, #4]
 945:.\mem1.c      ****         
 946:.\mem1.c      ****         uint32 input = (((addr<<24)|(cmd<<16))|(dat_lo<<8))|(dat_hi);
 1960              		.loc 1 946 0
 1961 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 53


 1962 0070 4FEA0362 		lsl	r2, r3, #24
 1963 0074 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1964 0076 4FEA0343 		lsl	r3, r3, #16
 1965 007a 1A43     		orrs	r2, r2, r3
 1966 007c 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1967 007e 4FEA0323 		lsl	r3, r3, #8
 1968 0082 1A43     		orrs	r2, r2, r3
 1969 0084 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 1970 0086 1343     		orrs	r3, r3, r2
 1971 0088 3B60     		str	r3, [r7, #0]
 947:.\mem1.c      ****         return input;
 1972              		.loc 1 947 0
 1973 008a 3B68     		ldr	r3, [r7, #0]
 948:.\mem1.c      ****     }
 1974              		.loc 1 948 0
 1975 008c 1846     		mov	r0, r3
 1976 008e 07F10807 		add	r7, r7, #8
 1977 0092 BD46     		mov	sp, r7
 1978 0094 80BD     		pop	{r7, pc}
 1979              		.cfi_endproc
 1980              	.LFE59:
 1981              		.size	ReadFrom_Pi, .-ReadFrom_Pi
 1982 0096 00BF     		.section	.rodata
 1983 0507 00       		.align	2
 1984              	.LC17:
 1985 0508 6F75743A 		.ascii	"out: %i %i %i %i (%i)\012\000"
 1985      20256920 
 1985      25692025 
 1985      69202569 
 1985      20282569 
 1986 051f 00       		.section	.text.WriteTo_Pi,"ax",%progbits
 1987              		.align	2
 1988              		.global	WriteTo_Pi
 1989              		.thumb
 1990              		.thumb_func
 1991              		.type	WriteTo_Pi, %function
 1992              	WriteTo_Pi:
 1993              	.LFB60:
 949:.\mem1.c      ****     
 950:.\mem1.c      ****     void WriteTo_Pi(uint32 dat)
 951:.\mem1.c      ****     {
 1994              		.loc 1 951 0
 1995              		.cfi_startproc
 1996              		@ args = 0, pretend = 0, frame = 16
 1997              		@ frame_needed = 1, uses_anonymous_args = 0
 1998 0000 80B5     		push	{r7, lr}
 1999              	.LCFI12:
 2000              		.cfi_def_cfa_offset 8
 2001              		.cfi_offset 7, -8
 2002              		.cfi_offset 14, -4
 2003 0002 88B0     		sub	sp, sp, #32
 2004              	.LCFI13:
 2005              		.cfi_def_cfa_offset 40
 2006 0004 04AF     		add	r7, sp, #16
 2007              	.LCFI14:
 2008              		.cfi_def_cfa 7, 24
 2009 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 54


 952:.\mem1.c      ****         
 953:.\mem1.c      ****         #ifdef CY_SPIS_SPIS_1_H
 954:.\mem1.c      ****             uint8 out_hi = (dat & 0xFF000000)>>24;
 2010              		.loc 1 954 0
 2011 0008 7B68     		ldr	r3, [r7, #4]
 2012 000a 4FEA1363 		lsr	r3, r3, #24
 2013 000e FB73     		strb	r3, [r7, #15]
 955:.\mem1.c      ****             uint8 out_mid_hi = (dat & 0x00FF0000)>>16;
 2014              		.loc 1 955 0
 2015 0010 7B68     		ldr	r3, [r7, #4]
 2016 0012 03F47F03 		and	r3, r3, #16711680
 2017 0016 4FEA1343 		lsr	r3, r3, #16
 2018 001a BB73     		strb	r3, [r7, #14]
 956:.\mem1.c      ****             uint8 out_mid_lo = (dat & 0x0000FF00)>>8;
 2019              		.loc 1 956 0
 2020 001c 7B68     		ldr	r3, [r7, #4]
 2021 001e 03F47F43 		and	r3, r3, #65280
 2022 0022 4FEA1323 		lsr	r3, r3, #8
 2023 0026 7B73     		strb	r3, [r7, #13]
 957:.\mem1.c      ****             uint8 out_lo = dat & 0x000000FF;
 2024              		.loc 1 957 0
 2025 0028 7B68     		ldr	r3, [r7, #4]
 2026 002a 3B73     		strb	r3, [r7, #12]
 958:.\mem1.c      ****             
 959:.\mem1.c      ****             //Try
 960:.\mem1.c      ****             /*
 961:.\mem1.c      ****             uint32 *out_ptr ;
 962:.\mem1.c      ****             out_ptr = &output;
 963:.\mem1.c      ****             uint8 out_hi = *out_ptr;
 964:.\mem1.c      ****             uint8 out_mid_hi = *(out_ptr + 1);
 965:.\mem1.c      ****             uint8 out_mid_lo = *(out_ptr + 2);
 966:.\mem1.c      ****             uint8 out_lo = *(out_ptr + 3);
 967:.\mem1.c      ****             */
 968:.\mem1.c      **** 
 969:.\mem1.c      ****             SPIS_1_ClearTxBuffer();
 2027              		.loc 1 969 0
 2028 002c FFF7FEFF 		bl	SPIS_1_ClearTxBuffer
 970:.\mem1.c      ****             SPIS_1_ClearFIFO();    //Clear the SPI buffers
 2029              		.loc 1 970 0
 2030 0030 FFF7FEFF 		bl	SPIS_1_ClearFIFO
 971:.\mem1.c      ****             SPIS_1_ClearRxBuffer();
 2031              		.loc 1 971 0
 2032 0034 FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
 972:.\mem1.c      ****             
 973:.\mem1.c      ****             uint8 SPI_buffer[3] = {out_mid_lo, out_mid_hi, out_hi};
 2033              		.loc 1 973 0
 2034 0038 7B7B     		ldrb	r3, [r7, #13]
 2035 003a 3B72     		strb	r3, [r7, #8]
 2036 003c BB7B     		ldrb	r3, [r7, #14]
 2037 003e 7B72     		strb	r3, [r7, #9]
 2038 0040 FB7B     		ldrb	r3, [r7, #15]
 2039 0042 BB72     		strb	r3, [r7, #10]
 974:.\mem1.c      ****             SPIS_1_WriteTxDataZero(out_lo);
 2040              		.loc 1 974 0
 2041 0044 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 2042 0046 1846     		mov	r0, r3
 2043 0048 FFF7FEFF 		bl	SPIS_1_WriteTxDataZero
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 55


 975:.\mem1.c      ****             SPIS_1_PutArray(SPI_buffer, 3);
 2044              		.loc 1 975 0
 2045 004c 07F10803 		add	r3, r7, #8
 2046 0050 1846     		mov	r0, r3
 2047 0052 4FF00301 		mov	r1, #3
 2048 0056 FFF7FEFF 		bl	SPIS_1_PutArray
 976:.\mem1.c      ****             
 977:.\mem1.c      ****             sprintf(buffer,"out: %i %i %i %i (%i)\n",out_lo, out_mid_lo, out_mid_hi, out_hi, dat);
 2049              		.loc 1 977 0
 2050 005a 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 2051 005c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 2052 005e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 2053 0060 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 2054 0062 0090     		str	r0, [sp, #0]
 2055 0064 0191     		str	r1, [sp, #4]
 2056 0066 7968     		ldr	r1, [r7, #4]
 2057 0068 0291     		str	r1, [sp, #8]
 2058 006a 40F20000 		movw	r0, #:lower16:buffer
 2059 006e C0F20000 		movt	r0, #:upper16:buffer
 2060 0072 40F20001 		movw	r1, #:lower16:.LC17
 2061 0076 C0F20001 		movt	r1, #:upper16:.LC17
 2062 007a FFF7FEFF 		bl	sprintf
 978:.\mem1.c      ****             TFTSHIELD_1_PrintString(buffer);
 2063              		.loc 1 978 0
 2064 007e 40F20000 		movw	r0, #:lower16:buffer
 2065 0082 C0F20000 		movt	r0, #:upper16:buffer
 2066 0086 FFF7FEFF 		bl	TFTSHIELD_1_PrintString
 979:.\mem1.c      ****             
 980:.\mem1.c      ****             while(!(SPIS_1_ReadTxStatus() & SPIS_1_STS_SPI_DONE)); //Wait until Tx buffer empties
 2067              		.loc 1 980 0
 2068 008a 00BF     		nop
 2069              	.L54:
 2070              		.loc 1 980 0 is_stmt 0 discriminator 1
 2071 008c FFF7FEFF 		bl	SPIS_1_ReadTxStatus
 2072 0090 0346     		mov	r3, r0
 2073 0092 03F00103 		and	r3, r3, #1
 2074 0096 002B     		cmp	r3, #0
 2075 0098 F8D0     		beq	.L54
 981:.\mem1.c      ****             
 982:.\mem1.c      ****         #endif
 983:.\mem1.c      ****     }
 2076              		.loc 1 983 0 is_stmt 1
 2077 009a 07F11007 		add	r7, r7, #16
 2078 009e BD46     		mov	sp, r7
 2079 00a0 80BD     		pop	{r7, pc}
 2080              		.cfi_endproc
 2081              	.LFE60:
 2082              		.size	WriteTo_Pi, .-WriteTo_Pi
 2083 00a2 00BF     		.text
 2084              	.Letext0:
 2085              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.0\\psoc creator\\import\\gnu_cs\\arm\\4
 2086              		.file 3 "./Generated_Source/PSoC5/cytypes.h"
 2087              		.file 4 "./Generated_Source/PSoC5/TFTSHIELD_1.h"
 2088              		.file 5 "./Generated_Source/PSoC5/core_cm3.h"
 2089              		.section	.debug_info,"",%progbits
 2090              	.Ldebug_info0:
 2091 0000 85050000 		.4byte	0x585
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 56


 2092 0004 0200     		.2byte	0x2
 2093 0006 00000000 		.4byte	.Ldebug_abbrev0
 2094 000a 04       		.byte	0x4
 2095 000b 01       		.uleb128 0x1
 2096 000c 23010000 		.4byte	.LASF57
 2097 0010 01       		.byte	0x1
 2098 0011 BA000000 		.4byte	.LASF58
 2099 0015 6C010000 		.4byte	.LASF59
 2100 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2101 001d 00000000 		.4byte	0
 2102 0021 00000000 		.4byte	0
 2103 0025 00000000 		.4byte	.Ldebug_line0
 2104 0029 02       		.uleb128 0x2
 2105 002a 01       		.byte	0x1
 2106 002b 06       		.byte	0x6
 2107 002c C9010000 		.4byte	.LASF0
 2108 0030 03       		.uleb128 0x3
 2109 0031 8F000000 		.4byte	.LASF2
 2110 0035 02       		.byte	0x2
 2111 0036 2A       		.byte	0x2a
 2112 0037 3B000000 		.4byte	0x3b
 2113 003b 02       		.uleb128 0x2
 2114 003c 01       		.byte	0x1
 2115 003d 08       		.byte	0x8
 2116 003e BB010000 		.4byte	.LASF1
 2117 0042 03       		.uleb128 0x3
 2118 0043 36020000 		.4byte	.LASF3
 2119 0047 02       		.byte	0x2
 2120 0048 35       		.byte	0x35
 2121 0049 4D000000 		.4byte	0x4d
 2122 004d 02       		.uleb128 0x2
 2123 004e 02       		.byte	0x2
 2124 004f 05       		.byte	0x5
 2125 0050 17000000 		.4byte	.LASF4
 2126 0054 03       		.uleb128 0x3
 2127 0055 F9010000 		.4byte	.LASF5
 2128 0059 02       		.byte	0x2
 2129 005a 36       		.byte	0x36
 2130 005b 5F000000 		.4byte	0x5f
 2131 005f 02       		.uleb128 0x2
 2132 0060 02       		.byte	0x2
 2133 0061 07       		.byte	0x7
 2134 0062 0D020000 		.4byte	.LASF6
 2135 0066 03       		.uleb128 0x3
 2136 0067 2E020000 		.4byte	.LASF7
 2137 006b 02       		.byte	0x2
 2138 006c 4F       		.byte	0x4f
 2139 006d 71000000 		.4byte	0x71
 2140 0071 02       		.uleb128 0x2
 2141 0072 04       		.byte	0x4
 2142 0073 05       		.byte	0x5
 2143 0074 F4000000 		.4byte	.LASF8
 2144 0078 02       		.uleb128 0x2
 2145 0079 04       		.byte	0x4
 2146 007a 07       		.byte	0x7
 2147 007b 6E020000 		.4byte	.LASF9
 2148 007f 02       		.uleb128 0x2
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 57


 2149 0080 08       		.byte	0x8
 2150 0081 05       		.byte	0x5
 2151 0082 D2000000 		.4byte	.LASF10
 2152 0086 02       		.uleb128 0x2
 2153 0087 08       		.byte	0x8
 2154 0088 07       		.byte	0x7
 2155 0089 D5010000 		.4byte	.LASF11
 2156 008d 04       		.uleb128 0x4
 2157 008e 04       		.byte	0x4
 2158 008f 05       		.byte	0x5
 2159 0090 696E7400 		.ascii	"int\000"
 2160 0094 02       		.uleb128 0x2
 2161 0095 04       		.byte	0x4
 2162 0096 07       		.byte	0x7
 2163 0097 EC010000 		.4byte	.LASF12
 2164 009b 03       		.uleb128 0x3
 2165 009c 97000000 		.4byte	.LASF13
 2166 00a0 03       		.byte	0x3
 2167 00a1 5B       		.byte	0x5b
 2168 00a2 3B000000 		.4byte	0x3b
 2169 00a6 03       		.uleb128 0x3
 2170 00a7 88000000 		.4byte	.LASF14
 2171 00ab 03       		.byte	0x3
 2172 00ac 5C       		.byte	0x5c
 2173 00ad 5F000000 		.4byte	0x5f
 2174 00b1 03       		.uleb128 0x3
 2175 00b2 67020000 		.4byte	.LASF15
 2176 00b6 03       		.byte	0x3
 2177 00b7 5D       		.byte	0x5d
 2178 00b8 78000000 		.4byte	0x78
 2179 00bc 02       		.uleb128 0x2
 2180 00bd 04       		.byte	0x4
 2181 00be 04       		.byte	0x4
 2182 00bf C3000000 		.4byte	.LASF16
 2183 00c3 02       		.uleb128 0x2
 2184 00c4 08       		.byte	0x8
 2185 00c5 04       		.byte	0x4
 2186 00c6 80020000 		.4byte	.LASF17
 2187 00ca 02       		.uleb128 0x2
 2188 00cb 01       		.byte	0x1
 2189 00cc 08       		.byte	0x8
 2190 00cd 20020000 		.4byte	.LASF18
 2191 00d1 02       		.uleb128 0x2
 2192 00d2 04       		.byte	0x4
 2193 00d3 07       		.byte	0x7
 2194 00d4 32000000 		.4byte	.LASF19
 2195 00d8 05       		.uleb128 0x5
 2196 00d9 01       		.byte	0x1
 2197 00da 72000000 		.4byte	.LASF21
 2198 00de 01       		.byte	0x1
 2199 00df 21       		.byte	0x21
 2200 00e0 01       		.byte	0x1
 2201 00e1 00000000 		.4byte	.LFB56
 2202 00e5 2E000000 		.4byte	.LFE56
 2203 00e9 00000000 		.4byte	.LLST0
 2204 00ed 01       		.byte	0x1
 2205 00ee 1D010000 		.4byte	0x11d
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 58


 2206 00f2 06       		.uleb128 0x6
 2207 00f3 07010000 		.4byte	.LASF20
 2208 00f7 01       		.byte	0x1
 2209 00f8 21       		.byte	0x21
 2210 00f9 9B000000 		.4byte	0x9b
 2211 00fd 02       		.byte	0x2
 2212 00fe 91       		.byte	0x91
 2213 00ff 77       		.sleb128 -9
 2214 0100 07       		.uleb128 0x7
 2215 0101 636D6400 		.ascii	"cmd\000"
 2216 0105 01       		.byte	0x1
 2217 0106 21       		.byte	0x21
 2218 0107 9B000000 		.4byte	0x9b
 2219 010b 02       		.byte	0x2
 2220 010c 91       		.byte	0x91
 2221 010d 76       		.sleb128 -10
 2222 010e 07       		.uleb128 0x7
 2223 010f 64617400 		.ascii	"dat\000"
 2224 0113 01       		.byte	0x1
 2225 0114 21       		.byte	0x21
 2226 0115 A6000000 		.4byte	0xa6
 2227 0119 02       		.byte	0x2
 2228 011a 91       		.byte	0x91
 2229 011b 74       		.sleb128 -12
 2230 011c 00       		.byte	0
 2231 011d 08       		.uleb128 0x8
 2232 011e 01       		.byte	0x1
 2233 011f 00000000 		.4byte	.LASF22
 2234 0123 01       		.byte	0x1
 2235 0124 5801     		.2byte	0x158
 2236 0126 01       		.byte	0x1
 2237 0127 00000000 		.4byte	.LFB57
 2238 012b 24010000 		.4byte	.LFE57
 2239 012f 38000000 		.4byte	.LLST1
 2240 0133 01       		.byte	0x1
 2241 0134 8D010000 		.4byte	0x18d
 2242 0138 09       		.uleb128 0x9
 2243 0139 636D6400 		.ascii	"cmd\000"
 2244 013d 01       		.byte	0x1
 2245 013e 5801     		.2byte	0x158
 2246 0140 9B000000 		.4byte	0x9b
 2247 0144 02       		.byte	0x2
 2248 0145 91       		.byte	0x91
 2249 0146 6F       		.sleb128 -17
 2250 0147 09       		.uleb128 0x9
 2251 0148 76616C00 		.ascii	"val\000"
 2252 014c 01       		.byte	0x1
 2253 014d 5801     		.2byte	0x158
 2254 014f A6000000 		.4byte	0xa6
 2255 0153 02       		.byte	0x2
 2256 0154 91       		.byte	0x91
 2257 0155 6C       		.sleb128 -20
 2258 0156 0A       		.uleb128 0xa
 2259 0157 10000000 		.4byte	.LASF25
 2260 015b 01       		.byte	0x1
 2261 015c 5A01     		.2byte	0x15a
 2262 015e B1000000 		.4byte	0xb1
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 59


 2263 0162 02       		.byte	0x2
 2264 0163 91       		.byte	0x91
 2265 0164 74       		.sleb128 -12
 2266 0165 0B       		.uleb128 0xb
 2267 0166 25020000 		.4byte	.LASF23
 2268 016a 01       		.byte	0x1
 2269 016b 5B01     		.2byte	0x15b
 2270 016d 9B000000 		.4byte	0x9b
 2271 0171 0B       		.uleb128 0xb
 2272 0172 92020000 		.4byte	.LASF24
 2273 0176 01       		.byte	0x1
 2274 0177 5C01     		.2byte	0x15c
 2275 0179 9B000000 		.4byte	0x9b
 2276 017d 0A       		.uleb128 0xa
 2277 017e 54020000 		.4byte	.LASF26
 2278 0182 01       		.byte	0x1
 2279 0183 5D01     		.2byte	0x15d
 2280 0185 8D010000 		.4byte	0x18d
 2281 0189 02       		.byte	0x2
 2282 018a 91       		.byte	0x91
 2283 018b 73       		.sleb128 -13
 2284 018c 00       		.byte	0
 2285 018d 02       		.uleb128 0x2
 2286 018e 01       		.byte	0x1
 2287 018f 02       		.byte	0x2
 2288 0190 3E020000 		.4byte	.LASF27
 2289 0194 08       		.uleb128 0x8
 2290 0195 01       		.byte	0x1
 2291 0196 64000000 		.4byte	.LASF28
 2292 019a 01       		.byte	0x1
 2293 019b 7901     		.2byte	0x179
 2294 019d 01       		.byte	0x1
 2295 019e 00000000 		.4byte	.LFB58
 2296 01a2 28050000 		.4byte	.LFE58
 2297 01a6 70000000 		.4byte	.LLST2
 2298 01aa 01       		.byte	0x1
 2299 01ab 9E030000 		.4byte	0x39e
 2300 01af 0C       		.uleb128 0xc
 2301 01b0 616D7000 		.ascii	"amp\000"
 2302 01b4 01       		.byte	0x1
 2303 01b5 8901     		.2byte	0x189
 2304 01b7 9B000000 		.4byte	0x9b
 2305 01bb 03       		.byte	0x3
 2306 01bc 91       		.byte	0x91
 2307 01bd AF7F     		.sleb128 -81
 2308 01bf 0C       		.uleb128 0xc
 2309 01c0 64634200 		.ascii	"dcB\000"
 2310 01c4 01       		.byte	0x1
 2311 01c5 8A01     		.2byte	0x18a
 2312 01c7 9B000000 		.4byte	0x9b
 2313 01cb 03       		.byte	0x3
 2314 01cc 91       		.byte	0x91
 2315 01cd AE7F     		.sleb128 -82
 2316 01cf 0A       		.uleb128 0xa
 2317 01d0 44020000 		.4byte	.LASF29
 2318 01d4 01       		.byte	0x1
 2319 01d5 9A01     		.2byte	0x19a
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 60


 2320 01d7 9E030000 		.4byte	0x39e
 2321 01db 03       		.byte	0x3
 2322 01dc 91       		.byte	0x91
 2323 01dd A87D     		.sleb128 -344
 2324 01df 0A       		.uleb128 0xa
 2325 01e0 87020000 		.4byte	.LASF30
 2326 01e4 01       		.byte	0x1
 2327 01e5 AC01     		.2byte	0x1ac
 2328 01e7 9E030000 		.4byte	0x39e
 2329 01eb 03       		.byte	0x3
 2330 01ec 91       		.byte	0x91
 2331 01ed A87B     		.sleb128 -600
 2332 01ef 0A       		.uleb128 0xa
 2333 01f0 E7000000 		.4byte	.LASF31
 2334 01f4 01       		.byte	0x1
 2335 01f5 BB01     		.2byte	0x1bb
 2336 01f7 9E030000 		.4byte	0x39e
 2337 01fb 03       		.byte	0x3
 2338 01fc 91       		.byte	0x91
 2339 01fd A879     		.sleb128 -856
 2340 01ff 0A       		.uleb128 0xa
 2341 0200 7B000000 		.4byte	.LASF32
 2342 0204 01       		.byte	0x1
 2343 0205 CB01     		.2byte	0x1cb
 2344 0207 9E030000 		.4byte	0x39e
 2345 020b 03       		.byte	0x3
 2346 020c 91       		.byte	0x91
 2347 020d A877     		.sleb128 -1112
 2348 020f 0D       		.uleb128 0xd
 2349 0210 02010000 		.4byte	.LBB2
 2350 0214 FA010000 		.4byte	.LBE2
 2351 0218 73020000 		.4byte	0x273
 2352 021c 0C       		.uleb128 0xc
 2353 021d 6900     		.ascii	"i\000"
 2354 021f 01       		.byte	0x1
 2355 0220 E001     		.2byte	0x1e0
 2356 0222 8D000000 		.4byte	0x8d
 2357 0226 02       		.byte	0x2
 2358 0227 91       		.byte	0x91
 2359 0228 6C       		.sleb128 -20
 2360 0229 0A       		.uleb128 0xa
 2361 022a BA020000 		.4byte	.LASF33
 2362 022e 01       		.byte	0x1
 2363 022f E101     		.2byte	0x1e1
 2364 0231 9E030000 		.4byte	0x39e
 2365 0235 03       		.byte	0x3
 2366 0236 91       		.byte	0x91
 2367 0237 A873     		.sleb128 -1624
 2368 0239 0A       		.uleb128 0xa
 2369 023a 60020000 		.4byte	.LASF34
 2370 023e 01       		.byte	0x1
 2371 023f FF01     		.2byte	0x1ff
 2372 0241 9E030000 		.4byte	0x39e
 2373 0245 03       		.byte	0x3
 2374 0246 91       		.byte	0x91
 2375 0247 A875     		.sleb128 -1368
 2376 0249 0E       		.uleb128 0xe
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 61


 2377 024a 0C010000 		.4byte	.LBB3
 2378 024e BA010000 		.4byte	.LBE3
 2379 0252 0C       		.uleb128 0xc
 2380 0253 76616C00 		.ascii	"val\000"
 2381 0257 01       		.byte	0x1
 2382 0258 F201     		.2byte	0x1f2
 2383 025a C3000000 		.4byte	0xc3
 2384 025e 02       		.byte	0x2
 2385 025f 91       		.byte	0x91
 2386 0260 60       		.sleb128 -32
 2387 0261 0A       		.uleb128 0xa
 2388 0262 52000000 		.4byte	.LASF35
 2389 0266 01       		.byte	0x1
 2390 0267 F801     		.2byte	0x1f8
 2391 0269 9B000000 		.4byte	0x9b
 2392 026d 03       		.byte	0x3
 2393 026e 91       		.byte	0x91
 2394 026f AD7F     		.sleb128 -83
 2395 0271 00       		.byte	0
 2396 0272 00       		.byte	0
 2397 0273 0D       		.uleb128 0xd
 2398 0274 08020000 		.4byte	.LBB4
 2399 0278 00030000 		.4byte	.LBE4
 2400 027c D7020000 		.4byte	0x2d7
 2401 0280 0C       		.uleb128 0xc
 2402 0281 6900     		.ascii	"i\000"
 2403 0283 01       		.byte	0x1
 2404 0284 0802     		.2byte	0x208
 2405 0286 8D000000 		.4byte	0x8d
 2406 028a 02       		.byte	0x2
 2407 028b 91       		.byte	0x91
 2408 028c 5C       		.sleb128 -36
 2409 028d 0A       		.uleb128 0xa
 2410 028e BA020000 		.4byte	.LASF33
 2411 0292 01       		.byte	0x1
 2412 0293 0902     		.2byte	0x209
 2413 0295 9E030000 		.4byte	0x39e
 2414 0299 03       		.byte	0x3
 2415 029a 91       		.byte	0x91
 2416 029b A873     		.sleb128 -1624
 2417 029d 0A       		.uleb128 0xa
 2418 029e 60020000 		.4byte	.LASF34
 2419 02a2 01       		.byte	0x1
 2420 02a3 1802     		.2byte	0x218
 2421 02a5 9E030000 		.4byte	0x39e
 2422 02a9 03       		.byte	0x3
 2423 02aa 91       		.byte	0x91
 2424 02ab A875     		.sleb128 -1368
 2425 02ad 0E       		.uleb128 0xe
 2426 02ae 12020000 		.4byte	.LBB5
 2427 02b2 C0020000 		.4byte	.LBE5
 2428 02b6 0C       		.uleb128 0xc
 2429 02b7 76616C00 		.ascii	"val\000"
 2430 02bb 01       		.byte	0x1
 2431 02bc 0C02     		.2byte	0x20c
 2432 02be C3000000 		.4byte	0xc3
 2433 02c2 02       		.byte	0x2
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 62


 2434 02c3 91       		.byte	0x91
 2435 02c4 50       		.sleb128 -48
 2436 02c5 0A       		.uleb128 0xa
 2437 02c6 52000000 		.4byte	.LASF35
 2438 02ca 01       		.byte	0x1
 2439 02cb 1202     		.2byte	0x212
 2440 02cd 9B000000 		.4byte	0x9b
 2441 02d1 03       		.byte	0x3
 2442 02d2 91       		.byte	0x91
 2443 02d3 AC7F     		.sleb128 -84
 2444 02d5 00       		.byte	0
 2445 02d6 00       		.byte	0
 2446 02d7 0D       		.uleb128 0xd
 2447 02d8 0E030000 		.4byte	.LBB6
 2448 02dc 06040000 		.4byte	.LBE6
 2449 02e0 3B030000 		.4byte	0x33b
 2450 02e4 0C       		.uleb128 0xc
 2451 02e5 6900     		.ascii	"i\000"
 2452 02e7 01       		.byte	0x1
 2453 02e8 2102     		.2byte	0x221
 2454 02ea 8D000000 		.4byte	0x8d
 2455 02ee 02       		.byte	0x2
 2456 02ef 91       		.byte	0x91
 2457 02f0 4C       		.sleb128 -52
 2458 02f1 0A       		.uleb128 0xa
 2459 02f2 BA020000 		.4byte	.LASF33
 2460 02f6 01       		.byte	0x1
 2461 02f7 2202     		.2byte	0x222
 2462 02f9 9E030000 		.4byte	0x39e
 2463 02fd 03       		.byte	0x3
 2464 02fe 91       		.byte	0x91
 2465 02ff A873     		.sleb128 -1624
 2466 0301 0A       		.uleb128 0xa
 2467 0302 60020000 		.4byte	.LASF34
 2468 0306 01       		.byte	0x1
 2469 0307 3102     		.2byte	0x231
 2470 0309 9E030000 		.4byte	0x39e
 2471 030d 03       		.byte	0x3
 2472 030e 91       		.byte	0x91
 2473 030f A875     		.sleb128 -1368
 2474 0311 0E       		.uleb128 0xe
 2475 0312 18030000 		.4byte	.LBB7
 2476 0316 C6030000 		.4byte	.LBE7
 2477 031a 0C       		.uleb128 0xc
 2478 031b 76616C00 		.ascii	"val\000"
 2479 031f 01       		.byte	0x1
 2480 0320 2502     		.2byte	0x225
 2481 0322 C3000000 		.4byte	0xc3
 2482 0326 02       		.byte	0x2
 2483 0327 91       		.byte	0x91
 2484 0328 40       		.sleb128 -64
 2485 0329 0A       		.uleb128 0xa
 2486 032a 52000000 		.4byte	.LASF35
 2487 032e 01       		.byte	0x1
 2488 032f 2B02     		.2byte	0x22b
 2489 0331 9B000000 		.4byte	0x9b
 2490 0335 03       		.byte	0x3
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 63


 2491 0336 91       		.byte	0x91
 2492 0337 AB7F     		.sleb128 -85
 2493 0339 00       		.byte	0
 2494 033a 00       		.byte	0
 2495 033b 0E       		.uleb128 0xe
 2496 033c 14040000 		.4byte	.LBB8
 2497 0340 14050000 		.4byte	.LBE8
 2498 0344 0C       		.uleb128 0xc
 2499 0345 6900     		.ascii	"i\000"
 2500 0347 01       		.byte	0x1
 2501 0348 3902     		.2byte	0x239
 2502 034a 8D000000 		.4byte	0x8d
 2503 034e 03       		.byte	0x3
 2504 034f 91       		.byte	0x91
 2505 0350 BC7F     		.sleb128 -68
 2506 0352 0A       		.uleb128 0xa
 2507 0353 BA020000 		.4byte	.LASF33
 2508 0357 01       		.byte	0x1
 2509 0358 3A02     		.2byte	0x23a
 2510 035a 9E030000 		.4byte	0x39e
 2511 035e 03       		.byte	0x3
 2512 035f 91       		.byte	0x91
 2513 0360 A873     		.sleb128 -1624
 2514 0362 0A       		.uleb128 0xa
 2515 0363 60020000 		.4byte	.LASF34
 2516 0367 01       		.byte	0x1
 2517 0368 4A02     		.2byte	0x24a
 2518 036a 9E030000 		.4byte	0x39e
 2519 036e 03       		.byte	0x3
 2520 036f 91       		.byte	0x91
 2521 0370 A875     		.sleb128 -1368
 2522 0372 0E       		.uleb128 0xe
 2523 0373 28040000 		.4byte	.LBB9
 2524 0377 D6040000 		.4byte	.LBE9
 2525 037b 0C       		.uleb128 0xc
 2526 037c 76616C00 		.ascii	"val\000"
 2527 0380 01       		.byte	0x1
 2528 0381 3D02     		.2byte	0x23d
 2529 0383 C3000000 		.4byte	0xc3
 2530 0387 03       		.byte	0x3
 2531 0388 91       		.byte	0x91
 2532 0389 B07F     		.sleb128 -80
 2533 038b 0A       		.uleb128 0xa
 2534 038c 52000000 		.4byte	.LASF35
 2535 0390 01       		.byte	0x1
 2536 0391 4302     		.2byte	0x243
 2537 0393 9B000000 		.4byte	0x9b
 2538 0397 03       		.byte	0x3
 2539 0398 91       		.byte	0x91
 2540 0399 AA7F     		.sleb128 -86
 2541 039b 00       		.byte	0
 2542 039c 00       		.byte	0
 2543 039d 00       		.byte	0
 2544 039e 0F       		.uleb128 0xf
 2545 039f 9B000000 		.4byte	0x9b
 2546 03a3 AE030000 		.4byte	0x3ae
 2547 03a7 10       		.uleb128 0x10
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 64


 2548 03a8 D1000000 		.4byte	0xd1
 2549 03ac FE       		.byte	0xfe
 2550 03ad 00       		.byte	0
 2551 03ae 11       		.uleb128 0x11
 2552 03af 01       		.byte	0x1
 2553 03b0 AE000000 		.4byte	.LASF60
 2554 03b4 01       		.byte	0x1
 2555 03b5 A203     		.2byte	0x3a2
 2556 03b7 01       		.byte	0x1
 2557 03b8 B1000000 		.4byte	0xb1
 2558 03bc 00000000 		.4byte	.LFB59
 2559 03c0 96000000 		.4byte	.LFE59
 2560 03c4 AA000000 		.4byte	.LLST3
 2561 03c8 01       		.byte	0x1
 2562 03c9 19040000 		.4byte	0x419
 2563 03cd 0A       		.uleb128 0xa
 2564 03ce 07010000 		.4byte	.LASF20
 2565 03d2 01       		.byte	0x1
 2566 03d3 A403     		.2byte	0x3a4
 2567 03d5 9B000000 		.4byte	0x9b
 2568 03d9 02       		.byte	0x2
 2569 03da 91       		.byte	0x91
 2570 03db 77       		.sleb128 -9
 2571 03dc 0C       		.uleb128 0xc
 2572 03dd 636D6400 		.ascii	"cmd\000"
 2573 03e1 01       		.byte	0x1
 2574 03e2 A503     		.2byte	0x3a5
 2575 03e4 9B000000 		.4byte	0x9b
 2576 03e8 02       		.byte	0x2
 2577 03e9 91       		.byte	0x91
 2578 03ea 76       		.sleb128 -10
 2579 03eb 0A       		.uleb128 0xa
 2580 03ec C2020000 		.4byte	.LASF36
 2581 03f0 01       		.byte	0x1
 2582 03f1 A603     		.2byte	0x3a6
 2583 03f3 9B000000 		.4byte	0x9b
 2584 03f7 02       		.byte	0x2
 2585 03f8 91       		.byte	0x91
 2586 03f9 75       		.sleb128 -11
 2587 03fa 0A       		.uleb128 0xa
 2588 03fb 9A020000 		.4byte	.LASF37
 2589 03ff 01       		.byte	0x1
 2590 0400 A703     		.2byte	0x3a7
 2591 0402 9B000000 		.4byte	0x9b
 2592 0406 02       		.byte	0x2
 2593 0407 91       		.byte	0x91
 2594 0408 74       		.sleb128 -12
 2595 0409 0A       		.uleb128 0xa
 2596 040a 21000000 		.4byte	.LASF38
 2597 040e 01       		.byte	0x1
 2598 040f B203     		.2byte	0x3b2
 2599 0411 B1000000 		.4byte	0xb1
 2600 0415 02       		.byte	0x2
 2601 0416 91       		.byte	0x91
 2602 0417 70       		.sleb128 -16
 2603 0418 00       		.byte	0
 2604 0419 08       		.uleb128 0x8
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 65


 2605 041a 01       		.byte	0x1
 2606 041b 02020000 		.4byte	.LASF39
 2607 041f 01       		.byte	0x1
 2608 0420 B603     		.2byte	0x3b6
 2609 0422 01       		.byte	0x1
 2610 0423 00000000 		.4byte	.LFB60
 2611 0427 A2000000 		.4byte	.LFE60
 2612 042b E2000000 		.4byte	.LLST4
 2613 042f 01       		.byte	0x1
 2614 0430 8F040000 		.4byte	0x48f
 2615 0434 09       		.uleb128 0x9
 2616 0435 64617400 		.ascii	"dat\000"
 2617 0439 01       		.byte	0x1
 2618 043a B603     		.2byte	0x3b6
 2619 043c B1000000 		.4byte	0xb1
 2620 0440 02       		.byte	0x2
 2621 0441 91       		.byte	0x91
 2622 0442 6C       		.sleb128 -20
 2623 0443 0A       		.uleb128 0xa
 2624 0444 E0000000 		.4byte	.LASF40
 2625 0448 01       		.byte	0x1
 2626 0449 BA03     		.2byte	0x3ba
 2627 044b 9B000000 		.4byte	0x9b
 2628 044f 02       		.byte	0x2
 2629 0450 91       		.byte	0x91
 2630 0451 77       		.sleb128 -9
 2631 0452 0A       		.uleb128 0xa
 2632 0453 27000000 		.4byte	.LASF41
 2633 0457 01       		.byte	0x1
 2634 0458 BB03     		.2byte	0x3bb
 2635 045a 9B000000 		.4byte	0x9b
 2636 045e 02       		.byte	0x2
 2637 045f 91       		.byte	0x91
 2638 0460 76       		.sleb128 -10
 2639 0461 0A       		.uleb128 0xa
 2640 0462 59000000 		.4byte	.LASF42
 2641 0466 01       		.byte	0x1
 2642 0467 BC03     		.2byte	0x3bc
 2643 0469 9B000000 		.4byte	0x9b
 2644 046d 02       		.byte	0x2
 2645 046e 91       		.byte	0x91
 2646 046f 75       		.sleb128 -11
 2647 0470 0A       		.uleb128 0xa
 2648 0471 1C010000 		.4byte	.LASF43
 2649 0475 01       		.byte	0x1
 2650 0476 BD03     		.2byte	0x3bd
 2651 0478 9B000000 		.4byte	0x9b
 2652 047c 02       		.byte	0x2
 2653 047d 91       		.byte	0x91
 2654 047e 74       		.sleb128 -12
 2655 047f 0A       		.uleb128 0xa
 2656 0480 B0010000 		.4byte	.LASF44
 2657 0484 01       		.byte	0x1
 2658 0485 CD03     		.2byte	0x3cd
 2659 0487 8F040000 		.4byte	0x48f
 2660 048b 02       		.byte	0x2
 2661 048c 91       		.byte	0x91
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 66


 2662 048d 70       		.sleb128 -16
 2663 048e 00       		.byte	0
 2664 048f 0F       		.uleb128 0xf
 2665 0490 9B000000 		.4byte	0x9b
 2666 0494 9F040000 		.4byte	0x49f
 2667 0498 10       		.uleb128 0x10
 2668 0499 D1000000 		.4byte	0xd1
 2669 049d 02       		.byte	0x2
 2670 049e 00       		.byte	0
 2671 049f 0F       		.uleb128 0xf
 2672 04a0 CA000000 		.4byte	0xca
 2673 04a4 AF040000 		.4byte	0x4af
 2674 04a8 10       		.uleb128 0x10
 2675 04a9 D1000000 		.4byte	0xd1
 2676 04ad 31       		.byte	0x31
 2677 04ae 00       		.byte	0
 2678 04af 12       		.uleb128 0x12
 2679 04b0 4D020000 		.4byte	.LASF45
 2680 04b4 01       		.byte	0x1
 2681 04b5 15       		.byte	0x15
 2682 04b6 9F040000 		.4byte	0x49f
 2683 04ba 01       		.byte	0x1
 2684 04bb 05       		.byte	0x5
 2685 04bc 03       		.byte	0x3
 2686 04bd 00000000 		.4byte	buffer
 2687 04c1 12       		.uleb128 0x12
 2688 04c2 0C010000 		.4byte	.LASF46
 2689 04c6 01       		.byte	0x1
 2690 04c7 16       		.byte	0x16
 2691 04c8 8D000000 		.4byte	0x8d
 2692 04cc 01       		.byte	0x1
 2693 04cd 05       		.byte	0x5
 2694 04ce 03       		.byte	0x3
 2695 04cf 00000000 		.4byte	waveType
 2696 04d3 12       		.uleb128 0x12
 2697 04d4 3B000000 		.4byte	.LASF47
 2698 04d8 04       		.byte	0x4
 2699 04d9 6D       		.byte	0x6d
 2700 04da 42000000 		.4byte	0x42
 2701 04de 01       		.byte	0x1
 2702 04df 05       		.byte	0x5
 2703 04e0 03       		.byte	0x3
 2704 04e1 00000000 		.4byte	cursor_x
 2705 04e5 12       		.uleb128 0x12
 2706 04e6 44000000 		.4byte	.LASF48
 2707 04ea 04       		.byte	0x4
 2708 04eb 6E       		.byte	0x6e
 2709 04ec 42000000 		.4byte	0x42
 2710 04f0 01       		.byte	0x1
 2711 04f1 05       		.byte	0x5
 2712 04f2 03       		.byte	0x3
 2713 04f3 00000000 		.4byte	cursor_y
 2714 04f7 12       		.uleb128 0x12
 2715 04f8 FD000000 		.4byte	.LASF49
 2716 04fc 04       		.byte	0x4
 2717 04fd 6F       		.byte	0x6f
 2718 04fe 54000000 		.4byte	0x54
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 67


 2719 0502 01       		.byte	0x1
 2720 0503 05       		.byte	0x5
 2721 0504 03       		.byte	0x3
 2722 0505 00000000 		.4byte	textcolor
 2723 0509 12       		.uleb128 0x12
 2724 050a AE020000 		.4byte	.LASF50
 2725 050e 04       		.byte	0x4
 2726 050f 70       		.byte	0x70
 2727 0510 54000000 		.4byte	0x54
 2728 0514 01       		.byte	0x1
 2729 0515 05       		.byte	0x5
 2730 0516 03       		.byte	0x3
 2731 0517 00000000 		.4byte	textbgcolor
 2732 051b 12       		.uleb128 0x12
 2733 051c C9000000 		.4byte	.LASF51
 2734 0520 04       		.byte	0x4
 2735 0521 71       		.byte	0x71
 2736 0522 30000000 		.4byte	0x30
 2737 0526 01       		.byte	0x1
 2738 0527 05       		.byte	0x5
 2739 0528 03       		.byte	0x3
 2740 0529 00000000 		.4byte	textsize
 2741 052d 12       		.uleb128 0x12
 2742 052e 9D000000 		.4byte	.LASF52
 2743 0532 04       		.byte	0x4
 2744 0533 72       		.byte	0x72
 2745 0534 30000000 		.4byte	0x30
 2746 0538 01       		.byte	0x1
 2747 0539 05       		.byte	0x5
 2748 053a 03       		.byte	0x3
 2749 053b 00000000 		.4byte	rotation
 2750 053f 12       		.uleb128 0x12
 2751 0540 4D000000 		.4byte	.LASF53
 2752 0544 04       		.byte	0x4
 2753 0545 73       		.byte	0x73
 2754 0546 30000000 		.4byte	0x30
 2755 054a 01       		.byte	0x1
 2756 054b 05       		.byte	0x5
 2757 054c 03       		.byte	0x3
 2758 054d 00000000 		.4byte	wrap
 2759 0551 12       		.uleb128 0x12
 2760 0552 15010000 		.4byte	.LASF54
 2761 0556 04       		.byte	0x4
 2762 0557 74       		.byte	0x74
 2763 0558 8D000000 		.4byte	0x8d
 2764 055c 01       		.byte	0x1
 2765 055d 05       		.byte	0x5
 2766 055e 03       		.byte	0x3
 2767 055f 00000000 		.4byte	_width
 2768 0563 12       		.uleb128 0x12
 2769 0564 A6000000 		.4byte	.LASF55
 2770 0568 04       		.byte	0x4
 2771 0569 75       		.byte	0x75
 2772 056a 8D000000 		.4byte	0x8d
 2773 056e 01       		.byte	0x1
 2774 056f 05       		.byte	0x5
 2775 0570 03       		.byte	0x3
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 68


 2776 0571 00000000 		.4byte	_height
 2777 0575 13       		.uleb128 0x13
 2778 0576 A1020000 		.4byte	.LASF56
 2779 057a 05       		.byte	0x5
 2780 057b 1606     		.2byte	0x616
 2781 057d 83050000 		.4byte	0x583
 2782 0581 01       		.byte	0x1
 2783 0582 01       		.byte	0x1
 2784 0583 14       		.uleb128 0x14
 2785 0584 66000000 		.4byte	0x66
 2786 0588 00       		.byte	0
 2787              		.section	.debug_abbrev,"",%progbits
 2788              	.Ldebug_abbrev0:
 2789 0000 01       		.uleb128 0x1
 2790 0001 11       		.uleb128 0x11
 2791 0002 01       		.byte	0x1
 2792 0003 25       		.uleb128 0x25
 2793 0004 0E       		.uleb128 0xe
 2794 0005 13       		.uleb128 0x13
 2795 0006 0B       		.uleb128 0xb
 2796 0007 03       		.uleb128 0x3
 2797 0008 0E       		.uleb128 0xe
 2798 0009 1B       		.uleb128 0x1b
 2799 000a 0E       		.uleb128 0xe
 2800 000b 55       		.uleb128 0x55
 2801 000c 06       		.uleb128 0x6
 2802 000d 11       		.uleb128 0x11
 2803 000e 01       		.uleb128 0x1
 2804 000f 52       		.uleb128 0x52
 2805 0010 01       		.uleb128 0x1
 2806 0011 10       		.uleb128 0x10
 2807 0012 06       		.uleb128 0x6
 2808 0013 00       		.byte	0
 2809 0014 00       		.byte	0
 2810 0015 02       		.uleb128 0x2
 2811 0016 24       		.uleb128 0x24
 2812 0017 00       		.byte	0
 2813 0018 0B       		.uleb128 0xb
 2814 0019 0B       		.uleb128 0xb
 2815 001a 3E       		.uleb128 0x3e
 2816 001b 0B       		.uleb128 0xb
 2817 001c 03       		.uleb128 0x3
 2818 001d 0E       		.uleb128 0xe
 2819 001e 00       		.byte	0
 2820 001f 00       		.byte	0
 2821 0020 03       		.uleb128 0x3
 2822 0021 16       		.uleb128 0x16
 2823 0022 00       		.byte	0
 2824 0023 03       		.uleb128 0x3
 2825 0024 0E       		.uleb128 0xe
 2826 0025 3A       		.uleb128 0x3a
 2827 0026 0B       		.uleb128 0xb
 2828 0027 3B       		.uleb128 0x3b
 2829 0028 0B       		.uleb128 0xb
 2830 0029 49       		.uleb128 0x49
 2831 002a 13       		.uleb128 0x13
 2832 002b 00       		.byte	0
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 69


 2833 002c 00       		.byte	0
 2834 002d 04       		.uleb128 0x4
 2835 002e 24       		.uleb128 0x24
 2836 002f 00       		.byte	0
 2837 0030 0B       		.uleb128 0xb
 2838 0031 0B       		.uleb128 0xb
 2839 0032 3E       		.uleb128 0x3e
 2840 0033 0B       		.uleb128 0xb
 2841 0034 03       		.uleb128 0x3
 2842 0035 08       		.uleb128 0x8
 2843 0036 00       		.byte	0
 2844 0037 00       		.byte	0
 2845 0038 05       		.uleb128 0x5
 2846 0039 2E       		.uleb128 0x2e
 2847 003a 01       		.byte	0x1
 2848 003b 3F       		.uleb128 0x3f
 2849 003c 0C       		.uleb128 0xc
 2850 003d 03       		.uleb128 0x3
 2851 003e 0E       		.uleb128 0xe
 2852 003f 3A       		.uleb128 0x3a
 2853 0040 0B       		.uleb128 0xb
 2854 0041 3B       		.uleb128 0x3b
 2855 0042 0B       		.uleb128 0xb
 2856 0043 27       		.uleb128 0x27
 2857 0044 0C       		.uleb128 0xc
 2858 0045 11       		.uleb128 0x11
 2859 0046 01       		.uleb128 0x1
 2860 0047 12       		.uleb128 0x12
 2861 0048 01       		.uleb128 0x1
 2862 0049 40       		.uleb128 0x40
 2863 004a 06       		.uleb128 0x6
 2864 004b 9642     		.uleb128 0x2116
 2865 004d 0C       		.uleb128 0xc
 2866 004e 01       		.uleb128 0x1
 2867 004f 13       		.uleb128 0x13
 2868 0050 00       		.byte	0
 2869 0051 00       		.byte	0
 2870 0052 06       		.uleb128 0x6
 2871 0053 05       		.uleb128 0x5
 2872 0054 00       		.byte	0
 2873 0055 03       		.uleb128 0x3
 2874 0056 0E       		.uleb128 0xe
 2875 0057 3A       		.uleb128 0x3a
 2876 0058 0B       		.uleb128 0xb
 2877 0059 3B       		.uleb128 0x3b
 2878 005a 0B       		.uleb128 0xb
 2879 005b 49       		.uleb128 0x49
 2880 005c 13       		.uleb128 0x13
 2881 005d 02       		.uleb128 0x2
 2882 005e 0A       		.uleb128 0xa
 2883 005f 00       		.byte	0
 2884 0060 00       		.byte	0
 2885 0061 07       		.uleb128 0x7
 2886 0062 05       		.uleb128 0x5
 2887 0063 00       		.byte	0
 2888 0064 03       		.uleb128 0x3
 2889 0065 08       		.uleb128 0x8
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 70


 2890 0066 3A       		.uleb128 0x3a
 2891 0067 0B       		.uleb128 0xb
 2892 0068 3B       		.uleb128 0x3b
 2893 0069 0B       		.uleb128 0xb
 2894 006a 49       		.uleb128 0x49
 2895 006b 13       		.uleb128 0x13
 2896 006c 02       		.uleb128 0x2
 2897 006d 0A       		.uleb128 0xa
 2898 006e 00       		.byte	0
 2899 006f 00       		.byte	0
 2900 0070 08       		.uleb128 0x8
 2901 0071 2E       		.uleb128 0x2e
 2902 0072 01       		.byte	0x1
 2903 0073 3F       		.uleb128 0x3f
 2904 0074 0C       		.uleb128 0xc
 2905 0075 03       		.uleb128 0x3
 2906 0076 0E       		.uleb128 0xe
 2907 0077 3A       		.uleb128 0x3a
 2908 0078 0B       		.uleb128 0xb
 2909 0079 3B       		.uleb128 0x3b
 2910 007a 05       		.uleb128 0x5
 2911 007b 27       		.uleb128 0x27
 2912 007c 0C       		.uleb128 0xc
 2913 007d 11       		.uleb128 0x11
 2914 007e 01       		.uleb128 0x1
 2915 007f 12       		.uleb128 0x12
 2916 0080 01       		.uleb128 0x1
 2917 0081 40       		.uleb128 0x40
 2918 0082 06       		.uleb128 0x6
 2919 0083 9642     		.uleb128 0x2116
 2920 0085 0C       		.uleb128 0xc
 2921 0086 01       		.uleb128 0x1
 2922 0087 13       		.uleb128 0x13
 2923 0088 00       		.byte	0
 2924 0089 00       		.byte	0
 2925 008a 09       		.uleb128 0x9
 2926 008b 05       		.uleb128 0x5
 2927 008c 00       		.byte	0
 2928 008d 03       		.uleb128 0x3
 2929 008e 08       		.uleb128 0x8
 2930 008f 3A       		.uleb128 0x3a
 2931 0090 0B       		.uleb128 0xb
 2932 0091 3B       		.uleb128 0x3b
 2933 0092 05       		.uleb128 0x5
 2934 0093 49       		.uleb128 0x49
 2935 0094 13       		.uleb128 0x13
 2936 0095 02       		.uleb128 0x2
 2937 0096 0A       		.uleb128 0xa
 2938 0097 00       		.byte	0
 2939 0098 00       		.byte	0
 2940 0099 0A       		.uleb128 0xa
 2941 009a 34       		.uleb128 0x34
 2942 009b 00       		.byte	0
 2943 009c 03       		.uleb128 0x3
 2944 009d 0E       		.uleb128 0xe
 2945 009e 3A       		.uleb128 0x3a
 2946 009f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 71


 2947 00a0 3B       		.uleb128 0x3b
 2948 00a1 05       		.uleb128 0x5
 2949 00a2 49       		.uleb128 0x49
 2950 00a3 13       		.uleb128 0x13
 2951 00a4 02       		.uleb128 0x2
 2952 00a5 0A       		.uleb128 0xa
 2953 00a6 00       		.byte	0
 2954 00a7 00       		.byte	0
 2955 00a8 0B       		.uleb128 0xb
 2956 00a9 34       		.uleb128 0x34
 2957 00aa 00       		.byte	0
 2958 00ab 03       		.uleb128 0x3
 2959 00ac 0E       		.uleb128 0xe
 2960 00ad 3A       		.uleb128 0x3a
 2961 00ae 0B       		.uleb128 0xb
 2962 00af 3B       		.uleb128 0x3b
 2963 00b0 05       		.uleb128 0x5
 2964 00b1 49       		.uleb128 0x49
 2965 00b2 13       		.uleb128 0x13
 2966 00b3 00       		.byte	0
 2967 00b4 00       		.byte	0
 2968 00b5 0C       		.uleb128 0xc
 2969 00b6 34       		.uleb128 0x34
 2970 00b7 00       		.byte	0
 2971 00b8 03       		.uleb128 0x3
 2972 00b9 08       		.uleb128 0x8
 2973 00ba 3A       		.uleb128 0x3a
 2974 00bb 0B       		.uleb128 0xb
 2975 00bc 3B       		.uleb128 0x3b
 2976 00bd 05       		.uleb128 0x5
 2977 00be 49       		.uleb128 0x49
 2978 00bf 13       		.uleb128 0x13
 2979 00c0 02       		.uleb128 0x2
 2980 00c1 0A       		.uleb128 0xa
 2981 00c2 00       		.byte	0
 2982 00c3 00       		.byte	0
 2983 00c4 0D       		.uleb128 0xd
 2984 00c5 0B       		.uleb128 0xb
 2985 00c6 01       		.byte	0x1
 2986 00c7 11       		.uleb128 0x11
 2987 00c8 01       		.uleb128 0x1
 2988 00c9 12       		.uleb128 0x12
 2989 00ca 01       		.uleb128 0x1
 2990 00cb 01       		.uleb128 0x1
 2991 00cc 13       		.uleb128 0x13
 2992 00cd 00       		.byte	0
 2993 00ce 00       		.byte	0
 2994 00cf 0E       		.uleb128 0xe
 2995 00d0 0B       		.uleb128 0xb
 2996 00d1 01       		.byte	0x1
 2997 00d2 11       		.uleb128 0x11
 2998 00d3 01       		.uleb128 0x1
 2999 00d4 12       		.uleb128 0x12
 3000 00d5 01       		.uleb128 0x1
 3001 00d6 00       		.byte	0
 3002 00d7 00       		.byte	0
 3003 00d8 0F       		.uleb128 0xf
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 72


 3004 00d9 01       		.uleb128 0x1
 3005 00da 01       		.byte	0x1
 3006 00db 49       		.uleb128 0x49
 3007 00dc 13       		.uleb128 0x13
 3008 00dd 01       		.uleb128 0x1
 3009 00de 13       		.uleb128 0x13
 3010 00df 00       		.byte	0
 3011 00e0 00       		.byte	0
 3012 00e1 10       		.uleb128 0x10
 3013 00e2 21       		.uleb128 0x21
 3014 00e3 00       		.byte	0
 3015 00e4 49       		.uleb128 0x49
 3016 00e5 13       		.uleb128 0x13
 3017 00e6 2F       		.uleb128 0x2f
 3018 00e7 0B       		.uleb128 0xb
 3019 00e8 00       		.byte	0
 3020 00e9 00       		.byte	0
 3021 00ea 11       		.uleb128 0x11
 3022 00eb 2E       		.uleb128 0x2e
 3023 00ec 01       		.byte	0x1
 3024 00ed 3F       		.uleb128 0x3f
 3025 00ee 0C       		.uleb128 0xc
 3026 00ef 03       		.uleb128 0x3
 3027 00f0 0E       		.uleb128 0xe
 3028 00f1 3A       		.uleb128 0x3a
 3029 00f2 0B       		.uleb128 0xb
 3030 00f3 3B       		.uleb128 0x3b
 3031 00f4 05       		.uleb128 0x5
 3032 00f5 27       		.uleb128 0x27
 3033 00f6 0C       		.uleb128 0xc
 3034 00f7 49       		.uleb128 0x49
 3035 00f8 13       		.uleb128 0x13
 3036 00f9 11       		.uleb128 0x11
 3037 00fa 01       		.uleb128 0x1
 3038 00fb 12       		.uleb128 0x12
 3039 00fc 01       		.uleb128 0x1
 3040 00fd 40       		.uleb128 0x40
 3041 00fe 06       		.uleb128 0x6
 3042 00ff 9642     		.uleb128 0x2116
 3043 0101 0C       		.uleb128 0xc
 3044 0102 01       		.uleb128 0x1
 3045 0103 13       		.uleb128 0x13
 3046 0104 00       		.byte	0
 3047 0105 00       		.byte	0
 3048 0106 12       		.uleb128 0x12
 3049 0107 34       		.uleb128 0x34
 3050 0108 00       		.byte	0
 3051 0109 03       		.uleb128 0x3
 3052 010a 0E       		.uleb128 0xe
 3053 010b 3A       		.uleb128 0x3a
 3054 010c 0B       		.uleb128 0xb
 3055 010d 3B       		.uleb128 0x3b
 3056 010e 0B       		.uleb128 0xb
 3057 010f 49       		.uleb128 0x49
 3058 0110 13       		.uleb128 0x13
 3059 0111 3F       		.uleb128 0x3f
 3060 0112 0C       		.uleb128 0xc
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 73


 3061 0113 02       		.uleb128 0x2
 3062 0114 0A       		.uleb128 0xa
 3063 0115 00       		.byte	0
 3064 0116 00       		.byte	0
 3065 0117 13       		.uleb128 0x13
 3066 0118 34       		.uleb128 0x34
 3067 0119 00       		.byte	0
 3068 011a 03       		.uleb128 0x3
 3069 011b 0E       		.uleb128 0xe
 3070 011c 3A       		.uleb128 0x3a
 3071 011d 0B       		.uleb128 0xb
 3072 011e 3B       		.uleb128 0x3b
 3073 011f 05       		.uleb128 0x5
 3074 0120 49       		.uleb128 0x49
 3075 0121 13       		.uleb128 0x13
 3076 0122 3F       		.uleb128 0x3f
 3077 0123 0C       		.uleb128 0xc
 3078 0124 3C       		.uleb128 0x3c
 3079 0125 0C       		.uleb128 0xc
 3080 0126 00       		.byte	0
 3081 0127 00       		.byte	0
 3082 0128 14       		.uleb128 0x14
 3083 0129 35       		.uleb128 0x35
 3084 012a 00       		.byte	0
 3085 012b 49       		.uleb128 0x49
 3086 012c 13       		.uleb128 0x13
 3087 012d 00       		.byte	0
 3088 012e 00       		.byte	0
 3089 012f 00       		.byte	0
 3090              		.section	.debug_loc,"",%progbits
 3091              	.Ldebug_loc0:
 3092              	.LLST0:
 3093 0000 00000000 		.4byte	.LFB56
 3094 0004 02000000 		.4byte	.LCFI0
 3095 0008 0200     		.2byte	0x2
 3096 000a 7D       		.byte	0x7d
 3097 000b 00       		.sleb128 0
 3098 000c 02000000 		.4byte	.LCFI0
 3099 0010 04000000 		.4byte	.LCFI1
 3100 0014 0200     		.2byte	0x2
 3101 0016 7D       		.byte	0x7d
 3102 0017 08       		.sleb128 8
 3103 0018 04000000 		.4byte	.LCFI1
 3104 001c 06000000 		.4byte	.LCFI2
 3105 0020 0200     		.2byte	0x2
 3106 0022 7D       		.byte	0x7d
 3107 0023 10       		.sleb128 16
 3108 0024 06000000 		.4byte	.LCFI2
 3109 0028 2E000000 		.4byte	.LFE56
 3110 002c 0200     		.2byte	0x2
 3111 002e 77       		.byte	0x77
 3112 002f 10       		.sleb128 16
 3113 0030 00000000 		.4byte	0
 3114 0034 00000000 		.4byte	0
 3115              	.LLST1:
 3116 0038 00000000 		.4byte	.LFB57
 3117 003c 02000000 		.4byte	.LCFI3
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 74


 3118 0040 0200     		.2byte	0x2
 3119 0042 7D       		.byte	0x7d
 3120 0043 00       		.sleb128 0
 3121 0044 02000000 		.4byte	.LCFI3
 3122 0048 04000000 		.4byte	.LCFI4
 3123 004c 0200     		.2byte	0x2
 3124 004e 7D       		.byte	0x7d
 3125 004f 08       		.sleb128 8
 3126 0050 04000000 		.4byte	.LCFI4
 3127 0054 06000000 		.4byte	.LCFI5
 3128 0058 0200     		.2byte	0x2
 3129 005a 7D       		.byte	0x7d
 3130 005b 18       		.sleb128 24
 3131 005c 06000000 		.4byte	.LCFI5
 3132 0060 24010000 		.4byte	.LFE57
 3133 0064 0200     		.2byte	0x2
 3134 0066 77       		.byte	0x77
 3135 0067 18       		.sleb128 24
 3136 0068 00000000 		.4byte	0
 3137 006c 00000000 		.4byte	0
 3138              	.LLST2:
 3139 0070 00000000 		.4byte	.LFB58
 3140 0074 02000000 		.4byte	.LCFI6
 3141 0078 0200     		.2byte	0x2
 3142 007a 7D       		.byte	0x7d
 3143 007b 00       		.sleb128 0
 3144 007c 02000000 		.4byte	.LCFI6
 3145 0080 06000000 		.4byte	.LCFI7
 3146 0084 0200     		.2byte	0x2
 3147 0086 7D       		.byte	0x7d
 3148 0087 10       		.sleb128 16
 3149 0088 06000000 		.4byte	.LCFI7
 3150 008c 08000000 		.4byte	.LCFI8
 3151 0090 0300     		.2byte	0x3
 3152 0092 7D       		.byte	0x7d
 3153 0093 E00C     		.sleb128 1632
 3154 0095 08000000 		.4byte	.LCFI8
 3155 0099 28050000 		.4byte	.LFE58
 3156 009d 0300     		.2byte	0x3
 3157 009f 77       		.byte	0x77
 3158 00a0 D80C     		.sleb128 1624
 3159 00a2 00000000 		.4byte	0
 3160 00a6 00000000 		.4byte	0
 3161              	.LLST3:
 3162 00aa 00000000 		.4byte	.LFB59
 3163 00ae 02000000 		.4byte	.LCFI9
 3164 00b2 0200     		.2byte	0x2
 3165 00b4 7D       		.byte	0x7d
 3166 00b5 00       		.sleb128 0
 3167 00b6 02000000 		.4byte	.LCFI9
 3168 00ba 04000000 		.4byte	.LCFI10
 3169 00be 0200     		.2byte	0x2
 3170 00c0 7D       		.byte	0x7d
 3171 00c1 08       		.sleb128 8
 3172 00c2 04000000 		.4byte	.LCFI10
 3173 00c6 06000000 		.4byte	.LCFI11
 3174 00ca 0200     		.2byte	0x2
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 75


 3175 00cc 7D       		.byte	0x7d
 3176 00cd 10       		.sleb128 16
 3177 00ce 06000000 		.4byte	.LCFI11
 3178 00d2 96000000 		.4byte	.LFE59
 3179 00d6 0200     		.2byte	0x2
 3180 00d8 77       		.byte	0x77
 3181 00d9 10       		.sleb128 16
 3182 00da 00000000 		.4byte	0
 3183 00de 00000000 		.4byte	0
 3184              	.LLST4:
 3185 00e2 00000000 		.4byte	.LFB60
 3186 00e6 02000000 		.4byte	.LCFI12
 3187 00ea 0200     		.2byte	0x2
 3188 00ec 7D       		.byte	0x7d
 3189 00ed 00       		.sleb128 0
 3190 00ee 02000000 		.4byte	.LCFI12
 3191 00f2 04000000 		.4byte	.LCFI13
 3192 00f6 0200     		.2byte	0x2
 3193 00f8 7D       		.byte	0x7d
 3194 00f9 08       		.sleb128 8
 3195 00fa 04000000 		.4byte	.LCFI13
 3196 00fe 06000000 		.4byte	.LCFI14
 3197 0102 0200     		.2byte	0x2
 3198 0104 7D       		.byte	0x7d
 3199 0105 28       		.sleb128 40
 3200 0106 06000000 		.4byte	.LCFI14
 3201 010a A2000000 		.4byte	.LFE60
 3202 010e 0200     		.2byte	0x2
 3203 0110 77       		.byte	0x77
 3204 0111 18       		.sleb128 24
 3205 0112 00000000 		.4byte	0
 3206 0116 00000000 		.4byte	0
 3207              		.section	.debug_aranges,"",%progbits
 3208 0000 3C000000 		.4byte	0x3c
 3209 0004 0200     		.2byte	0x2
 3210 0006 00000000 		.4byte	.Ldebug_info0
 3211 000a 04       		.byte	0x4
 3212 000b 00       		.byte	0
 3213 000c 0000     		.2byte	0
 3214 000e 0000     		.2byte	0
 3215 0010 00000000 		.4byte	.LFB56
 3216 0014 2E000000 		.4byte	.LFE56-.LFB56
 3217 0018 00000000 		.4byte	.LFB57
 3218 001c 24010000 		.4byte	.LFE57-.LFB57
 3219 0020 00000000 		.4byte	.LFB58
 3220 0024 28050000 		.4byte	.LFE58-.LFB58
 3221 0028 00000000 		.4byte	.LFB59
 3222 002c 96000000 		.4byte	.LFE59-.LFB59
 3223 0030 00000000 		.4byte	.LFB60
 3224 0034 A2000000 		.4byte	.LFE60-.LFB60
 3225 0038 00000000 		.4byte	0
 3226 003c 00000000 		.4byte	0
 3227              		.section	.debug_ranges,"",%progbits
 3228              	.Ldebug_ranges0:
 3229 0000 00000000 		.4byte	.LFB56
 3230 0004 2E000000 		.4byte	.LFE56
 3231 0008 00000000 		.4byte	.LFB57
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 76


 3232 000c 24010000 		.4byte	.LFE57
 3233 0010 00000000 		.4byte	.LFB58
 3234 0014 28050000 		.4byte	.LFE58
 3235 0018 00000000 		.4byte	.LFB59
 3236 001c 96000000 		.4byte	.LFE59
 3237 0020 00000000 		.4byte	.LFB60
 3238 0024 A2000000 		.4byte	.LFE60
 3239 0028 00000000 		.4byte	0
 3240 002c 00000000 		.4byte	0
 3241              		.section	.debug_line,"",%progbits
 3242              	.Ldebug_line0:
 3243 0000 5B020000 		.section	.debug_str,"MS",%progbits,1
 3243      02000A01 
 3243      00000201 
 3243      FB0E0D00 
 3243      01010101 
 3244              	.LASF22:
 3245 0000 57415645 		.ascii	"WAVEDAC_Control\000"
 3245      4441435F 
 3245      436F6E74 
 3245      726F6C00 
 3246              	.LASF25:
 3247 0010 72657375 		.ascii	"result\000"
 3247      6C7400
 3248              	.LASF4:
 3249 0017 73686F72 		.ascii	"short int\000"
 3249      7420696E 
 3249      7400
 3250              	.LASF38:
 3251 0021 696E7075 		.ascii	"input\000"
 3251      7400
 3252              	.LASF41:
 3253 0027 6F75745F 		.ascii	"out_mid_hi\000"
 3253      6D69645F 
 3253      686900
 3254              	.LASF19:
 3255 0032 73697A65 		.ascii	"sizetype\000"
 3255      74797065 
 3255      00
 3256              	.LASF47:
 3257 003b 63757273 		.ascii	"cursor_x\000"
 3257      6F725F78 
 3257      00
 3258              	.LASF48:
 3259 0044 63757273 		.ascii	"cursor_y\000"
 3259      6F725F79 
 3259      00
 3260              	.LASF53:
 3261 004d 77726170 		.ascii	"wrap\000"
 3261      00
 3262              	.LASF35:
 3263 0052 6E657756 		.ascii	"newVal\000"
 3263      616C00
 3264              	.LASF42:
 3265 0059 6F75745F 		.ascii	"out_mid_lo\000"
 3265      6D69645F 
 3265      6C6F00
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 77


 3266              	.LASF28:
 3267 0064 47656E65 		.ascii	"Generate_Wave\000"
 3267      72617465 
 3267      5F576176 
 3267      6500
 3268              	.LASF21:
 3269 0072 72656164 		.ascii	"readData\000"
 3269      44617461 
 3269      00
 3270              	.LASF32:
 3271 007b 53415754 		.ascii	"SAWTOOTHWave\000"
 3271      4F4F5448 
 3271      57617665 
 3271      00
 3272              	.LASF14:
 3273 0088 75696E74 		.ascii	"uint16\000"
 3273      313600
 3274              	.LASF2:
 3275 008f 75696E74 		.ascii	"uint8_t\000"
 3275      385F7400 
 3276              	.LASF13:
 3277 0097 75696E74 		.ascii	"uint8\000"
 3277      3800
 3278              	.LASF52:
 3279 009d 726F7461 		.ascii	"rotation\000"
 3279      74696F6E 
 3279      00
 3280              	.LASF55:
 3281 00a6 5F686569 		.ascii	"_height\000"
 3281      67687400 
 3282              	.LASF60:
 3283 00ae 52656164 		.ascii	"ReadFrom_Pi\000"
 3283      46726F6D 
 3283      5F506900 
 3284              	.LASF58:
 3285 00ba 2E5C6D65 		.ascii	".\\mem1.c\000"
 3285      6D312E63 
 3285      00
 3286              	.LASF16:
 3287 00c3 666C6F61 		.ascii	"float\000"
 3287      7400
 3288              	.LASF51:
 3289 00c9 74657874 		.ascii	"textsize\000"
 3289      73697A65 
 3289      00
 3290              	.LASF10:
 3291 00d2 6C6F6E67 		.ascii	"long long int\000"
 3291      206C6F6E 
 3291      6720696E 
 3291      7400
 3292              	.LASF40:
 3293 00e0 6F75745F 		.ascii	"out_hi\000"
 3293      686900
 3294              	.LASF31:
 3295 00e7 54524941 		.ascii	"TRIANGLEWave\000"
 3295      4E474C45 
 3295      57617665 
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 78


 3295      00
 3296              	.LASF8:
 3297 00f4 6C6F6E67 		.ascii	"long int\000"
 3297      20696E74 
 3297      00
 3298              	.LASF49:
 3299 00fd 74657874 		.ascii	"textcolor\000"
 3299      636F6C6F 
 3299      7200
 3300              	.LASF20:
 3301 0107 61646472 		.ascii	"addr\000"
 3301      00
 3302              	.LASF46:
 3303 010c 77617665 		.ascii	"waveType\000"
 3303      54797065 
 3303      00
 3304              	.LASF54:
 3305 0115 5F776964 		.ascii	"_width\000"
 3305      746800
 3306              	.LASF43:
 3307 011c 6F75745F 		.ascii	"out_lo\000"
 3307      6C6F00
 3308              	.LASF57:
 3309 0123 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 3309      4320342E 
 3309      372E3320 
 3309      32303133 
 3309      30333132 
 3310 0156 616E6368 		.ascii	"anch revision 196615]\000"
 3310      20726576 
 3310      6973696F 
 3310      6E203139 
 3310      36363135 
 3311              	.LASF59:
 3312 016c 433A5C55 		.ascii	"C:\\Users\\Brian\\Dropbox\\RPiSoC\\Projects\\PSoC_2"
 3312      73657273 
 3312      5C427269 
 3312      616E5C44 
 3312      726F7062 
 3313 0199 5F50695C 		.ascii	"_Pi\\Wavedac_test.cydsn\000"
 3313      57617665 
 3313      6461635F 
 3313      74657374 
 3313      2E637964 
 3314              	.LASF44:
 3315 01b0 5350495F 		.ascii	"SPI_buffer\000"
 3315      62756666 
 3315      657200
 3316              	.LASF1:
 3317 01bb 756E7369 		.ascii	"unsigned char\000"
 3317      676E6564 
 3317      20636861 
 3317      7200
 3318              	.LASF0:
 3319 01c9 7369676E 		.ascii	"signed char\000"
 3319      65642063 
 3319      68617200 
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 79


 3320              	.LASF11:
 3321 01d5 6C6F6E67 		.ascii	"long long unsigned int\000"
 3321      206C6F6E 
 3321      6720756E 
 3321      7369676E 
 3321      65642069 
 3322              	.LASF12:
 3323 01ec 756E7369 		.ascii	"unsigned int\000"
 3323      676E6564 
 3323      20696E74 
 3323      00
 3324              	.LASF5:
 3325 01f9 75696E74 		.ascii	"uint16_t\000"
 3325      31365F74 
 3325      00
 3326              	.LASF39:
 3327 0202 57726974 		.ascii	"WriteTo_Pi\000"
 3327      65546F5F 
 3327      506900
 3328              	.LASF6:
 3329 020d 73686F72 		.ascii	"short unsigned int\000"
 3329      7420756E 
 3329      7369676E 
 3329      65642069 
 3329      6E7400
 3330              	.LASF18:
 3331 0220 63686172 		.ascii	"char\000"
 3331      00
 3332              	.LASF23:
 3333 0225 636C6B5F 		.ascii	"clk_prev\000"
 3333      70726576 
 3333      00
 3334              	.LASF7:
 3335 022e 696E7433 		.ascii	"int32_t\000"
 3335      325F7400 
 3336              	.LASF3:
 3337 0236 696E7431 		.ascii	"int16_t\000"
 3337      365F7400 
 3338              	.LASF27:
 3339 023e 5F426F6F 		.ascii	"_Bool\000"
 3339      6C00
 3340              	.LASF29:
 3341 0244 53494E45 		.ascii	"SINEWave\000"
 3341      57617665 
 3341      00
 3342              	.LASF45:
 3343 024d 62756666 		.ascii	"buffer\000"
 3343      657200
 3344              	.LASF26:
 3345 0254 72657475 		.ascii	"return_flag\000"
 3345      726E5F66 
 3345      6C616700 
 3346              	.LASF34:
 3347 0260 5A65726F 		.ascii	"Zeroes\000"
 3347      657300
 3348              	.LASF15:
 3349 0267 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\Brian\AppData\Local\Temp\ccI83sHf.s 			page 80


 3349      333200
 3350              	.LASF9:
 3351 026e 6C6F6E67 		.ascii	"long unsigned int\000"
 3351      20756E73 
 3351      69676E65 
 3351      6420696E 
 3351      7400
 3352              	.LASF17:
 3353 0280 646F7562 		.ascii	"double\000"
 3353      6C6500
 3354              	.LASF30:
 3355 0287 53515541 		.ascii	"SQUAREWave\000"
 3355      52455761 
 3355      766500
 3356              	.LASF24:
 3357 0292 636C6B5F 		.ascii	"clk_new\000"
 3357      6E657700 
 3358              	.LASF37:
 3359 029a 6461745F 		.ascii	"dat_hi\000"
 3359      686900
 3360              	.LASF56:
 3361 02a1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3361      52784275 
 3361      66666572 
 3361      00
 3362              	.LASF50:
 3363 02ae 74657874 		.ascii	"textbgcolor\000"
 3363      6267636F 
 3363      6C6F7200 
 3364              	.LASF33:
 3365 02ba 6E657757 		.ascii	"newWave\000"
 3365      61766500 
 3366              	.LASF36:
 3367 02c2 6461745F 		.ascii	"dat_lo\000"
 3367      6C6F00
 3368              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
